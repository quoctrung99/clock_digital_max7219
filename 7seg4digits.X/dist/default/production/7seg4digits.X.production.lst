

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 27 21:39:08 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F1509
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text16,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	text21,local,class=CODE,merge=1,inline,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	text25,local,class=CODE,merge=1,inline,delta=2
    42                           	psect	text26,local,class=CODE,merge=1,inline,delta=2
    43                           	psect	text27,local,class=CODE,merge=1,delta=2
    44                           	psect	text28,local,class=CODE,merge=1,delta=2
    45                           	psect	text29,local,class=CODE,merge=1,delta=2
    46                           	psect	text30,local,class=CODE,merge=1,delta=2
    47                           	psect	text31,local,class=CODE,merge=1,delta=2
    48                           	psect	text32,local,class=CODE,merge=1,delta=2
    49                           	psect	text33,local,class=CODE,merge=1,delta=2
    50                           	psect	text34,local,class=CODE,merge=1,delta=2
    51                           	psect	text35,local,class=CODE,merge=1,delta=2
    52                           	psect	text36,local,class=CODE,merge=1,delta=2
    53                           	psect	text37,local,class=CODE,merge=1,delta=2
    54                           	psect	text38,local,class=CODE,merge=1,delta=2
    55                           	psect	text39,local,class=CODE,merge=1,delta=2
    56                           	psect	text40,local,class=CODE,merge=1,delta=2
    57                           	psect	text41,local,class=CODE,merge=1,delta=2
    58                           	psect	text42,local,class=CODE,merge=1,delta=2
    59                           	psect	text43,local,class=CODE,merge=1,inline,delta=2
    60                           	psect	text44,local,class=CODE,merge=1,inline,delta=2
    61                           	psect	text45,local,class=CODE,merge=1,inline,delta=2
    62                           	psect	text46,local,class=CODE,merge=1,inline,delta=2
    63                           	psect	text47,local,class=CODE,merge=1,inline,delta=2
    64                           	psect	text48,local,class=CODE,merge=1,inline,delta=2
    65                           	psect	text49,local,class=CODE,merge=1,inline,delta=2
    66                           	psect	text50,local,class=CODE,merge=1,delta=2
    67                           	psect	text51,local,class=CODE,merge=1,delta=2
    68                           	psect	text52,local,class=CODE,merge=1,delta=2
    69                           	psect	text53,local,class=CODE,merge=1,delta=2
    70                           	psect	text54,local,class=CODE,merge=1,delta=2
    71                           	psect	text55,local,class=CODE,merge=1,delta=2
    72                           	psect	text56,local,class=CODE,merge=1,delta=2
    73                           	psect	text57,local,class=CODE,merge=1,delta=2
    74                           	psect	text58,local,class=CODE,merge=1,delta=2
    75                           	psect	text59,local,class=CODE,merge=1,delta=2
    76                           	psect	text60,local,class=CODE,merge=1,delta=2
    77                           	psect	text61,local,class=CODE,merge=1,delta=2
    78                           	psect	text62,local,class=CODE,merge=1,delta=2
    79                           	psect	text63,local,class=CODE,merge=1,delta=2
    80                           	psect	text64,local,class=CODE,merge=1,delta=2
    81                           	psect	text65,local,class=CODE,merge=1,inline,delta=2
    82                           	psect	text66,local,class=CODE,merge=1,inline,delta=2
    83                           	psect	text67,local,class=CODE,merge=1,inline,delta=2
    84                           	psect	text68,local,class=CODE,merge=1,delta=2
    85                           	psect	text69,local,class=CODE,merge=1,inline,delta=2
    86                           	psect	text70,local,class=CODE,merge=1,inline,delta=2
    87                           	psect	text71,local,class=CODE,merge=1,inline,delta=2
    88                           	psect	text72,local,class=CODE,merge=1,delta=2,group=1
    89                           	psect	text73,local,class=CODE,merge=1,delta=2,group=1
    90                           	psect	text74,local,class=CODE,merge=1,delta=2
    91                           	psect	text75,local,class=CODE,merge=1,delta=2
    92                           	psect	text76,local,class=CODE,merge=1,delta=2
    93                           	psect	text77,local,class=CODE,merge=1,delta=2
    94                           	psect	text78,local,class=CODE,merge=1,delta=2
    95                           	psect	text79,local,class=CODE,merge=1,delta=2
    96                           	psect	text80,local,class=CODE,merge=1,delta=2
    97                           	psect	text81,local,class=CODE,merge=1,delta=2
    98                           	psect	text82,local,class=CODE,merge=1,delta=2
    99                           	psect	text83,local,class=CODE,merge=1,delta=2
   100                           	psect	text84,local,class=CODE,merge=1,delta=2
   101                           	psect	text85,local,class=CODE,merge=1,delta=2
   102                           	psect	text86,local,class=CODE,merge=1,delta=2
   103                           	psect	text87,local,class=CODE,merge=1,delta=2
   104                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
   105                           	dabs	1,0x7E,2
   106  0000                     
   107                           ; Version 2.20
   108                           ; Generated 12/02/2020 GMT
   109                           ; 
   110                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   111                           ; All rights reserved.
   112                           ; 
   113                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   114                           ; 
   115                           ; Redistribution and use in source and binary forms, with or without modification, are
   116                           ; permitted provided that the following conditions are met:
   117                           ; 
   118                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   119                           ;        conditions and the following disclaimer.
   120                           ; 
   121                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   122                           ;        of conditions and the following disclaimer in the documentation and/or other
   123                           ;        materials provided with the distribution.
   124                           ; 
   125                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   126                           ;        software without specific prior written permission.
   127                           ; 
   128                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   129                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   130                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   131                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   132                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   133                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   134                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   135                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   136                           ; 
   137                           ; 
   138                           ; Code-generator required, PIC16F1509 Definitions
   139                           ; 
   140                           ; SFR Addresses
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0016                     	;# 
   162  0017                     	;# 
   163  0018                     	;# 
   164  0019                     	;# 
   165  001A                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0095                     	;# 
   175  0096                     	;# 
   176  0097                     	;# 
   177  0099                     	;# 
   178  009A                     	;# 
   179  009B                     	;# 
   180  009B                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  0111                     	;# 
   189  0112                     	;# 
   190  0113                     	;# 
   191  0114                     	;# 
   192  0115                     	;# 
   193  0116                     	;# 
   194  0117                     	;# 
   195  0118                     	;# 
   196  0119                     	;# 
   197  011D                     	;# 
   198  018C                     	;# 
   199  018D                     	;# 
   200  018E                     	;# 
   201  0191                     	;# 
   202  0191                     	;# 
   203  0192                     	;# 
   204  0193                     	;# 
   205  0193                     	;# 
   206  0194                     	;# 
   207  0195                     	;# 
   208  0196                     	;# 
   209  0197                     	;# 
   210  0199                     	;# 
   211  019A                     	;# 
   212  019B                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  019D                     	;# 
   216  019E                     	;# 
   217  019F                     	;# 
   218  020C                     	;# 
   219  020D                     	;# 
   220  0211                     	;# 
   221  0211                     	;# 
   222  0212                     	;# 
   223  0212                     	;# 
   224  0213                     	;# 
   225  0213                     	;# 
   226  0214                     	;# 
   227  0214                     	;# 
   228  0215                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0216                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0217                     	;# 
   235  0391                     	;# 
   236  0392                     	;# 
   237  0393                     	;# 
   238  0394                     	;# 
   239  0395                     	;# 
   240  0396                     	;# 
   241  0498                     	;# 
   242  0498                     	;# 
   243  0499                     	;# 
   244  049A                     	;# 
   245  049B                     	;# 
   246  049B                     	;# 
   247  049C                     	;# 
   248  049D                     	;# 
   249  049E                     	;# 
   250  049F                     	;# 
   251  0611                     	;# 
   252  0612                     	;# 
   253  0613                     	;# 
   254  0613                     	;# 
   255  0614                     	;# 
   256  0615                     	;# 
   257  0616                     	;# 
   258  0616                     	;# 
   259  0617                     	;# 
   260  0618                     	;# 
   261  0619                     	;# 
   262  0619                     	;# 
   263  061A                     	;# 
   264  061B                     	;# 
   265  061C                     	;# 
   266  061C                     	;# 
   267  0691                     	;# 
   268  0692                     	;# 
   269  0693                     	;# 
   270  0694                     	;# 
   271  0695                     	;# 
   272  0F0F                     	;# 
   273  0F10                     	;# 
   274  0F11                     	;# 
   275  0F12                     	;# 
   276  0F13                     	;# 
   277  0F14                     	;# 
   278  0F15                     	;# 
   279  0F16                     	;# 
   280  0F17                     	;# 
   281  0F18                     	;# 
   282  0F19                     	;# 
   283  0F1A                     	;# 
   284  0F1B                     	;# 
   285  0F1C                     	;# 
   286  0F1D                     	;# 
   287  0F1E                     	;# 
   288  0F1F                     	;# 
   289  0F20                     	;# 
   290  0F21                     	;# 
   291  0F22                     	;# 
   292  0F23                     	;# 
   293  0F24                     	;# 
   294  0F25                     	;# 
   295  0F26                     	;# 
   296  0F27                     	;# 
   297  0F28                     	;# 
   298  0F29                     	;# 
   299  0F2A                     	;# 
   300  0F2B                     	;# 
   301  0F2C                     	;# 
   302  0F2D                     	;# 
   303  0F2E                     	;# 
   304  0F2F                     	;# 
   305  0F8C                     	;# 
   306  0F8D                     	;# 
   307  0F91                     	;# 
   308  0F95                     	;# 
   309  0F96                     	;# 
   310  0F97                     	;# 
   311  0F9C                     	;# 
   312  0F9D                     	;# 
   313  0F9E                     	;# 
   314  0FE3                     	;# 
   315  0FE4                     	;# 
   316  0FE5                     	;# 
   317  0FE6                     	;# 
   318  0FE7                     	;# 
   319  0FE8                     	;# 
   320  0FE9                     	;# 
   321  0FEA                     	;# 
   322  0FEB                     	;# 
   323  0FED                     	;# 
   324  0FEE                     	;# 
   325  0FEF                     	;# 
   326  0000                     	;# 
   327  0001                     	;# 
   328  0002                     	;# 
   329  0003                     	;# 
   330  0004                     	;# 
   331  0005                     	;# 
   332  0006                     	;# 
   333  0007                     	;# 
   334  0008                     	;# 
   335  0009                     	;# 
   336  000A                     	;# 
   337  000B                     	;# 
   338  000C                     	;# 
   339  000D                     	;# 
   340  000E                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0016                     	;# 
   347  0017                     	;# 
   348  0018                     	;# 
   349  0019                     	;# 
   350  001A                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  008C                     	;# 
   354  008D                     	;# 
   355  008E                     	;# 
   356  0091                     	;# 
   357  0092                     	;# 
   358  0093                     	;# 
   359  0095                     	;# 
   360  0096                     	;# 
   361  0097                     	;# 
   362  0099                     	;# 
   363  009A                     	;# 
   364  009B                     	;# 
   365  009B                     	;# 
   366  009C                     	;# 
   367  009D                     	;# 
   368  009E                     	;# 
   369  009F                     	;# 
   370  010C                     	;# 
   371  010D                     	;# 
   372  010E                     	;# 
   373  0111                     	;# 
   374  0112                     	;# 
   375  0113                     	;# 
   376  0114                     	;# 
   377  0115                     	;# 
   378  0116                     	;# 
   379  0117                     	;# 
   380  0118                     	;# 
   381  0119                     	;# 
   382  011D                     	;# 
   383  018C                     	;# 
   384  018D                     	;# 
   385  018E                     	;# 
   386  0191                     	;# 
   387  0191                     	;# 
   388  0192                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0194                     	;# 
   392  0195                     	;# 
   393  0196                     	;# 
   394  0197                     	;# 
   395  0199                     	;# 
   396  019A                     	;# 
   397  019B                     	;# 
   398  019B                     	;# 
   399  019C                     	;# 
   400  019D                     	;# 
   401  019E                     	;# 
   402  019F                     	;# 
   403  020C                     	;# 
   404  020D                     	;# 
   405  0211                     	;# 
   406  0211                     	;# 
   407  0212                     	;# 
   408  0212                     	;# 
   409  0213                     	;# 
   410  0213                     	;# 
   411  0214                     	;# 
   412  0214                     	;# 
   413  0215                     	;# 
   414  0215                     	;# 
   415  0215                     	;# 
   416  0216                     	;# 
   417  0216                     	;# 
   418  0217                     	;# 
   419  0217                     	;# 
   420  0391                     	;# 
   421  0392                     	;# 
   422  0393                     	;# 
   423  0394                     	;# 
   424  0395                     	;# 
   425  0396                     	;# 
   426  0498                     	;# 
   427  0498                     	;# 
   428  0499                     	;# 
   429  049A                     	;# 
   430  049B                     	;# 
   431  049B                     	;# 
   432  049C                     	;# 
   433  049D                     	;# 
   434  049E                     	;# 
   435  049F                     	;# 
   436  0611                     	;# 
   437  0612                     	;# 
   438  0613                     	;# 
   439  0613                     	;# 
   440  0614                     	;# 
   441  0615                     	;# 
   442  0616                     	;# 
   443  0616                     	;# 
   444  0617                     	;# 
   445  0618                     	;# 
   446  0619                     	;# 
   447  0619                     	;# 
   448  061A                     	;# 
   449  061B                     	;# 
   450  061C                     	;# 
   451  061C                     	;# 
   452  0691                     	;# 
   453  0692                     	;# 
   454  0693                     	;# 
   455  0694                     	;# 
   456  0695                     	;# 
   457  0F0F                     	;# 
   458  0F10                     	;# 
   459  0F11                     	;# 
   460  0F12                     	;# 
   461  0F13                     	;# 
   462  0F14                     	;# 
   463  0F15                     	;# 
   464  0F16                     	;# 
   465  0F17                     	;# 
   466  0F18                     	;# 
   467  0F19                     	;# 
   468  0F1A                     	;# 
   469  0F1B                     	;# 
   470  0F1C                     	;# 
   471  0F1D                     	;# 
   472  0F1E                     	;# 
   473  0F1F                     	;# 
   474  0F20                     	;# 
   475  0F21                     	;# 
   476  0F22                     	;# 
   477  0F23                     	;# 
   478  0F24                     	;# 
   479  0F25                     	;# 
   480  0F26                     	;# 
   481  0F27                     	;# 
   482  0F28                     	;# 
   483  0F29                     	;# 
   484  0F2A                     	;# 
   485  0F2B                     	;# 
   486  0F2C                     	;# 
   487  0F2D                     	;# 
   488  0F2E                     	;# 
   489  0F2F                     	;# 
   490  0F8C                     	;# 
   491  0F8D                     	;# 
   492  0F91                     	;# 
   493  0F95                     	;# 
   494  0F96                     	;# 
   495  0F97                     	;# 
   496  0F9C                     	;# 
   497  0F9D                     	;# 
   498  0F9E                     	;# 
   499  0FE3                     	;# 
   500  0FE4                     	;# 
   501  0FE5                     	;# 
   502  0FE6                     	;# 
   503  0FE7                     	;# 
   504  0FE8                     	;# 
   505  0FE9                     	;# 
   506  0FEA                     	;# 
   507  0FEB                     	;# 
   508  0FED                     	;# 
   509  0FEE                     	;# 
   510  0FEF                     	;# 
   511  0000                     	;# 
   512  0001                     	;# 
   513  0002                     	;# 
   514  0003                     	;# 
   515  0004                     	;# 
   516  0005                     	;# 
   517  0006                     	;# 
   518  0007                     	;# 
   519  0008                     	;# 
   520  0009                     	;# 
   521  000A                     	;# 
   522  000B                     	;# 
   523  000C                     	;# 
   524  000D                     	;# 
   525  000E                     	;# 
   526  0011                     	;# 
   527  0012                     	;# 
   528  0013                     	;# 
   529  0015                     	;# 
   530  0016                     	;# 
   531  0016                     	;# 
   532  0017                     	;# 
   533  0018                     	;# 
   534  0019                     	;# 
   535  001A                     	;# 
   536  001B                     	;# 
   537  001C                     	;# 
   538  008C                     	;# 
   539  008D                     	;# 
   540  008E                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0093                     	;# 
   544  0095                     	;# 
   545  0096                     	;# 
   546  0097                     	;# 
   547  0099                     	;# 
   548  009A                     	;# 
   549  009B                     	;# 
   550  009B                     	;# 
   551  009C                     	;# 
   552  009D                     	;# 
   553  009E                     	;# 
   554  009F                     	;# 
   555  010C                     	;# 
   556  010D                     	;# 
   557  010E                     	;# 
   558  0111                     	;# 
   559  0112                     	;# 
   560  0113                     	;# 
   561  0114                     	;# 
   562  0115                     	;# 
   563  0116                     	;# 
   564  0117                     	;# 
   565  0118                     	;# 
   566  0119                     	;# 
   567  011D                     	;# 
   568  018C                     	;# 
   569  018D                     	;# 
   570  018E                     	;# 
   571  0191                     	;# 
   572  0191                     	;# 
   573  0192                     	;# 
   574  0193                     	;# 
   575  0193                     	;# 
   576  0194                     	;# 
   577  0195                     	;# 
   578  0196                     	;# 
   579  0197                     	;# 
   580  0199                     	;# 
   581  019A                     	;# 
   582  019B                     	;# 
   583  019B                     	;# 
   584  019C                     	;# 
   585  019D                     	;# 
   586  019E                     	;# 
   587  019F                     	;# 
   588  020C                     	;# 
   589  020D                     	;# 
   590  0211                     	;# 
   591  0211                     	;# 
   592  0212                     	;# 
   593  0212                     	;# 
   594  0213                     	;# 
   595  0213                     	;# 
   596  0214                     	;# 
   597  0214                     	;# 
   598  0215                     	;# 
   599  0215                     	;# 
   600  0215                     	;# 
   601  0216                     	;# 
   602  0216                     	;# 
   603  0217                     	;# 
   604  0217                     	;# 
   605  0391                     	;# 
   606  0392                     	;# 
   607  0393                     	;# 
   608  0394                     	;# 
   609  0395                     	;# 
   610  0396                     	;# 
   611  0498                     	;# 
   612  0498                     	;# 
   613  0499                     	;# 
   614  049A                     	;# 
   615  049B                     	;# 
   616  049B                     	;# 
   617  049C                     	;# 
   618  049D                     	;# 
   619  049E                     	;# 
   620  049F                     	;# 
   621  0611                     	;# 
   622  0612                     	;# 
   623  0613                     	;# 
   624  0613                     	;# 
   625  0614                     	;# 
   626  0615                     	;# 
   627  0616                     	;# 
   628  0616                     	;# 
   629  0617                     	;# 
   630  0618                     	;# 
   631  0619                     	;# 
   632  0619                     	;# 
   633  061A                     	;# 
   634  061B                     	;# 
   635  061C                     	;# 
   636  061C                     	;# 
   637  0691                     	;# 
   638  0692                     	;# 
   639  0693                     	;# 
   640  0694                     	;# 
   641  0695                     	;# 
   642  0F0F                     	;# 
   643  0F10                     	;# 
   644  0F11                     	;# 
   645  0F12                     	;# 
   646  0F13                     	;# 
   647  0F14                     	;# 
   648  0F15                     	;# 
   649  0F16                     	;# 
   650  0F17                     	;# 
   651  0F18                     	;# 
   652  0F19                     	;# 
   653  0F1A                     	;# 
   654  0F1B                     	;# 
   655  0F1C                     	;# 
   656  0F1D                     	;# 
   657  0F1E                     	;# 
   658  0F1F                     	;# 
   659  0F20                     	;# 
   660  0F21                     	;# 
   661  0F22                     	;# 
   662  0F23                     	;# 
   663  0F24                     	;# 
   664  0F25                     	;# 
   665  0F26                     	;# 
   666  0F27                     	;# 
   667  0F28                     	;# 
   668  0F29                     	;# 
   669  0F2A                     	;# 
   670  0F2B                     	;# 
   671  0F2C                     	;# 
   672  0F2D                     	;# 
   673  0F2E                     	;# 
   674  0F2F                     	;# 
   675  0F8C                     	;# 
   676  0F8D                     	;# 
   677  0F91                     	;# 
   678  0F95                     	;# 
   679  0F96                     	;# 
   680  0F97                     	;# 
   681  0F9C                     	;# 
   682  0F9D                     	;# 
   683  0F9E                     	;# 
   684  0FE3                     	;# 
   685  0FE4                     	;# 
   686  0FE5                     	;# 
   687  0FE6                     	;# 
   688  0FE7                     	;# 
   689  0FE8                     	;# 
   690  0FE9                     	;# 
   691  0FEA                     	;# 
   692  0FEB                     	;# 
   693  0FED                     	;# 
   694  0FEE                     	;# 
   695  0FEF                     	;# 
   696  0000                     	;# 
   697  0001                     	;# 
   698  0002                     	;# 
   699  0003                     	;# 
   700  0004                     	;# 
   701  0005                     	;# 
   702  0006                     	;# 
   703  0007                     	;# 
   704  0008                     	;# 
   705  0009                     	;# 
   706  000A                     	;# 
   707  000B                     	;# 
   708  000C                     	;# 
   709  000D                     	;# 
   710  000E                     	;# 
   711  0011                     	;# 
   712  0012                     	;# 
   713  0013                     	;# 
   714  0015                     	;# 
   715  0016                     	;# 
   716  0016                     	;# 
   717  0017                     	;# 
   718  0018                     	;# 
   719  0019                     	;# 
   720  001A                     	;# 
   721  001B                     	;# 
   722  001C                     	;# 
   723  008C                     	;# 
   724  008D                     	;# 
   725  008E                     	;# 
   726  0091                     	;# 
   727  0092                     	;# 
   728  0093                     	;# 
   729  0095                     	;# 
   730  0096                     	;# 
   731  0097                     	;# 
   732  0099                     	;# 
   733  009A                     	;# 
   734  009B                     	;# 
   735  009B                     	;# 
   736  009C                     	;# 
   737  009D                     	;# 
   738  009E                     	;# 
   739  009F                     	;# 
   740  010C                     	;# 
   741  010D                     	;# 
   742  010E                     	;# 
   743  0111                     	;# 
   744  0112                     	;# 
   745  0113                     	;# 
   746  0114                     	;# 
   747  0115                     	;# 
   748  0116                     	;# 
   749  0117                     	;# 
   750  0118                     	;# 
   751  0119                     	;# 
   752  011D                     	;# 
   753  018C                     	;# 
   754  018D                     	;# 
   755  018E                     	;# 
   756  0191                     	;# 
   757  0191                     	;# 
   758  0192                     	;# 
   759  0193                     	;# 
   760  0193                     	;# 
   761  0194                     	;# 
   762  0195                     	;# 
   763  0196                     	;# 
   764  0197                     	;# 
   765  0199                     	;# 
   766  019A                     	;# 
   767  019B                     	;# 
   768  019B                     	;# 
   769  019C                     	;# 
   770  019D                     	;# 
   771  019E                     	;# 
   772  019F                     	;# 
   773  020C                     	;# 
   774  020D                     	;# 
   775  0211                     	;# 
   776  0211                     	;# 
   777  0212                     	;# 
   778  0212                     	;# 
   779  0213                     	;# 
   780  0213                     	;# 
   781  0214                     	;# 
   782  0214                     	;# 
   783  0215                     	;# 
   784  0215                     	;# 
   785  0215                     	;# 
   786  0216                     	;# 
   787  0216                     	;# 
   788  0217                     	;# 
   789  0217                     	;# 
   790  0391                     	;# 
   791  0392                     	;# 
   792  0393                     	;# 
   793  0394                     	;# 
   794  0395                     	;# 
   795  0396                     	;# 
   796  0498                     	;# 
   797  0498                     	;# 
   798  0499                     	;# 
   799  049A                     	;# 
   800  049B                     	;# 
   801  049B                     	;# 
   802  049C                     	;# 
   803  049D                     	;# 
   804  049E                     	;# 
   805  049F                     	;# 
   806  0611                     	;# 
   807  0612                     	;# 
   808  0613                     	;# 
   809  0613                     	;# 
   810  0614                     	;# 
   811  0615                     	;# 
   812  0616                     	;# 
   813  0616                     	;# 
   814  0617                     	;# 
   815  0618                     	;# 
   816  0619                     	;# 
   817  0619                     	;# 
   818  061A                     	;# 
   819  061B                     	;# 
   820  061C                     	;# 
   821  061C                     	;# 
   822  0691                     	;# 
   823  0692                     	;# 
   824  0693                     	;# 
   825  0694                     	;# 
   826  0695                     	;# 
   827  0F0F                     	;# 
   828  0F10                     	;# 
   829  0F11                     	;# 
   830  0F12                     	;# 
   831  0F13                     	;# 
   832  0F14                     	;# 
   833  0F15                     	;# 
   834  0F16                     	;# 
   835  0F17                     	;# 
   836  0F18                     	;# 
   837  0F19                     	;# 
   838  0F1A                     	;# 
   839  0F1B                     	;# 
   840  0F1C                     	;# 
   841  0F1D                     	;# 
   842  0F1E                     	;# 
   843  0F1F                     	;# 
   844  0F20                     	;# 
   845  0F21                     	;# 
   846  0F22                     	;# 
   847  0F23                     	;# 
   848  0F24                     	;# 
   849  0F25                     	;# 
   850  0F26                     	;# 
   851  0F27                     	;# 
   852  0F28                     	;# 
   853  0F29                     	;# 
   854  0F2A                     	;# 
   855  0F2B                     	;# 
   856  0F2C                     	;# 
   857  0F2D                     	;# 
   858  0F2E                     	;# 
   859  0F2F                     	;# 
   860  0F8C                     	;# 
   861  0F8D                     	;# 
   862  0F91                     	;# 
   863  0F95                     	;# 
   864  0F96                     	;# 
   865  0F97                     	;# 
   866  0F9C                     	;# 
   867  0F9D                     	;# 
   868  0F9E                     	;# 
   869  0FE3                     	;# 
   870  0FE4                     	;# 
   871  0FE5                     	;# 
   872  0FE6                     	;# 
   873  0FE7                     	;# 
   874  0FE8                     	;# 
   875  0FE9                     	;# 
   876  0FEA                     	;# 
   877  0FEB                     	;# 
   878  0FED                     	;# 
   879  0FEE                     	;# 
   880  0FEF                     	;# 
   881  0000                     	;# 
   882  0001                     	;# 
   883  0002                     	;# 
   884  0003                     	;# 
   885  0004                     	;# 
   886  0005                     	;# 
   887  0006                     	;# 
   888  0007                     	;# 
   889  0008                     	;# 
   890  0009                     	;# 
   891  000A                     	;# 
   892  000B                     	;# 
   893  000C                     	;# 
   894  000D                     	;# 
   895  000E                     	;# 
   896  0011                     	;# 
   897  0012                     	;# 
   898  0013                     	;# 
   899  0015                     	;# 
   900  0016                     	;# 
   901  0016                     	;# 
   902  0017                     	;# 
   903  0018                     	;# 
   904  0019                     	;# 
   905  001A                     	;# 
   906  001B                     	;# 
   907  001C                     	;# 
   908  008C                     	;# 
   909  008D                     	;# 
   910  008E                     	;# 
   911  0091                     	;# 
   912  0092                     	;# 
   913  0093                     	;# 
   914  0095                     	;# 
   915  0096                     	;# 
   916  0097                     	;# 
   917  0099                     	;# 
   918  009A                     	;# 
   919  009B                     	;# 
   920  009B                     	;# 
   921  009C                     	;# 
   922  009D                     	;# 
   923  009E                     	;# 
   924  009F                     	;# 
   925  010C                     	;# 
   926  010D                     	;# 
   927  010E                     	;# 
   928  0111                     	;# 
   929  0112                     	;# 
   930  0113                     	;# 
   931  0114                     	;# 
   932  0115                     	;# 
   933  0116                     	;# 
   934  0117                     	;# 
   935  0118                     	;# 
   936  0119                     	;# 
   937  011D                     	;# 
   938  018C                     	;# 
   939  018D                     	;# 
   940  018E                     	;# 
   941  0191                     	;# 
   942  0191                     	;# 
   943  0192                     	;# 
   944  0193                     	;# 
   945  0193                     	;# 
   946  0194                     	;# 
   947  0195                     	;# 
   948  0196                     	;# 
   949  0197                     	;# 
   950  0199                     	;# 
   951  019A                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019C                     	;# 
   955  019D                     	;# 
   956  019E                     	;# 
   957  019F                     	;# 
   958  020C                     	;# 
   959  020D                     	;# 
   960  0211                     	;# 
   961  0211                     	;# 
   962  0212                     	;# 
   963  0212                     	;# 
   964  0213                     	;# 
   965  0213                     	;# 
   966  0214                     	;# 
   967  0214                     	;# 
   968  0215                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0216                     	;# 
   972  0216                     	;# 
   973  0217                     	;# 
   974  0217                     	;# 
   975  0391                     	;# 
   976  0392                     	;# 
   977  0393                     	;# 
   978  0394                     	;# 
   979  0395                     	;# 
   980  0396                     	;# 
   981  0498                     	;# 
   982  0498                     	;# 
   983  0499                     	;# 
   984  049A                     	;# 
   985  049B                     	;# 
   986  049B                     	;# 
   987  049C                     	;# 
   988  049D                     	;# 
   989  049E                     	;# 
   990  049F                     	;# 
   991  0611                     	;# 
   992  0612                     	;# 
   993  0613                     	;# 
   994  0613                     	;# 
   995  0614                     	;# 
   996  0615                     	;# 
   997  0616                     	;# 
   998  0616                     	;# 
   999  0617                     	;# 
  1000  0618                     	;# 
  1001  0619                     	;# 
  1002  0619                     	;# 
  1003  061A                     	;# 
  1004  061B                     	;# 
  1005  061C                     	;# 
  1006  061C                     	;# 
  1007  0691                     	;# 
  1008  0692                     	;# 
  1009  0693                     	;# 
  1010  0694                     	;# 
  1011  0695                     	;# 
  1012  0F0F                     	;# 
  1013  0F10                     	;# 
  1014  0F11                     	;# 
  1015  0F12                     	;# 
  1016  0F13                     	;# 
  1017  0F14                     	;# 
  1018  0F15                     	;# 
  1019  0F16                     	;# 
  1020  0F17                     	;# 
  1021  0F18                     	;# 
  1022  0F19                     	;# 
  1023  0F1A                     	;# 
  1024  0F1B                     	;# 
  1025  0F1C                     	;# 
  1026  0F1D                     	;# 
  1027  0F1E                     	;# 
  1028  0F1F                     	;# 
  1029  0F20                     	;# 
  1030  0F21                     	;# 
  1031  0F22                     	;# 
  1032  0F23                     	;# 
  1033  0F24                     	;# 
  1034  0F25                     	;# 
  1035  0F26                     	;# 
  1036  0F27                     	;# 
  1037  0F28                     	;# 
  1038  0F29                     	;# 
  1039  0F2A                     	;# 
  1040  0F2B                     	;# 
  1041  0F2C                     	;# 
  1042  0F2D                     	;# 
  1043  0F2E                     	;# 
  1044  0F2F                     	;# 
  1045  0F8C                     	;# 
  1046  0F8D                     	;# 
  1047  0F91                     	;# 
  1048  0F95                     	;# 
  1049  0F96                     	;# 
  1050  0F97                     	;# 
  1051  0F9C                     	;# 
  1052  0F9D                     	;# 
  1053  0F9E                     	;# 
  1054  0FE3                     	;# 
  1055  0FE4                     	;# 
  1056  0FE5                     	;# 
  1057  0FE6                     	;# 
  1058  0FE7                     	;# 
  1059  0FE8                     	;# 
  1060  0FE9                     	;# 
  1061  0FEA                     	;# 
  1062  0FEB                     	;# 
  1063  0FED                     	;# 
  1064  0FEE                     	;# 
  1065  0FEF                     	;# 
  1066                           
  1067 ;; Function _EUSART_DefaultFramingErrorHandler is unused but had its address taken
  1068  0000                     
  1069 ;; Function _EUSART_DefaultOverrunErrorHandler is unused but had its address taken
  1070  0000                     
  1071 ;; Function _EUSART_DefaultErrorHandler is unused but had its address taken
  1072  0000                     
  1073                           	psect	idataBANK0
  1074  0E5E                     __pidataBANK0:
  1075                           
  1076                           ;initializer for _digits
  1077  0E5E  347E               	retlw	126
  1078  0E5F  3430               	retlw	48
  1079  0E60  346D               	retlw	109
  1080  0E61  3479               	retlw	121
  1081  0E62  3433               	retlw	51
  1082  0E63  345B               	retlw	91
  1083  0E64  345F               	retlw	95
  1084  0E65  3470               	retlw	112
  1085  0E66  347F               	retlw	127
  1086  0E67  347B               	retlw	123
  1087  0E68  3463               	retlw	99
  1088  0E69  344E               	retlw	78
  1089                           
  1090                           	psect	stringtext1
  1091  0800                     __pstringtext1:
  1092  0800                     _i2c_fsmStateTable:
  1093  0800  34DA               	retlw	low _I2C_DO_IDLE
  1094  0801  340D               	retlw	high _I2C_DO_IDLE
  1095  0802  344B               	retlw	low _I2C_DO_SEND_ADR_READ
  1096  0803  340E               	retlw	high _I2C_DO_SEND_ADR_READ
  1097  0804  3443               	retlw	low _I2C_DO_SEND_ADR_WRITE
  1098  0805  340E               	retlw	high _I2C_DO_SEND_ADR_WRITE
  1099  0806  345F               	retlw	low _I2C_DO_TX
  1100  0807  3404               	retlw	high _I2C_DO_TX
  1101  0808  3476               	retlw	low _I2C_DO_RX
  1102  0809  3403               	retlw	high _I2C_DO_RX
  1103  080A  343C               	retlw	low _I2C_DO_RCEN
  1104  080B  340E               	retlw	high _I2C_DO_RCEN
  1105  080C  3434               	retlw	low _I2C_DO_TX_EMPTY
  1106  080D  3402               	retlw	high _I2C_DO_TX_EMPTY
  1107  080E  34DF               	retlw	low _I2C_DO_SEND_RESTART_READ
  1108  080F  340D               	retlw	high _I2C_DO_SEND_RESTART_READ
  1109  0810  34E4               	retlw	low _I2C_DO_SEND_RESTART_WRITE
  1110  0811  340D               	retlw	high _I2C_DO_SEND_RESTART_WRITE
  1111  0812  34E9               	retlw	low _I2C_DO_SEND_RESTART
  1112  0813  340D               	retlw	high _I2C_DO_SEND_RESTART
  1113  0814  34EE               	retlw	low _I2C_DO_SEND_STOP
  1114  0815  340D               	retlw	high _I2C_DO_SEND_STOP
  1115  0816  34F3               	retlw	low _I2C_DO_RX_ACK
  1116  0817  340D               	retlw	high _I2C_DO_RX_ACK
  1117  0818  34F8               	retlw	low _I2C_DO_RX_NACK_STOP
  1118  0819  340D               	retlw	high _I2C_DO_RX_NACK_STOP
  1119  081A  34FD               	retlw	low _I2C_DO_RX_NACK_RESTART
  1120  081B  340D               	retlw	high _I2C_DO_RX_NACK_RESTART
  1121  081C  3402               	retlw	low _I2C_DO_RESET
  1122  081D  340E               	retlw	high _I2C_DO_RESET
  1123  081E  34DA               	retlw	low _I2C_DO_ADDRESS_NACK
  1124  081F  3401               	retlw	high _I2C_DO_ADDRESS_NACK
  1125  0820                     __end_of_i2c_fsmStateTable:
  1126                           
  1127                           	psect	nvBANK0
  1128  006B                     __pnvBANK0:
  1129  006B                     _EUSART_OverrunErrorHandler:
  1130  006B                     	ds	2
  1131  006D                     _EUSART_FramingErrorHandler:
  1132  006D                     	ds	2
  1133                           
  1134                           	psect	nvBANK1
  1135  00A0                     __pnvBANK1:
  1136  00A0                     _EUSART_ErrorHandler:
  1137  00A0                     	ds	2
  1138  0018                     _T1CON	set	24
  1139  000C                     _PORTAbits	set	12
  1140  0016                     _TMR1L	set	22
  1141  0017                     _TMR1H	set	23
  1142  000E                     _PORTCbits	set	14
  1143  0011                     _PIR1bits	set	17
  1144  0012                     _PIR2bits	set	18
  1145  00C0                     _TMR1ON	set	192
  1146  008C                     _TRISAbits	set	140
  1147  008E                     _TRISCbits	set	142
  1148  0091                     _PIE1bits	set	145
  1149  0097                     _WDTCON	set	151
  1150  0099                     _OSCCON	set	153
  1151  0095                     _OPTION_REGbits	set	149
  1152  008E                     _TRISC	set	142
  1153  008D                     _TRISB	set	141
  1154  008C                     _TRISA	set	140
  1155  010E                     _LATCbits	set	270
  1156  0116                     _BORCON	set	278
  1157  011D                     _APFCON	set	285
  1158  010E                     _LATC	set	270
  1159  010D                     _LATB	set	269
  1160  010C                     _LATA	set	268
  1161  019A                     _TXREG	set	410
  1162  0199                     _RCREG	set	409
  1163  019D                     _RCSTAbits	set	413
  1164  019E                     _TXSTAbits	set	414
  1165  019C                     _SPBRGH	set	412
  1166  019B                     _SPBRGL	set	411
  1167  019E                     _TXSTA	set	414
  1168  019D                     _RCSTA	set	413
  1169  019F                     _BAUDCON	set	415
  1170  018C                     _ANSELA	set	396
  1171  018D                     _ANSELB	set	397
  1172  018E                     _ANSELC	set	398
  1173  0214                     _SSP1STATbits	set	532
  1174  0216                     _SSP1CON2bits	set	534
  1175  0211                     _SSP1BUF	set	529
  1176  0215                     _SSP1CON1bits	set	533
  1177  0212                     _SSP1ADD	set	530
  1178  0216                     _SSP1CON2	set	534
  1179  0215                     _SSP1CON1	set	533
  1180  0214                     _SSP1STAT	set	532
  1181  020C                     _WPUA	set	524
  1182  020D                     _WPUB	set	525
  1183                           
  1184                           	psect	cinit
  1185  07E8                     start_initialization:	
  1186                           ; #config settings
  1187                           
  1188  07E8                     __initialization:
  1189                           
  1190                           ; Initialize objects allocated to BANK0
  1191  07E8  305E               	movlw	low __pidataBANK0
  1192  07E9  0084               	movwf	4
  1193  07EA  308E               	movlw	(high __pidataBANK0)| (0+128)
  1194  07EB  0085               	movwf	5
  1195  07EC  305F               	movlw	low __pdataBANK0
  1196  07ED  0086               	movwf	6
  1197  07EE  3000               	movlw	high __pdataBANK0
  1198  07EF  0087               	movwf	7
  1199  07F0  300C               	movlw	12
  1200  07F1  318E  2636  3187   	fcall	init_ram
  1201                           
  1202                           ; Clear objects allocated to BITBANK0
  1203  07F4  01EF               	clrf	(__pbitbssBANK0/(0+8))& (0+127)
  1204                           
  1205                           ; Clear objects allocated to BANK0
  1206  07F5  3020               	movlw	low __pbssBANK0
  1207  07F6  0084               	movwf	4
  1208  07F7  3000               	movlw	high __pbssBANK0
  1209  07F8  0085               	movwf	5
  1210  07F9  3030               	movlw	48
  1211  07FA  318E  2630  3187   	fcall	clear_ram0
  1212  07FD                     end_of_initialization:	
  1213                           ;End of C runtime variable initialization code
  1214                           
  1215  07FD                     __end_of__initialization:
  1216  07FD  0020               	movlb	0
  1217  07FE  3186  2E02         	ljmp	_main	;jump to C main() function
  1218                           
  1219                           	psect	bitbssBANK0
  1220  0378                     __pbitbssBANK0:
  1221  0378                     ds18b20_read_bit@value:
  1222  0378                     	ds	1
  1223                           
  1224                           	psect	bssBANK0
  1225  0020                     __pbssBANK0:
  1226  0020                     _I2C_Status:
  1227  0020                     	ds	29
  1228  003D                     _sys_cnt:
  1229  003D                     	ds	2
  1230  003F                     _int_part:
  1231  003F                     	ds	2
  1232  0041                     _flag_sys:
  1233  0041                     	ds	1
  1234  0042                     _minute_unitRow:
  1235  0042                     	ds	1
  1236  0043                     _minute_dozens:
  1237  0043                     	ds	1
  1238  0044                     _hour_unitRow:
  1239  0044                     	ds	1
  1240  0045                     _hour_dozens:
  1241  0045                     	ds	1
  1242  0046                     _count:
  1243  0046                     	ds	1
  1244  0047                     _second:
  1245  0047                     	ds	1
  1246  0048                     _i:
  1247  0048                     	ds	1
  1248  0049                     _hour:
  1249  0049                     	ds	1
  1250  004A                     _minute:
  1251  004A                     	ds	1
  1252  004B                     _MA_DS1307:
  1253  004B                     	ds	1
  1254  004C                     _CONTROL_DS:
  1255  004C                     	ds	1
  1256  004D                     _eusartRxLastError:
  1257  004D                     	ds	1
  1258  004E                     _raw_temp:
  1259  004E                     	ds	2
  1260                           
  1261                           	psect	dataBANK0
  1262  005F                     __pdataBANK0:
  1263  005F                     _digits:
  1264  005F                     	ds	12
  1265                           
  1266                           	psect	inittext
  1267  0E36                     init_ram:
  1268  0E36  00FE               	movwf	btemp
  1269  0E37                     initloop:
  1270  0E37  0012               	moviw fsr0++
  1271  0E38  001E               	movwi fsr1++
  1272  0E39  0BFE               	decfsz	btemp,f
  1273  0E3A  2E37               	goto	initloop
  1274  0E3B  3400               	retlw	0
  1275                           
  1276                           	psect	clrtext
  1277  0E30                     clear_ram0:	
  1278                           ;	Called with FSR0 containing the base address, and
  1279                           ;	WREG with the size to clear
  1280                           
  1281  0E30  0064               	clrwdt	;clear the watchdog before getting into this loop
  1282  0E31                     clrloop0:
  1283  0E31  0180               	clrf	0	;clear RAM location pointed to by FSR
  1284  0E32  3101               	addfsr 0,1
  1285  0E33  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1286  0E34  2E31               	goto	clrloop0	;have we reached the end yet?
  1287  0E35  3400               	retlw	0	;all done for this memory range, return
  1288                           
  1289                           	psect	cstackCOMMON
  1290  0070                     __pcstackCOMMON:
  1291  0070                     ?_ds18b20_start:
  1292  0070                     ?_ds18b20_read:	
  1293                           ; 1 bit 
  1294                           
  1295  0070                     ?_I2C_SetBuffer:	
  1296                           ; 1 bit 
  1297                           
  1298  0070                     ?_I2C_Open:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ??_I2C_Open:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?_I2C_MasterWrite:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?_I2C_Close:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ??_I2C_Close:	
  1311                           ; 1 bytes @ 0x0
  1312                           
  1313  0070                     ?_I2C_Initialize:	
  1314                           ; 1 bytes @ 0x0
  1315                           
  1316  0070                     ??_I2C_Initialize:	
  1317                           ; 1 bytes @ 0x0
  1318                           
  1319  0070                     ?_OSCILLATOR_Initialize:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     ??_OSCILLATOR_Initialize:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     ?_WDT_Initialize:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     ??_WDT_Initialize:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     ?_EUSART_Initialize:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ?_I2C_DO_IDLE:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ??_I2C_DO_IDLE:	
  1338                           ; 1 bytes @ 0x0
  1339                           
  1340  0070                     ?_I2C_DO_SEND_ADR_READ:	
  1341                           ; 1 bytes @ 0x0
  1342                           
  1343  0070                     ??_I2C_DO_SEND_ADR_READ:	
  1344                           ; 1 bytes @ 0x0
  1345                           
  1346  0070                     ?_I2C_DO_SEND_ADR_WRITE:	
  1347                           ; 1 bytes @ 0x0
  1348                           
  1349  0070                     ?_I2C_DO_TX:	
  1350                           ; 1 bytes @ 0x0
  1351                           
  1352  0070                     ?_I2C_DO_RX:	
  1353                           ; 1 bytes @ 0x0
  1354                           
  1355  0070                     ?_I2C_DO_RCEN:	
  1356                           ; 1 bytes @ 0x0
  1357                           
  1358  0070                     ??_I2C_DO_RCEN:	
  1359                           ; 1 bytes @ 0x0
  1360                           
  1361  0070                     ?_I2C_DO_TX_EMPTY:	
  1362                           ; 1 bytes @ 0x0
  1363                           
  1364  0070                     ?_I2C_DO_SEND_RESTART_READ:	
  1365                           ; 1 bytes @ 0x0
  1366                           
  1367  0070                     ??_I2C_DO_SEND_RESTART_READ:	
  1368                           ; 1 bytes @ 0x0
  1369                           
  1370  0070                     ?_I2C_DO_SEND_RESTART_WRITE:	
  1371                           ; 1 bytes @ 0x0
  1372                           
  1373  0070                     ??_I2C_DO_SEND_RESTART_WRITE:	
  1374                           ; 1 bytes @ 0x0
  1375                           
  1376  0070                     ?_I2C_DO_SEND_RESTART:	
  1377                           ; 1 bytes @ 0x0
  1378                           
  1379  0070                     ??_I2C_DO_SEND_RESTART:	
  1380                           ; 1 bytes @ 0x0
  1381                           
  1382  0070                     ?_I2C_DO_SEND_STOP:	
  1383                           ; 1 bytes @ 0x0
  1384                           
  1385  0070                     ??_I2C_DO_SEND_STOP:	
  1386                           ; 1 bytes @ 0x0
  1387                           
  1388  0070                     ?_I2C_DO_RX_ACK:	
  1389                           ; 1 bytes @ 0x0
  1390                           
  1391  0070                     ??_I2C_DO_RX_ACK:	
  1392                           ; 1 bytes @ 0x0
  1393                           
  1394  0070                     ?_I2C_DO_RX_NACK_STOP:	
  1395                           ; 1 bytes @ 0x0
  1396                           
  1397  0070                     ??_I2C_DO_RX_NACK_STOP:	
  1398                           ; 1 bytes @ 0x0
  1399                           
  1400  0070                     ?_I2C_DO_RX_NACK_RESTART:	
  1401                           ; 1 bytes @ 0x0
  1402                           
  1403  0070                     ??_I2C_DO_RX_NACK_RESTART:	
  1404                           ; 1 bytes @ 0x0
  1405                           
  1406  0070                     ?_I2C_DO_RESET:	
  1407                           ; 1 bytes @ 0x0
  1408                           
  1409  0070                     ??_I2C_DO_RESET:	
  1410                           ; 1 bytes @ 0x0
  1411                           
  1412  0070                     ?_I2C_DO_ADDRESS_NACK:	
  1413                           ; 1 bytes @ 0x0
  1414                           
  1415  0070                     ?_I2C_MasterClearIrq:	
  1416                           ; 1 bytes @ 0x0
  1417                           
  1418  0070                     ??_I2C_MasterClearIrq:	
  1419                           ; 1 bytes @ 0x0
  1420                           
  1421  0070                     ?_I2C_MasterOpen:	
  1422                           ; 1 bytes @ 0x0
  1423                           
  1424  0070                     ??_I2C_MasterOpen:	
  1425                           ; 1 bytes @ 0x0
  1426                           
  1427  0070                     ?_I2C_MasterDisableIrq:	
  1428                           ; 1 bytes @ 0x0
  1429                           
  1430  0070                     ??_I2C_MasterDisableIrq:	
  1431                           ; 1 bytes @ 0x0
  1432                           
  1433  0070                     ?_I2C_MasterClose:	
  1434                           ; 1 bytes @ 0x0
  1435                           
  1436  0070                     ??_I2C_MasterClose:	
  1437                           ; 1 bytes @ 0x0
  1438                           
  1439  0070                     ?_I2C_MasterStart:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ??_I2C_MasterStart:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_I2C_Poller:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_I2C_SetCallback:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_I2C_MasterWaitForEvent:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ??_I2C_MasterWaitForEvent:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_I2C_MasterFsm:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_I2C_MasterIsNack:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ??_I2C_MasterIsNack:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_I2C_MasterSendTxData:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ??_I2C_MasterSendTxData:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_I2C_MasterGetRxData:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ??_I2C_MasterGetRxData:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_I2C_MasterSendAck:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ??_I2C_MasterSendAck:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_I2C_MasterStartRx:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ??_I2C_MasterStartRx:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ?_I2C_MasterSetIrq:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ??_I2C_MasterSetIrq:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?_I2C_MasterEnableRestart:	
  1497                           ; 1 bytes @ 0x0
  1498                           
  1499  0070                     ??_I2C_MasterEnableRestart:	
  1500                           ; 1 bytes @ 0x0
  1501                           
  1502  0070                     ?_I2C_MasterStop:	
  1503                           ; 1 bytes @ 0x0
  1504                           
  1505  0070                     ??_I2C_MasterStop:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ?_I2C_MasterSendNack:	
  1509                           ; 1 bytes @ 0x0
  1510                           
  1511  0070                     ??_I2C_MasterSendNack:	
  1512                           ; 1 bytes @ 0x0
  1513                           
  1514  0070                     ?_EUSART_SetFramingErrorHandler:	
  1515                           ; 1 bytes @ 0x0
  1516                           
  1517  0070                     ?_EUSART_SetOverrunErrorHandler:	
  1518                           ; 1 bytes @ 0x0
  1519                           
  1520  0070                     ?_EUSART_SetErrorHandler:	
  1521                           ; 1 bytes @ 0x0
  1522                           
  1523  0070                     ?_PIN_MANAGER_Initialize:	
  1524                           ; 1 bytes @ 0x0
  1525                           
  1526  0070                     ??_PIN_MANAGER_Initialize:	
  1527                           ; 1 bytes @ 0x0
  1528                           
  1529  0070                     ?_SYSTEM_Initialize:	
  1530                           ; 1 bytes @ 0x0
  1531                           
  1532  0070                     ?_I2C_MasterOperation:	
  1533                           ; 1 bytes @ 0x0
  1534                           
  1535  0070                     ?_WriteBits:	
  1536                           ; 1 bytes @ 0x0
  1537                           
  1538  0070                     ?_MAX7219_CLEAR:	
  1539                           ; 1 bytes @ 0x0
  1540                           
  1541  0070                     ?_MAX7219_Init:	
  1542                           ; 1 bytes @ 0x0
  1543                           
  1544  0070                     ?_bcd_to_decimal:	
  1545                           ; 1 bytes @ 0x0
  1546                           
  1547  0070                     ?_decimal_to_bcd:	
  1548                           ; 1 bytes @ 0x0
  1549                           
  1550  0070                     ?_RTC_Display:	
  1551                           ; 1 bytes @ 0x0
  1552                           
  1553  0070                     ?_delay:	
  1554                           ; 1 bytes @ 0x0
  1555                           
  1556  0070                     ??_delay:	
  1557                           ; 1 bytes @ 0x0
  1558                           
  1559  0070                     ??_ds18b20_start:	
  1560                           ; 1 bytes @ 0x0
  1561                           
  1562  0070                     ?_ds18b20_write_bit:	
  1563                           ; 1 bytes @ 0x0
  1564                           
  1565  0070                     ??_ds18b20_write_bit:	
  1566                           ; 1 bytes @ 0x0
  1567                           
  1568  0070                     ?_ds18b20_write_byte:	
  1569                           ; 1 bytes @ 0x0
  1570                           
  1571  0070                     ?_ds18b20_read_bit:	
  1572                           ; 1 bytes @ 0x0
  1573                           
  1574  0070                     ??_ds18b20_read_bit:	
  1575                           ; 1 bytes @ 0x0
  1576                           
  1577  0070                     ?_ds18b20_read_byte:	
  1578                           ; 1 bytes @ 0x0
  1579                           
  1580  0070                     ??_ds18b20_read_byte:	
  1581                           ; 1 bytes @ 0x0
  1582                           
  1583  0070                     ?_display_digitalCLK:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0070                     ?_main:	
  1587                           ; 1 bytes @ 0x0
  1588                           
  1589  0070                     ?___bmul:	
  1590                           ; 1 bytes @ 0x0
  1591                           
  1592  0070                     ?_debounce:	
  1593                           ; 1 bytes @ 0x0
  1594                           
  1595  0070                     ?___awdiv:	
  1596                           ; 2 bytes @ 0x0
  1597                           
  1598  0070                     ?___awmod:	
  1599                           ; 2 bytes @ 0x0
  1600                           
  1601  0070                     ?___lwdiv:	
  1602                           ; 2 bytes @ 0x0
  1603                           
  1604  0070                     ?___lwmod:	
  1605                           ; 2 bytes @ 0x0
  1606                           
  1607  0070                     I2C_MasterSendTxData@data:	
  1608                           ; 2 bytes @ 0x0
  1609                           
  1610  0070                     ds18b20_write_bit@value:	
  1611                           ; 1 bytes @ 0x0
  1612                           
  1613  0070                     ___bmul@multiplicand:	
  1614                           ; 1 bytes @ 0x0
  1615                           
  1616  0070                     I2C_SetBuffer@bufferSize:	
  1617                           ; 1 bytes @ 0x0
  1618                           
  1619  0070                     I2C_SetCallback@cb:	
  1620                           ; 2 bytes @ 0x0
  1621                           
  1622  0070                     EUSART_SetFramingErrorHandler@interruptHandler:	
  1623                           ; 2 bytes @ 0x0
  1624                           
  1625  0070                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  1626                           ; 2 bytes @ 0x0
  1627                           
  1628  0070                     EUSART_SetErrorHandler@interruptHandler:	
  1629                           ; 2 bytes @ 0x0
  1630                           
  1631  0070                     WriteBits@data:	
  1632                           ; 2 bytes @ 0x0
  1633                           
  1634  0070                     ___awdiv@divisor:	
  1635                           ; 2 bytes @ 0x0
  1636                           
  1637  0070                     ___awmod@divisor:	
  1638                           ; 2 bytes @ 0x0
  1639                           
  1640  0070                     ___lwdiv@divisor:	
  1641                           ; 2 bytes @ 0x0
  1642                           
  1643  0070                     ___lwmod@divisor:	
  1644                           ; 2 bytes @ 0x0
  1645                           
  1646                           
  1647                           ; 2 bytes @ 0x0
  1648  0070                     	ds	1
  1649  0071                     ??_I2C_DO_SEND_ADR_WRITE:
  1650  0071                     ??_ds18b20_write_byte:	
  1651                           ; 1 bytes @ 0x1
  1652                           
  1653  0071                     ??___bmul:	
  1654                           ; 1 bytes @ 0x1
  1655                           
  1656  0071                     I2C_Open@address:	
  1657                           ; 1 bytes @ 0x1
  1658                           
  1659  0071                     I2C_Close@returnValue:	
  1660                           ; 1 bytes @ 0x1
  1661                           
  1662                           
  1663                           ; 1 bytes @ 0x1
  1664  0071                     	ds	1
  1665  0072                     ??_I2C_SetBuffer:
  1666  0072                     ??_EUSART_Initialize:	
  1667                           ; 1 bytes @ 0x2
  1668                           
  1669  0072                     ??_EUSART_SetFramingErrorHandler:	
  1670                           ; 1 bytes @ 0x2
  1671                           
  1672  0072                     ??_EUSART_SetOverrunErrorHandler:	
  1673                           ; 1 bytes @ 0x2
  1674                           
  1675  0072                     ??_EUSART_SetErrorHandler:	
  1676                           ; 1 bytes @ 0x2
  1677                           
  1678  0072                     ??_SYSTEM_Initialize:	
  1679                           ; 1 bytes @ 0x2
  1680                           
  1681  0072                     ??_WriteBits:	
  1682                           ; 1 bytes @ 0x2
  1683                           
  1684  0072                     ??_debounce:	
  1685                           ; 1 bytes @ 0x2
  1686                           
  1687  0072                     I2C_Open@returnValue:	
  1688                           ; 1 bytes @ 0x2
  1689                           
  1690  0072                     I2C_SetCallback@ptr:	
  1691                           ; 1 bytes @ 0x2
  1692                           
  1693  0072                     ds18b20_write_byte@value:	
  1694                           ; 1 bytes @ 0x2
  1695                           
  1696  0072                     ds18b20_read_byte@value:	
  1697                           ; 1 bytes @ 0x2
  1698                           
  1699  0072                     ___bmul@product:	
  1700                           ; 1 bytes @ 0x2
  1701                           
  1702  0072                     ___awdiv@dividend:	
  1703                           ; 1 bytes @ 0x2
  1704                           
  1705  0072                     ___awmod@dividend:	
  1706                           ; 2 bytes @ 0x2
  1707                           
  1708  0072                     ___lwdiv@dividend:	
  1709                           ; 2 bytes @ 0x2
  1710                           
  1711  0072                     ___lwmod@dividend:	
  1712                           ; 2 bytes @ 0x2
  1713                           
  1714                           
  1715                           ; 2 bytes @ 0x2
  1716  0072                     	ds	1
  1717  0073                     ??_I2C_SetCallback:
  1718  0073                     I2C_SetBuffer@buffer:	
  1719                           ; 1 bytes @ 0x3
  1720                           
  1721  0073                     debounce@count:	
  1722                           ; 1 bytes @ 0x3
  1723                           
  1724  0073                     ds18b20_write_byte@i:	
  1725                           ; 1 bytes @ 0x3
  1726                           
  1727  0073                     ds18b20_read_byte@i:	
  1728                           ; 1 bytes @ 0x3
  1729                           
  1730  0073                     ___bmul@multiplier:	
  1731                           ; 1 bytes @ 0x3
  1732                           
  1733                           
  1734                           ; 1 bytes @ 0x3
  1735  0073                     	ds	1
  1736  0074                     ??_bcd_to_decimal:
  1737  0074                     ??_ds18b20_read:	
  1738                           ; 1 bytes @ 0x4
  1739                           
  1740  0074                     ??___awdiv:	
  1741                           ; 1 bytes @ 0x4
  1742                           
  1743  0074                     ??___awmod:	
  1744                           ; 1 bytes @ 0x4
  1745                           
  1746  0074                     ??___lwdiv:	
  1747                           ; 1 bytes @ 0x4
  1748                           
  1749  0074                     ??___lwmod:	
  1750                           ; 1 bytes @ 0x4
  1751                           
  1752  0074                     I2C_SetCallback@idx:	
  1753                           ; 1 bytes @ 0x4
  1754                           
  1755  0074                     debounce@i:	
  1756                           ; 1 bytes @ 0x4
  1757                           
  1758  0074                     WriteBits@i:	
  1759                           ; 1 bytes @ 0x4
  1760                           
  1761                           
  1762                           ; 2 bytes @ 0x4
  1763  0074                     	ds	1
  1764  0075                     ?_I2C_SetDataCompleteCallback:
  1765  0075                     ?_I2C_SetAddressNackCallback:	
  1766                           ; 1 bytes @ 0x5
  1767                           
  1768  0075                     ___awdiv@counter:	
  1769                           ; 1 bytes @ 0x5
  1770                           
  1771  0075                     ___awmod@counter:	
  1772                           ; 1 bytes @ 0x5
  1773                           
  1774  0075                     ___lwmod@counter:	
  1775                           ; 1 bytes @ 0x5
  1776                           
  1777  0075                     I2C_SetDataCompleteCallback@cb:	
  1778                           ; 1 bytes @ 0x5
  1779                           
  1780  0075                     I2C_SetAddressNackCallback@cb:	
  1781                           ; 2 bytes @ 0x5
  1782                           
  1783  0075                     ___lwdiv@quotient:	
  1784                           ; 2 bytes @ 0x5
  1785                           
  1786                           
  1787                           ; 2 bytes @ 0x5
  1788  0075                     	ds	1
  1789  0076                     ?_Write_Comand:
  1790  0076                     Write_Comand@Data:	
  1791                           ; 1 bytes @ 0x6
  1792                           
  1793  0076                     ___awdiv@sign:	
  1794                           ; 1 bytes @ 0x6
  1795                           
  1796  0076                     ___awmod@sign:	
  1797                           ; 1 bytes @ 0x6
  1798                           
  1799                           
  1800                           ; 1 bytes @ 0x6
  1801  0076                     	ds	1
  1802  0077                     ??_Write_Comand:
  1803  0077                     I2C_SetDataCompleteCallback@ptr:	
  1804                           ; 1 bytes @ 0x7
  1805                           
  1806  0077                     I2C_SetAddressNackCallback@ptr:	
  1807                           ; 1 bytes @ 0x7
  1808                           
  1809  0077                     bcd_to_decimal@number:	
  1810                           ; 1 bytes @ 0x7
  1811                           
  1812  0077                     ___lwdiv@counter:	
  1813                           ; 1 bytes @ 0x7
  1814                           
  1815  0077                     ___awdiv@quotient:	
  1816                           ; 1 bytes @ 0x7
  1817                           
  1818                           
  1819                           ; 2 bytes @ 0x7
  1820  0077                     	ds	1
  1821  0078                     ??_I2C_SetDataCompleteCallback:
  1822  0078                     ??_I2C_SetAddressNackCallback:	
  1823                           ; 1 bytes @ 0x8
  1824                           
  1825                           
  1826                           ; 1 bytes @ 0x8
  1827  0078                     	ds	1
  1828  0079                     ?_rd1RegCompleteHandler:
  1829  0079                     ?_rd2RegCompleteHandler:	
  1830                           ; 1 bytes @ 0x9
  1831                           
  1832  0079                     ?_wr1RegCompleteHandler:	
  1833                           ; 1 bytes @ 0x9
  1834                           
  1835  0079                     ?_wr2RegCompleteHandler:	
  1836                           ; 1 bytes @ 0x9
  1837                           
  1838  0079                     ?_rdBlkRegCompleteHandler:	
  1839                           ; 1 bytes @ 0x9
  1840                           
  1841  0079                     ?_I2C_CallbackReturnStop:	
  1842                           ; 1 bytes @ 0x9
  1843                           
  1844  0079                     ?_I2C_CallbackReturnReset:	
  1845                           ; 1 bytes @ 0x9
  1846                           
  1847  0079                     ?_wr1RegCompleteHandler@xxtofl$F1602:	
  1848                           ; 1 bytes @ 0x9
  1849                           
  1850  0079                     ?_rd1RegCompleteHandler@xxtofl$F1611:	
  1851                           ; 1 bytes @ 0x9
  1852                           
  1853  0079                     ?_rd2RegCompleteHandler@xxtofl$F1617:	
  1854                           ; 1 bytes @ 0x9
  1855                           
  1856  0079                     ?_wr2RegCompleteHandler@xxtofl$F1623:	
  1857                           ; 1 bytes @ 0x9
  1858                           
  1859  0079                     ?_rdBlkRegCompleteHandler@xxtofl$F1629:	
  1860                           ; 1 bytes @ 0x9
  1861                           
  1862  0079                     ?_Write_Digits:	
  1863                           ; 1 bytes @ 0x9
  1864                           
  1865  0079                     wr1RegCompleteHandler@p:	
  1866                           ; 1 bytes @ 0x9
  1867                           
  1868  0079                     rd1RegCompleteHandler@p:	
  1869                           ; 1 bytes @ 0x9
  1870                           
  1871  0079                     rd2RegCompleteHandler@p:	
  1872                           ; 1 bytes @ 0x9
  1873                           
  1874  0079                     wr2RegCompleteHandler@p:	
  1875                           ; 1 bytes @ 0x9
  1876                           
  1877  0079                     rdBlkRegCompleteHandler@p:	
  1878                           ; 1 bytes @ 0x9
  1879                           
  1880  0079                     rd1RegCompleteHandler@i2c_master_example$F143@ptr:	
  1881                           ; 1 bytes @ 0x9
  1882                           
  1883  0079                     rd2RegCompleteHandler@i2c_master_example$F154@ptr:	
  1884                           ; 1 bytes @ 0x9
  1885                           
  1886  0079                     wr1RegCompleteHandler@i2c_master_example$F160@ptr:	
  1887                           ; 1 bytes @ 0x9
  1888                           
  1889  0079                     wr2RegCompleteHandler@i2c_master_example$F166@ptr:	
  1890                           ; 1 bytes @ 0x9
  1891                           
  1892  0079                     rdBlkRegCompleteHandler@i2c_master_example$F177@ptr:	
  1893                           ; 1 bytes @ 0x9
  1894                           
  1895  0079                     I2C_CallbackReturnStop@funPtr:	
  1896                           ; 1 bytes @ 0x9
  1897                           
  1898  0079                     I2C_CallbackReturnReset@funPtr:	
  1899                           ; 1 bytes @ 0x9
  1900                           
  1901  0079                     Write_Comand@Address:	
  1902                           ; 1 bytes @ 0x9
  1903                           
  1904  0079                     Write_Digits@valueDigits:	
  1905                           ; 1 bytes @ 0x9
  1906                           
  1907  0079                     decimal_to_bcd@number:	
  1908                           ; 1 bytes @ 0x9
  1909                           
  1910  0079                     ds18b20_read@raw_temp_value:	
  1911                           ; 1 bytes @ 0x9
  1912                           
  1913                           
  1914                           ; 1 bytes @ 0x9
  1915  0079                     	ds	1
  1916  007A                     ??_rd1RegCompleteHandler:
  1917  007A                     ??_rd2RegCompleteHandler:	
  1918                           ; 1 bytes @ 0xA
  1919                           
  1920  007A                     ??_wr1RegCompleteHandler:	
  1921                           ; 1 bytes @ 0xA
  1922                           
  1923  007A                     ??_wr2RegCompleteHandler:	
  1924                           ; 1 bytes @ 0xA
  1925                           
  1926  007A                     ??_rdBlkRegCompleteHandler:	
  1927                           ; 1 bytes @ 0xA
  1928                           
  1929  007A                     ??_I2C_DO_TX:	
  1930                           ; 1 bytes @ 0xA
  1931                           
  1932  007A                     ??_I2C_DO_RX:	
  1933                           ; 1 bytes @ 0xA
  1934                           
  1935  007A                     ??_I2C_DO_TX_EMPTY:	
  1936                           ; 1 bytes @ 0xA
  1937                           
  1938  007A                     ??_I2C_DO_ADDRESS_NACK:	
  1939                           ; 1 bytes @ 0xA
  1940                           
  1941  007A                     ??_I2C_CallbackReturnStop:	
  1942                           ; 1 bytes @ 0xA
  1943                           
  1944  007A                     ??_I2C_CallbackReturnReset:	
  1945                           ; 1 bytes @ 0xA
  1946                           
  1947  007A                     ??_wr1RegCompleteHandler@xxtofl$F1604:	
  1948                           ; 1 bytes @ 0xA
  1949                           
  1950  007A                     ??_rd1RegCompleteHandler@xxtofl$F1613:	
  1951                           ; 1 bytes @ 0xA
  1952                           
  1953  007A                     ??_rd2RegCompleteHandler@xxtofl$F1619:	
  1954                           ; 1 bytes @ 0xA
  1955                           
  1956  007A                     ??_wr2RegCompleteHandler@xxtofl$F1625:	
  1957                           ; 1 bytes @ 0xA
  1958                           
  1959  007A                     ??_rdBlkRegCompleteHandler@xxtofl$F1631:	
  1960                           ; 1 bytes @ 0xA
  1961                           
  1962  007A                     ??_Write_Digits:	
  1963                           ; 1 bytes @ 0xA
  1964                           
  1965  007A                     Write_Comand@temp:	
  1966                           ; 1 bytes @ 0xA
  1967                           
  1968                           
  1969                           ; 2 bytes @ 0xA
  1970  007A                     	ds	2
  1971  007C                     ??_MAX7219_CLEAR:
  1972  007C                     ??_MAX7219_Init:	
  1973                           ; 1 bytes @ 0xC
  1974                           
  1975  007C                     ?_edit:	
  1976                           ; 1 bytes @ 0xC
  1977                           
  1978  007C                     edit@parameter:	
  1979                           ; 1 bytes @ 0xC
  1980                           
  1981                           
  1982                           ; 1 bytes @ 0xC
  1983  007C                     	ds	1
  1984  007D                     ??_I2C_Poller:
  1985  007D                     ??_I2C_MasterOperation:	
  1986                           ; 1 bytes @ 0xD
  1987                           
  1988  007D                     MAX7219_CLEAR@j:	
  1989                           ; 1 bytes @ 0xD
  1990                           
  1991  007D                     edit@position:	
  1992                           ; 1 bytes @ 0xD
  1993                           
  1994                           
  1995                           ; 1 bytes @ 0xD
  1996  007D                     	ds	1
  1997  007E                     ??_I2C_MasterWrite:
  1998                           
  1999                           	psect	cstackBANK0
  2000  0050                     __pcstackBANK0:	
  2001                           ; 1 bytes @ 0xE
  2002                           
  2003  0050                     ??_I2C_MasterFsm:
  2004  0050                     ??_decimal_to_bcd:	
  2005                           ; 1 bytes @ 0x0
  2006                           
  2007  0050                     Write_Digits@Position:	
  2008                           ; 1 bytes @ 0x0
  2009                           
  2010                           
  2011                           ; 1 bytes @ 0x0
  2012  0050                     	ds	1
  2013  0051                     Write_Digits@temp:
  2014                           
  2015                           ; 2 bytes @ 0x1
  2016  0051                     	ds	2
  2017  0053                     ??_edit:
  2018  0053                     I2C_MasterOperation@read:	
  2019                           ; 1 bytes @ 0x3
  2020                           
  2021                           
  2022                           ; 1 bytes @ 0x3
  2023  0053                     	ds	1
  2024  0054                     I2C_MasterOperation@returnValue:
  2025                           
  2026                           ; 1 bytes @ 0x4
  2027  0054                     	ds	1
  2028  0055                     ?_I2C_Read1ByteRegister:
  2029  0055                     ?_I2C_Write1ByteRegister:	
  2030                           ; 1 bytes @ 0x5
  2031                           
  2032  0055                     I2C_Read1ByteRegister@reg:	
  2033                           ; 1 bytes @ 0x5
  2034                           
  2035  0055                     I2C_Write1ByteRegister@reg:	
  2036                           ; 1 bytes @ 0x5
  2037                           
  2038                           
  2039                           ; 1 bytes @ 0x5
  2040  0055                     	ds	1
  2041  0056                     ??_I2C_Read1ByteRegister:
  2042  0056                     I2C_Write1ByteRegister@data:	
  2043                           ; 1 bytes @ 0x6
  2044                           
  2045                           
  2046                           ; 1 bytes @ 0x6
  2047  0056                     	ds	1
  2048  0057                     ??_I2C_Write1ByteRegister:
  2049  0057                     I2C_Read1ByteRegister@address:	
  2050                           ; 1 bytes @ 0x7
  2051                           
  2052                           
  2053                           ; 1 bytes @ 0x7
  2054  0057                     	ds	1
  2055  0058                     I2C_Read1ByteRegister@returnValue:
  2056  0058                     I2C_Write1ByteRegister@address:	
  2057                           ; 1 bytes @ 0x8
  2058                           
  2059                           
  2060                           ; 1 bytes @ 0x8
  2061  0058                     	ds	1
  2062  0059                     ??_RTC_Display:
  2063                           
  2064                           ; 1 bytes @ 0x9
  2065  0059                     	ds	3
  2066  005C                     ??_display_digitalCLK:
  2067                           
  2068                           ; 1 bytes @ 0xC
  2069  005C                     	ds	2
  2070  005E                     ??_main:
  2071                           
  2072                           ; 1 bytes @ 0xE
  2073  005E                     	ds	1
  2074                           
  2075                           	psect	maintext
  2076  0602                     __pmaintext:	
  2077 ;;
  2078 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2079 ;;
  2080 ;; *************** function _main *****************
  2081 ;; Defined at:
  2082 ;;		line 343 in file "main.c"
  2083 ;; Parameters:    Size  Location     Type
  2084 ;;		None
  2085 ;; Auto vars:     Size  Location     Type
  2086 ;;		None
  2087 ;; Return value:  Size  Location     Type
  2088 ;;                  1    wreg      void 
  2089 ;; Registers used:
  2090 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2091 ;; Tracked objects:
  2092 ;;		On entry : B1F/0
  2093 ;;		On exit  : 0/0
  2094 ;;		Unchanged: 0/0
  2095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2096 ;;      Params:         0       0       0       0       0       0       0       0
  2097 ;;      Locals:         0       0       0       0       0       0       0       0
  2098 ;;      Temps:          0       1       0       0       0       0       0       0
  2099 ;;      Totals:         0       1       0       0       0       0       0       0
  2100 ;;Total ram usage:        1 bytes
  2101 ;; Hardware stack levels required when called:   11
  2102 ;; This function calls:
  2103 ;;		_MAX7219_CLEAR
  2104 ;;		_MAX7219_Init
  2105 ;;		_SYSTEM_Initialize
  2106 ;;		_Write_Digits
  2107 ;;		___lwdiv
  2108 ;;		___lwmod
  2109 ;;		_display_digitalCLK
  2110 ;;		_ds18b20_read
  2111 ;; This function is called by:
  2112 ;;		Startup code after reset
  2113 ;; This function uses a non-reentrant model
  2114 ;;
  2115                           
  2116                           
  2117                           ;psect for function _main
  2118  0602                     _main:
  2119  0602                     l4044:	
  2120                           ;incstack = 0
  2121                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2122                           
  2123                           
  2124                           ;main.c: 346:     SYSTEM_Initialize();
  2125  0602  318E  269F  3186   	fcall	_SYSTEM_Initialize
  2126                           
  2127                           ;main.c: 347:     MAX7219_Init();
  2128  0605  3180  20E5  3186   	fcall	_MAX7219_Init
  2129  0608                     l4046:
  2130                           
  2131                           ;main.c: 349:     ANSELC = 0x00;
  2132  0608  0023               	movlb	3	; select bank3
  2133  0609  018E               	clrf	14	;volatile
  2134  060A                     l4048:
  2135                           
  2136                           ;main.c: 350:     ANSELA = 0x00;
  2137  060A  018C               	clrf	12	;volatile
  2138  060B                     l4050:
  2139                           
  2140                           ;main.c: 353:     T1CON = 0x30;
  2141  060B  3030               	movlw	48
  2142  060C  0020               	movlb	0	; select bank0
  2143  060D  0098               	movwf	24	;volatile
  2144  060E                     l4052:
  2145                           
  2146                           ;main.c: 354:     TMR1H = TMR1L = 0;
  2147  060E  0196               	clrf	22	;volatile
  2148  060F  0197               	clrf	23	;volatile
  2149  0610                     l4054:
  2150                           
  2151                           ;main.c: 357:     TRISCbits.TRISC3 = 1;
  2152  0610  0021               	movlb	1	; select bank1
  2153  0611  158E               	bsf	14,3	;volatile
  2154  0612                     l4056:
  2155                           
  2156                           ;main.c: 358:     TRISCbits.TRISC4 = 1;
  2157  0612  160E               	bsf	14,4	;volatile
  2158  0613                     l4058:
  2159                           
  2160                           ;main.c: 359:     TRISCbits.TRISC5 = 1;
  2161  0613  168E               	bsf	14,5	;volatile
  2162  0614                     l4060:
  2163                           
  2164                           ;main.c: 381:     {;main.c: 387:         if(flag_sys == 0){
  2165  0614  0020               	movlb	0	; select bank0
  2166  0615  0841               	movf	_flag_sys,w
  2167  0616  1D03               	btfss	3,2
  2168  0617  2E19               	goto	u2541
  2169  0618  2E1A               	goto	u2540
  2170  0619                     u2541:
  2171  0619  2E35               	goto	l4074
  2172  061A                     u2540:
  2173  061A                     l4062:
  2174                           
  2175                           ;main.c: 389:             display_digitalCLK();
  2176  061A  3184  24B4  3186   	fcall	_display_digitalCLK
  2177  061D                     l4064:
  2178                           
  2179                           ;main.c: 390:             if(sys_cnt < 1000) {sys_cnt++;}
  2180  061D  3003               	movlw	3
  2181  061E  0020               	movlb	0	; select bank0
  2182  061F  023E               	subwf	_sys_cnt+1,w
  2183  0620  30E8               	movlw	232
  2184  0621  1903               	skipnz
  2185  0622  023D               	subwf	_sys_cnt,w
  2186  0623  1803               	skipnc
  2187  0624  2E26               	goto	u2551
  2188  0625  2E27               	goto	u2550
  2189  0626                     u2551:
  2190  0626  2E2C               	goto	l4068
  2191  0627                     u2550:
  2192  0627                     l4066:
  2193  0627  3001               	movlw	1
  2194  0628  07BD               	addwf	_sys_cnt,f
  2195  0629  3000               	movlw	0
  2196  062A  3DBE               	addwfc	_sys_cnt+1,f
  2197  062B  2E14               	goto	l4060
  2198  062C                     l4068:
  2199                           
  2200                           ;main.c: 392:                 MAX7219_CLEAR();
  2201  062C  318F  2736  3186   	fcall	_MAX7219_CLEAR
  2202  062F                     l4070:
  2203                           
  2204                           ;main.c: 393:                 sys_cnt = 0;
  2205  062F  0020               	movlb	0	; select bank0
  2206  0630  01BD               	clrf	_sys_cnt
  2207  0631  01BE               	clrf	_sys_cnt+1
  2208  0632                     l4072:
  2209                           
  2210                           ;main.c: 394:                 flag_sys = 1;
  2211  0632  01C1               	clrf	_flag_sys
  2212  0633  0AC1               	incf	_flag_sys,f
  2213  0634  2E14               	goto	l4060
  2214  0635                     l4074:
  2215  0635  0341               	decf	_flag_sys,w
  2216  0636  1D03               	btfss	3,2
  2217  0637  2E39               	goto	u2561
  2218  0638  2E3A               	goto	u2560
  2219  0639                     u2561:
  2220  0639  2E14               	goto	l4060
  2221  063A                     u2560:
  2222  063A                     l4076:
  2223                           
  2224                           ;main.c: 399:             if(ds18b20_read(&raw_temp)){
  2225  063A  304E               	movlw	(low (_raw_temp| 0))& (0+255)
  2226  063B  3183  23BC  3186   	fcall	_ds18b20_read
  2227  063E  1C03               	btfss	3,0
  2228  063F  2E41               	goto	u2571
  2229  0640  2E42               	goto	u2570
  2230  0641                     u2571:
  2231  0641  2E87               	goto	l4088
  2232  0642                     u2570:
  2233  0642                     l4078:
  2234                           
  2235                           ;main.c: 400:                 int_part = (raw_temp >> 4);
  2236  0642  0020               	movlb	0	; select bank0
  2237  0643  0E4E               	swapf	_raw_temp,w
  2238  0644  390F               	andlw	15
  2239  0645  00BF               	movwf	_int_part
  2240  0646  0E4F               	swapf	_raw_temp+1,w
  2241  0647  39F0               	andlw	240
  2242  0648  04BF               	iorwf	_int_part,f
  2243  0649  0E4F               	swapf	_raw_temp+1,w
  2244  064A  390F               	andlw	15
  2245  064B  00C0               	movwf	_int_part+1
  2246  064C                     l4080:
  2247                           
  2248                           ;main.c: 401:                 Write_Digits(0,(int_part/10));
  2249  064C  300A               	movlw	10
  2250  064D  00F0               	movwf	___lwdiv@divisor
  2251  064E  3000               	movlw	0
  2252  064F  00F1               	movwf	___lwdiv@divisor+1
  2253  0650  0840               	movf	_int_part+1,w
  2254  0651  00F3               	movwf	___lwdiv@dividend+1
  2255  0652  083F               	movf	_int_part,w
  2256  0653  00F2               	movwf	___lwdiv@dividend
  2257  0654  3183  233A  3186   	fcall	___lwdiv
  2258  0657  0870               	movf	?___lwdiv,w
  2259  0658  0020               	movlb	0	; select bank0
  2260  0659  00DE               	movwf	??_main
  2261  065A  085E               	movf	??_main,w
  2262  065B  00F9               	movwf	Write_Digits@valueDigits
  2263  065C  3000               	movlw	0
  2264  065D  3181  212F  3186   	fcall	_Write_Digits
  2265  0660                     l4082:
  2266                           
  2267                           ;main.c: 402:                 Write_Digits(1,(int_part%10));
  2268  0660  300A               	movlw	10
  2269  0661  00F0               	movwf	___lwmod@divisor
  2270  0662  3000               	movlw	0
  2271  0663  00F1               	movwf	___lwmod@divisor+1
  2272  0664  0020               	movlb	0	; select bank0
  2273  0665  0840               	movf	_int_part+1,w
  2274  0666  00F3               	movwf	___lwmod@dividend+1
  2275  0667  083F               	movf	_int_part,w
  2276  0668  00F2               	movwf	___lwmod@dividend
  2277  0669  3182  2296  3186   	fcall	___lwmod
  2278  066C  0870               	movf	?___lwmod,w
  2279  066D  0020               	movlb	0	; select bank0
  2280  066E  00DE               	movwf	??_main
  2281  066F  085E               	movf	??_main,w
  2282  0670  00F9               	movwf	Write_Digits@valueDigits
  2283  0671  3001               	movlw	1
  2284  0672  3181  212F  3186   	fcall	_Write_Digits
  2285  0675                     l4084:
  2286                           
  2287                           ;main.c: 403:                 Write_Digits(2,10);
  2288  0675  300A               	movlw	10
  2289  0676  0020               	movlb	0	; select bank0
  2290  0677  00DE               	movwf	??_main
  2291  0678  085E               	movf	??_main,w
  2292  0679  00F9               	movwf	Write_Digits@valueDigits
  2293  067A  3002               	movlw	2
  2294  067B  3181  212F  3186   	fcall	_Write_Digits
  2295  067E                     l4086:
  2296                           
  2297                           ;main.c: 404:                 Write_Digits(3,11);
  2298  067E  300B               	movlw	11
  2299  067F  0020               	movlb	0	; select bank0
  2300  0680  00DE               	movwf	??_main
  2301  0681  085E               	movf	??_main,w
  2302  0682  00F9               	movwf	Write_Digits@valueDigits
  2303  0683  3003               	movlw	3
  2304  0684  3181  212F  3186   	fcall	_Write_Digits
  2305  0687                     l4088:
  2306                           
  2307                           ;main.c: 406:             if(sys_cnt < 10) {sys_cnt++;}
  2308  0687  3000               	movlw	0
  2309  0688  0020               	movlb	0	; select bank0
  2310  0689  023E               	subwf	_sys_cnt+1,w
  2311  068A  300A               	movlw	10
  2312  068B  1903               	skipnz
  2313  068C  023D               	subwf	_sys_cnt,w
  2314  068D  1803               	skipnc
  2315  068E  2E90               	goto	u2581
  2316  068F  2E91               	goto	u2580
  2317  0690                     u2581:
  2318  0690  2E92               	goto	l4092
  2319  0691                     u2580:
  2320  0691  2E27               	goto	l4066
  2321  0692                     l4092:
  2322                           
  2323                           ;main.c: 408:                 MAX7219_CLEAR();
  2324  0692  318F  2736  3186   	fcall	_MAX7219_CLEAR
  2325  0695                     l4094:
  2326                           
  2327                           ;main.c: 409:                 sys_cnt = 0;
  2328  0695  0020               	movlb	0	; select bank0
  2329  0696  01BD               	clrf	_sys_cnt
  2330  0697  01BE               	clrf	_sys_cnt+1
  2331  0698                     l4096:
  2332                           
  2333                           ;main.c: 410:                 flag_sys = 0;
  2334  0698  01C1               	clrf	_flag_sys
  2335  0699  2E14               	goto	l4060
  2336  069A  3180  2802         	ljmp	start
  2337  069C                     __end_of_main:
  2338                           
  2339                           	psect	text1
  2340  03BC                     __ptext1:	
  2341 ;; *************** function _ds18b20_read *****************
  2342 ;; Defined at:
  2343 ;;		line 302 in file "main.c"
  2344 ;; Parameters:    Size  Location     Type
  2345 ;;  raw_temp_val    1    wreg     PTR unsigned short 
  2346 ;;		 -> raw_temp(2), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  raw_temp_val    1    9[COMMON] PTR unsigned short 
  2349 ;;		 -> raw_temp(2), 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;		None               void
  2352 ;; Registers used:
  2353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2359 ;;      Params:         0       0       0       0       0       0       0       0
  2360 ;;      Locals:         1       0       0       0       0       0       0       0
  2361 ;;      Temps:          5       0       0       0       0       0       0       0
  2362 ;;      Totals:         6       0       0       0       0       0       0       0
  2363 ;;Total ram usage:        6 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    2
  2366 ;; This function calls:
  2367 ;;		_ds18b20_read_byte
  2368 ;;		_ds18b20_start
  2369 ;;		_ds18b20_write_byte
  2370 ;; This function is called by:
  2371 ;;		_main
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _ds18b20_read
  2377  03BC                     _ds18b20_read:
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _ds18b20_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2381                           ;ds18b20_read@raw_temp_value stored from wreg
  2382  03BC  00F9               	movwf	ds18b20_read@raw_temp_value
  2383  03BD                     l3658:
  2384                           
  2385                           ;main.c: 302: __bit ds18b20_read(uint16_t *raw_temp_value);main.c: 303: {;main.c: 304:  
      +                           if (!ds18b20_start())
  2386  03BD  3180  202F  3183   	fcall	_ds18b20_start
  2387  03C0  1803               	btfsc	3,0
  2388  03C1  2BC3               	goto	u2011
  2389  03C2  2BC4               	goto	u2010
  2390  03C3                     u2011:
  2391  03C3  2BC6               	goto	l3664
  2392  03C4                     u2010:
  2393  03C4                     l3660:
  2394                           
  2395                           ;main.c: 305:     return 0;
  2396  03C4  1003               	clrc
  2397  03C5  2C0B               	goto	l864
  2398  03C6                     l3664:
  2399                           
  2400                           ;main.c: 307:   ds18b20_write_byte(0xCC);
  2401  03C6  30CC               	movlw	204
  2402  03C7  318F  27E8  3183   	fcall	_ds18b20_write_byte
  2403                           
  2404                           ;main.c: 308:   ds18b20_write_byte(0x44);
  2405  03CA  3044               	movlw	68
  2406  03CB  318F  27E8  3183   	fcall	_ds18b20_write_byte
  2407  03CE                     l3666:	
  2408                           ;main.c: 310:   while(ds18b20_read_byte() == 0);
  2409                           
  2410  03CE  3180  2049  3183   	fcall	_ds18b20_read_byte
  2411  03D1  3A00               	xorlw	0
  2412  03D2  1903               	skipnz
  2413  03D3  2BD5               	goto	u2021
  2414  03D4  2BD6               	goto	u2020
  2415  03D5                     u2021:
  2416  03D5  2BCE               	goto	l3666
  2417  03D6                     u2020:
  2418  03D6                     l3668:
  2419                           
  2420                           ;main.c: 312:   if (!ds18b20_start())
  2421  03D6  3180  202F  3183   	fcall	_ds18b20_start
  2422  03D9  1803               	btfsc	3,0
  2423  03DA  2BDC               	goto	u2031
  2424  03DB  2BDD               	goto	u2030
  2425  03DC                     u2031:
  2426  03DC  2BDE               	goto	l3674
  2427  03DD                     u2030:
  2428  03DD  2BC4               	goto	l3660
  2429  03DE                     l3674:
  2430                           
  2431                           ;main.c: 315:   ds18b20_write_byte(0xCC);
  2432  03DE  30CC               	movlw	204
  2433  03DF  318F  27E8  3183   	fcall	_ds18b20_write_byte
  2434                           
  2435                           ;main.c: 316:   ds18b20_write_byte(0xBE);
  2436  03E2  30BE               	movlw	190
  2437  03E3  318F  27E8  3183   	fcall	_ds18b20_write_byte
  2438  03E6                     l3676:
  2439                           
  2440                           ;main.c: 319:   *raw_temp_value = ds18b20_read_byte();
  2441  03E6  3180  2049  3183   	fcall	_ds18b20_read_byte
  2442  03E9  00F4               	movwf	??_ds18b20_read
  2443  03EA  01F5               	clrf	??_ds18b20_read+1
  2444  03EB  0879               	movf	ds18b20_read@raw_temp_value,w
  2445  03EC  0086               	movwf	6
  2446  03ED  0187               	clrf	7
  2447  03EE  0874               	movf	??_ds18b20_read,w
  2448  03EF  3FC0               	movwi [0]fsr1
  2449  03F0  0875               	movf	??_ds18b20_read+1,w
  2450  03F1  3FC1               	movwi [1]fsr1
  2451  03F2                     l3678:
  2452                           
  2453                           ;main.c: 321:   *raw_temp_value = (uint16_t)(ds18b20_read_byte() << 8) + (*raw_temp_valu
      +                          e);
  2454  03F2  0879               	movf	ds18b20_read@raw_temp_value,w
  2455  03F3  0086               	movwf	6
  2456  03F4  0187               	clrf	7
  2457  03F5  3180  2049  3183   	fcall	_ds18b20_read_byte
  2458  03F8  00F4               	movwf	??_ds18b20_read
  2459  03F9  01F5               	clrf	??_ds18b20_read+1
  2460  03FA  0874               	movf	??_ds18b20_read,w
  2461  03FB  00F5               	movwf	??_ds18b20_read+1
  2462  03FC  01F4               	clrf	??_ds18b20_read
  2463  03FD  3F40               	moviw [0]fsr1
  2464  03FE  0774               	addwf	??_ds18b20_read,w
  2465  03FF  00F7               	movwf	??_ds18b20_read+3
  2466  0400  3F41               	moviw [1]fsr1
  2467  0401  3D75               	addwfc	??_ds18b20_read+1,w
  2468  0402  00F8               	movwf	??_ds18b20_read+4
  2469  0403  0879               	movf	ds18b20_read@raw_temp_value,w
  2470  0404  0086               	movwf	6
  2471  0405  0187               	clrf	7
  2472  0406  0877               	movf	??_ds18b20_read+3,w
  2473  0407  3FC0               	movwi [0]fsr1
  2474  0408  0878               	movf	??_ds18b20_read+4,w
  2475  0409  3FC1               	movwi [1]fsr1
  2476  040A                     l3680:
  2477                           
  2478                           ;main.c: 323:   return 1;
  2479  040A  1403               	setc
  2480  040B                     l864:
  2481  040B  0008               	return
  2482  040C                     __end_of_ds18b20_read:
  2483                           
  2484                           	psect	text2
  2485  0FE8                     __ptext2:	
  2486 ;; *************** function _ds18b20_write_byte *****************
  2487 ;; Defined at:
  2488 ;;		line 278 in file "main.c"
  2489 ;; Parameters:    Size  Location     Type
  2490 ;;  value           1    wreg     unsigned char 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  value           1    2[COMMON] unsigned char 
  2493 ;;  i               1    3[COMMON] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2503 ;;      Params:         0       0       0       0       0       0       0       0
  2504 ;;      Locals:         2       0       0       0       0       0       0       0
  2505 ;;      Temps:          1       0       0       0       0       0       0       0
  2506 ;;      Totals:         3       0       0       0       0       0       0       0
  2507 ;;Total ram usage:        3 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    1
  2510 ;; This function calls:
  2511 ;;		_ds18b20_write_bit
  2512 ;; This function is called by:
  2513 ;;		_ds18b20_read
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           
  2518                           ;psect for function _ds18b20_write_byte
  2519  0FE8                     _ds18b20_write_byte:
  2520                           
  2521                           ;incstack = 0
  2522                           ; Regs used in _ds18b20_write_byte: [wreg+status,2+status,0+pclath+cstack]
  2523                           ;ds18b20_write_byte@value stored from wreg
  2524  0FE8  00F2               	movwf	ds18b20_write_byte@value
  2525  0FE9                     l3612:
  2526                           
  2527                           ;main.c: 278: void ds18b20_write_byte(uint8_t value);main.c: 279: {;main.c: 280:     for
      +                          (uint8_t i = 0; i < 8; i++)
  2528  0FE9  01F3               	clrf	ds18b20_write_byte@i
  2529  0FEA                     l3618:
  2530                           
  2531                           ;main.c: 281:         ds18b20_write_bit(value >> i);
  2532  0FEA  0872               	movf	ds18b20_write_byte@value,w
  2533  0FEB  00F1               	movwf	??_ds18b20_write_byte
  2534  0FEC  0A73               	incf	ds18b20_write_byte@i,w
  2535  0FED  2FEF               	goto	u1964
  2536  0FEE                     u1965:
  2537  0FEE  36F1               	lsrf	??_ds18b20_write_byte,f
  2538  0FEF                     u1964:
  2539  0FEF  0B89               	decfsz	9,f
  2540  0FF0  2FEE               	goto	u1965
  2541  0FF1  0871               	movf	??_ds18b20_write_byte,w
  2542  0FF2  318F  2773  318F   	fcall	_ds18b20_write_bit
  2543  0FF5                     l3620:
  2544  0FF5  3001               	movlw	1
  2545  0FF6  00F1               	movwf	??_ds18b20_write_byte
  2546  0FF7  0871               	movf	??_ds18b20_write_byte,w
  2547  0FF8  07F3               	addwf	ds18b20_write_byte@i,f
  2548  0FF9                     l3622:
  2549  0FF9  3008               	movlw	8
  2550  0FFA  0273               	subwf	ds18b20_write_byte@i,w
  2551  0FFB  1C03               	skipc
  2552  0FFC  2FFE               	goto	u1971
  2553  0FFD  2FFF               	goto	u1970
  2554  0FFE                     u1971:
  2555  0FFE  2FEA               	goto	l3618
  2556  0FFF                     u1970:
  2557  0FFF                     l850:
  2558  0FFF  0008               	return
  2559  1000                     __end_of_ds18b20_write_byte:
  2560                           
  2561                           	psect	text3
  2562  0F73                     __ptext3:	
  2563 ;; *************** function _ds18b20_write_bit *****************
  2564 ;; Defined at:
  2565 ;;		line 266 in file "main.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  value           1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  value           1    0[COMMON] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2579 ;;      Params:         0       0       0       0       0       0       0       0
  2580 ;;      Locals:         1       0       0       0       0       0       0       0
  2581 ;;      Temps:          0       0       0       0       0       0       0       0
  2582 ;;      Totals:         1       0       0       0       0       0       0       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; This function calls:
  2586 ;;		Nothing
  2587 ;; This function is called by:
  2588 ;;		_ds18b20_write_byte
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           
  2592                           
  2593                           ;psect for function _ds18b20_write_bit
  2594  0F73                     _ds18b20_write_bit:
  2595                           
  2596                           ;incstack = 0
  2597                           ; Regs used in _ds18b20_write_bit: [wreg]
  2598                           ;ds18b20_write_bit@value stored from wreg
  2599  0F73  00F0               	movwf	ds18b20_write_bit@value
  2600  0F74                     l3364:
  2601                           
  2602                           ;main.c: 267:   PORTAbits.RA2 = 0;
  2603  0F74  0020               	movlb	0	; select bank0
  2604  0F75  110C               	bcf	12,2	;volatile
  2605                           
  2606                           ;main.c: 268:   TRISAbits.TRISA2 = 0;
  2607  0F76  0021               	movlb	1	; select bank1
  2608  0F77  110C               	bcf	12,2	;volatile
  2609                           
  2610                           ;main.c: 269:   _delay((unsigned long)((2)*(4000000/4000000.0)));
  2611  0F78  3200               	nop2	;2 cycle nop
  2612  0F79                     l3366:
  2613                           
  2614                           ;main.c: 271:   PORTAbits.RA2 = (__bit)value;
  2615  0F79  1870               	btfsc	ds18b20_write_bit@value,0
  2616  0F7A  2F7C               	goto	u1611
  2617  0F7B  2F7F               	goto	u1610
  2618  0F7C                     u1611:
  2619  0F7C  0020               	movlb	0	; select bank0
  2620  0F7D  150C               	bsf	12,2	;volatile
  2621  0F7E  2F81               	goto	u1624
  2622  0F7F                     u1610:
  2623  0F7F  0020               	movlb	0	; select bank0
  2624  0F80  110C               	bcf	12,2	;volatile
  2625  0F81                     u1624:
  2626                           
  2627                           ;main.c: 272:   _delay((unsigned long)((80)*(4000000/4000000.0)));
  2628  0F81  301A               	movlw	26
  2629  0F82                     u2597:
  2630  0F82  0B89               	decfsz	9,f
  2631  0F83  2F82               	goto	u2597
  2632  0F84  3200               	nop2
  2633  0F85                     l3368:
  2634                           
  2635                           ;main.c: 274:   TRISAbits.TRISA2 = 1;
  2636  0F85  0021               	movlb	1	; select bank1
  2637  0F86  150C               	bsf	12,2	;volatile
  2638  0F87                     l3370:
  2639                           
  2640                           ;main.c: 275:   _delay((unsigned long)((2)*(4000000/4000000.0)));
  2641  0F87  3200               	nop2	;2 cycle nop
  2642  0F88                     l845:
  2643  0F88  0008               	return
  2644  0F89                     __end_of_ds18b20_write_bit:
  2645                           
  2646                           	psect	text4
  2647  002F                     __ptext4:	
  2648 ;; *************** function _ds18b20_start *****************
  2649 ;; Defined at:
  2650 ;;		line 250 in file "main.c"
  2651 ;; Parameters:    Size  Location     Type
  2652 ;;		None
  2653 ;; Auto vars:     Size  Location     Type
  2654 ;;		None
  2655 ;; Return value:  Size  Location     Type
  2656 ;;		None               void
  2657 ;; Registers used:
  2658 ;;		wreg, status,2, status,0
  2659 ;; Tracked objects:
  2660 ;;		On entry : 0/0
  2661 ;;		On exit  : 0/0
  2662 ;;		Unchanged: 0/0
  2663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2664 ;;      Params:         0       0       0       0       0       0       0       0
  2665 ;;      Locals:         0       0       0       0       0       0       0       0
  2666 ;;      Temps:          0       0       0       0       0       0       0       0
  2667 ;;      Totals:         0       0       0       0       0       0       0       0
  2668 ;;Total ram usage:        0 bytes
  2669 ;; Hardware stack levels used:    1
  2670 ;; This function calls:
  2671 ;;		Nothing
  2672 ;; This function is called by:
  2673 ;;		_ds18b20_read
  2674 ;; This function uses a non-reentrant model
  2675 ;;
  2676                           
  2677                           
  2678                           ;psect for function _ds18b20_start
  2679  002F                     _ds18b20_start:
  2680  002F                     l3594:	
  2681                           ;incstack = 0
  2682                           ; Regs used in _ds18b20_start: [wreg+status,2+status,0]
  2683                           
  2684                           
  2685                           ;main.c: 251:   PORTAbits.RA2 = 0;
  2686  002F  0020               	movlb	0	; select bank0
  2687  0030  110C               	bcf	12,2	;volatile
  2688                           
  2689                           ;main.c: 252:   TRISAbits.TRISA2 = 0;
  2690  0031  0021               	movlb	1	; select bank1
  2691  0032  110C               	bcf	12,2	;volatile
  2692  0033                     l3596:
  2693                           
  2694                           ;main.c: 253:   _delay((unsigned long)((480)*(4000000/4000000.0)));
  2695  0033  30A0               	movlw	160
  2696  0034                     u2607:
  2697  0034  0B89               	decfsz	9,f
  2698  0035  2834               	goto	u2607
  2699  0036                     l3598:
  2700                           
  2701                           ;main.c: 254:   TRISAbits.TRISA2 = 1;
  2702  0036  0021               	movlb	1	; select bank1
  2703  0037  150C               	bsf	12,2	;volatile
  2704                           
  2705                           ;main.c: 255:   _delay((unsigned long)((70)*(4000000/4000000.0)));
  2706  0038  3017               	movlw	23
  2707  0039                     u2617:
  2708  0039  0B89               	decfsz	9,f
  2709  003A  2839               	goto	u2617
  2710  003B  0000               	nop
  2711  003C                     l3600:
  2712                           
  2713                           ;main.c: 257:   if (!PORTAbits.RA2)
  2714  003C  0020               	movlb	0	; select bank0
  2715  003D  190C               	btfsc	12,2	;volatile
  2716  003E  2840               	goto	u1951
  2717  003F  2841               	goto	u1950
  2718  0040                     u1951:
  2719  0040  2847               	goto	l3608
  2720  0041                     u1950:
  2721  0041                     l3602:
  2722                           
  2723                           ;main.c: 258:   {;main.c: 259:     _delay((unsigned long)((410)*(4000000/4000000.0)));
  2724  0041  3088               	movlw	136
  2725  0042                     u2627:
  2726  0042  0B89               	decfsz	9,f
  2727  0043  2842               	goto	u2627
  2728  0044  3200               	nop2
  2729  0045                     l3604:
  2730                           
  2731                           ;main.c: 260:     return 1;
  2732  0045  1403               	setc
  2733  0046  2848               	goto	l842
  2734  0047                     l3608:
  2735                           
  2736                           ;main.c: 263:   return 0;
  2737  0047  1003               	clrc
  2738  0048                     l842:
  2739  0048  0008               	return
  2740  0049                     __end_of_ds18b20_start:
  2741                           
  2742                           	psect	text5
  2743  0049                     __ptext5:	
  2744 ;; *************** function _ds18b20_read_byte *****************
  2745 ;; Defined at:
  2746 ;;		line 296 in file "main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;  i               1    3[COMMON] unsigned char 
  2751 ;;  value           1    2[COMMON] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;                  1    wreg      unsigned char 
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, pclath, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2761 ;;      Params:         0       0       0       0       0       0       0       0
  2762 ;;      Locals:         2       0       0       0       0       0       0       0
  2763 ;;      Temps:          2       0       0       0       0       0       0       0
  2764 ;;      Totals:         4       0       0       0       0       0       0       0
  2765 ;;Total ram usage:        4 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    1
  2768 ;; This function calls:
  2769 ;;		_ds18b20_read_bit
  2770 ;; This function is called by:
  2771 ;;		_ds18b20_read
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           
  2775                           
  2776                           ;psect for function _ds18b20_read_byte
  2777  0049                     _ds18b20_read_byte:
  2778  0049                     l3624:	
  2779                           ;incstack = 0
  2780                           ; Regs used in _ds18b20_read_byte: [wreg+status,2+status,0+pclath+cstack]
  2781                           
  2782                           
  2783                           ;main.c: 297:   uint8_t value = 0;
  2784  0049  01F2               	clrf	ds18b20_read_byte@value
  2785                           
  2786                           ;main.c: 298:   for(uint8_t i = 0; i < 8; i++)
  2787  004A  01F3               	clrf	ds18b20_read_byte@i
  2788  004B                     l3630:
  2789                           
  2790                           ;main.c: 299:     value |= ds18b20_read_bit() << i;
  2791  004B  318F  27D0  3180   	fcall	_ds18b20_read_bit
  2792  004E  00F0               	movwf	??_ds18b20_read_byte
  2793  004F  0A73               	incf	ds18b20_read_byte@i,w
  2794  0050  2852               	goto	u1984
  2795  0051                     u1985:
  2796  0051  35F0               	lslf	??_ds18b20_read_byte,f
  2797  0052                     u1984:
  2798  0052  0B89               	decfsz	9,f
  2799  0053  2851               	goto	u1985
  2800  0054  0870               	movf	??_ds18b20_read_byte,w
  2801  0055  00F1               	movwf	??_ds18b20_read_byte+1
  2802  0056  0871               	movf	??_ds18b20_read_byte+1,w
  2803  0057  04F2               	iorwf	ds18b20_read_byte@value,f
  2804  0058                     l3632:
  2805  0058  3001               	movlw	1
  2806  0059  00F0               	movwf	??_ds18b20_read_byte
  2807  005A  0870               	movf	??_ds18b20_read_byte,w
  2808  005B  07F3               	addwf	ds18b20_read_byte@i,f
  2809  005C                     l3634:
  2810  005C  3008               	movlw	8
  2811  005D  0273               	subwf	ds18b20_read_byte@i,w
  2812  005E  1C03               	skipc
  2813  005F  2861               	goto	u1991
  2814  0060  2862               	goto	u1990
  2815  0061                     u1991:
  2816  0061  284B               	goto	l3630
  2817  0062                     u1990:
  2818  0062                     l3636:
  2819                           
  2820                           ;main.c: 300:   return value;
  2821  0062  0872               	movf	ds18b20_read_byte@value,w
  2822  0063                     l860:
  2823  0063  0008               	return
  2824  0064                     __end_of_ds18b20_read_byte:
  2825                           
  2826                           	psect	text6
  2827  0FD0                     __ptext6:	
  2828 ;; *************** function _ds18b20_read_bit *****************
  2829 ;; Defined at:
  2830 ;;		line 284 in file "main.c"
  2831 ;; Parameters:    Size  Location     Type
  2832 ;;		None
  2833 ;; Auto vars:     Size  Location     Type
  2834 ;;		None
  2835 ;; Return value:  Size  Location     Type
  2836 ;;                  1    wreg      unsigned char 
  2837 ;; Registers used:
  2838 ;;		wreg
  2839 ;; Tracked objects:
  2840 ;;		On entry : 0/0
  2841 ;;		On exit  : 0/0
  2842 ;;		Unchanged: 0/0
  2843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2844 ;;      Params:         0       0       0       0       0       0       0       0
  2845 ;;      Locals:         0       0       0       0       0       0       0       0
  2846 ;;      Temps:          0       0       0       0       0       0       0       0
  2847 ;;      Totals:         0       0       0       0       0       0       0       0
  2848 ;;Total ram usage:        0 bytes
  2849 ;; Hardware stack levels used:    1
  2850 ;; This function calls:
  2851 ;;		Nothing
  2852 ;; This function is called by:
  2853 ;;		_ds18b20_read_byte
  2854 ;; This function uses a non-reentrant model
  2855 ;;
  2856                           
  2857                           
  2858                           ;psect for function _ds18b20_read_bit
  2859  0FD0                     _ds18b20_read_bit:
  2860  0FD0                     l3372:	
  2861                           ;incstack = 0
  2862                           ; Regs used in _ds18b20_read_bit: [wreg]
  2863                           
  2864                           
  2865                           ;main.c: 285:   static __bit value;;main.c: 286:   PORTAbits.RA2 = 0;
  2866  0FD0  0020               	movlb	0	; select bank0
  2867  0FD1  110C               	bcf	12,2	;volatile
  2868                           
  2869                           ;main.c: 287:   TRISAbits.TRISA2 = 0;
  2870  0FD2  0021               	movlb	1	; select bank1
  2871  0FD3  110C               	bcf	12,2	;volatile
  2872                           
  2873                           ;main.c: 288:   _delay((unsigned long)((2)*(4000000/4000000.0)));
  2874  0FD4  3200               	nop2	;2 cycle nop
  2875                           
  2876                           ;main.c: 289:   TRISAbits.TRISA2 = 1;
  2877  0FD5  0021               	movlb	1	; select bank1
  2878  0FD6  150C               	bsf	12,2	;volatile
  2879                           
  2880                           ;main.c: 290:   _delay((unsigned long)((5)*(4000000/4000000.0)));
  2881  0FD7  3200               	nop2	;2 cycle nop
  2882  0FD8  3200               	nop2	;2 cycle nop
  2883  0FD9  0000               	nop
  2884                           
  2885                           ;main.c: 291:   value = PORTAbits.RA2;
  2886  0FDA  0020               	movlb	0	; select bank0
  2887  0FDB  106F               	bcf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  2888  0FDC  1D0C               	btfss	12,2	;volatile
  2889  0FDD  2FDF               	goto	u1635
  2890  0FDE  146F               	bsf	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  2891  0FDF                     u1635:
  2892  0FDF                     l3374:
  2893                           
  2894                           ;main.c: 292:   _delay((unsigned long)((100)*(4000000/4000000.0)));
  2895  0FDF  3021               	movlw	33
  2896  0FE0                     u2637:
  2897  0FE0  0B89               	decfsz	9,f
  2898  0FE1  2FE0               	goto	u2637
  2899  0FE2  0000               	nop
  2900                           
  2901                           ;main.c: 293:   return value;
  2902  0FE3  3000               	movlw	0
  2903  0FE4  0020               	movlb	0	; select bank0
  2904  0FE5  186F               	btfsc	ds18b20_read_bit@value/(0+8),ds18b20_read_bit@value& (0+7)
  2905  0FE6  3001               	movlw	1
  2906  0FE7                     l855:
  2907  0FE7  0008               	return
  2908  0FE8                     __end_of_ds18b20_read_bit:
  2909                           
  2910                           	psect	text7
  2911  04B4                     __ptext7:	
  2912 ;; *************** function _display_digitalCLK *****************
  2913 ;; Defined at:
  2914 ;;		line 325 in file "main.c"
  2915 ;; Parameters:    Size  Location     Type
  2916 ;;		None
  2917 ;; Auto vars:     Size  Location     Type
  2918 ;;		None
  2919 ;; Return value:  Size  Location     Type
  2920 ;;                  1    wreg      void 
  2921 ;; Registers used:
  2922 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2923 ;; Tracked objects:
  2924 ;;		On entry : 0/0
  2925 ;;		On exit  : 0/0
  2926 ;;		Unchanged: 0/0
  2927 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  2928 ;;      Params:         0       0       0       0       0       0       0       0
  2929 ;;      Locals:         0       0       0       0       0       0       0       0
  2930 ;;      Temps:          0       2       0       0       0       0       0       0
  2931 ;;      Totals:         0       2       0       0       0       0       0       0
  2932 ;;Total ram usage:        2 bytes
  2933 ;; Hardware stack levels used:    1
  2934 ;; Hardware stack levels required when called:   10
  2935 ;; This function calls:
  2936 ;;		_I2C_Write1ByteRegister
  2937 ;;		_RTC_Display
  2938 ;;		_debounce
  2939 ;;		_decimal_to_bcd
  2940 ;;		_edit
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           
  2947                           ;psect for function _display_digitalCLK
  2948  04B4                     _display_digitalCLK:
  2949  04B4                     l3684:	
  2950                           ;incstack = 0
  2951                           ; Regs used in _display_digitalCLK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2952                           
  2953                           
  2954                           ;main.c: 326:     if(!PORTCbits.RC3)
  2955  04B4  0020               	movlb	0	; select bank0
  2956  04B5  198E               	btfsc	14,3	;volatile
  2957  04B6  2CB8               	goto	u2041
  2958  04B7  2CB9               	goto	u2040
  2959  04B8                     u2041:
  2960  04B8  2D0E               	goto	l3700
  2961  04B9                     u2040:
  2962  04B9                     l3686:
  2963                           
  2964                           ;main.c: 327:     if(debounce()){
  2965  04B9  3181  2183  3184   	fcall	_debounce
  2966  04BC  0870               	movf	?_debounce,w
  2967  04BD  0471               	iorwf	?_debounce+1,w
  2968  04BE  1903               	btfsc	3,2
  2969  04BF  2CC1               	goto	u2051
  2970  04C0  2CC2               	goto	u2050
  2971  04C1                     u2051:
  2972  04C1  2D0E               	goto	l3700
  2973  04C2                     u2050:
  2974  04C2                     l3688:
  2975                           
  2976                           ;main.c: 328:         i = 1;
  2977  04C2  0020               	movlb	0	; select bank0
  2978  04C3  01C8               	clrf	_i
  2979  04C4  0AC8               	incf	_i,f
  2980  04C5                     l3690:
  2981                           
  2982                           ;main.c: 329:         hour = edit(1,hour);
  2983  04C5  0849               	movf	_hour,w
  2984  04C6  00DC               	movwf	??_display_digitalCLK
  2985  04C7  085C               	movf	??_display_digitalCLK,w
  2986  04C8  00FC               	movwf	edit@parameter
  2987  04C9  3001               	movlw	1
  2988  04CA  3186  269C  3184   	fcall	_edit
  2989  04CD  0020               	movlb	0	; select bank0
  2990  04CE  00DD               	movwf	??_display_digitalCLK+1
  2991  04CF  085D               	movf	??_display_digitalCLK+1,w
  2992  04D0  00C9               	movwf	_hour
  2993                           
  2994                           ;main.c: 330:         minute = edit(2,minute);
  2995  04D1  084A               	movf	_minute,w
  2996  04D2  00DC               	movwf	??_display_digitalCLK
  2997  04D3  085C               	movf	??_display_digitalCLK,w
  2998  04D4  00FC               	movwf	edit@parameter
  2999  04D5  3002               	movlw	2
  3000  04D6  3186  269C  3184   	fcall	_edit
  3001  04D9  0020               	movlb	0	; select bank0
  3002  04DA  00DD               	movwf	??_display_digitalCLK+1
  3003  04DB  085D               	movf	??_display_digitalCLK+1,w
  3004  04DC  00CA               	movwf	_minute
  3005  04DD                     l3692:	
  3006                           ;main.c: 331:         while(debounce());
  3007                           
  3008  04DD  3181  2183  3184   	fcall	_debounce
  3009  04E0  0870               	movf	?_debounce,w
  3010  04E1  0471               	iorwf	?_debounce+1,w
  3011  04E2  1D03               	btfss	3,2
  3012  04E3  2CE5               	goto	u2061
  3013  04E4  2CE6               	goto	u2060
  3014  04E5                     u2061:
  3015  04E5  2CDD               	goto	l3692
  3016  04E6                     u2060:
  3017  04E6                     l3694:
  3018                           
  3019                           ;main.c: 332:         hour = decimal_to_bcd(hour);
  3020  04E6  0020               	movlb	0	; select bank0
  3021  04E7  0849               	movf	_hour,w
  3022  04E8  3182  2206  3184   	fcall	_decimal_to_bcd
  3023  04EB  0020               	movlb	0	; select bank0
  3024  04EC  00DC               	movwf	??_display_digitalCLK
  3025  04ED  085C               	movf	??_display_digitalCLK,w
  3026  04EE  00C9               	movwf	_hour
  3027                           
  3028                           ;main.c: 333:         minute = decimal_to_bcd(minute);
  3029  04EF  084A               	movf	_minute,w
  3030  04F0  3182  2206  3184   	fcall	_decimal_to_bcd
  3031  04F3  0020               	movlb	0	; select bank0
  3032  04F4  00DC               	movwf	??_display_digitalCLK
  3033  04F5  085C               	movf	??_display_digitalCLK,w
  3034  04F6  00CA               	movwf	_minute
  3035  04F7                     l3696:
  3036                           
  3037                           ;main.c: 334:         I2C_Write1ByteRegister(0x68,0x01,minute);
  3038  04F7  01D5               	clrf	I2C_Write1ByteRegister@reg
  3039  04F8  0AD5               	incf	I2C_Write1ByteRegister@reg,f
  3040  04F9  084A               	movf	_minute,w
  3041  04FA  00DC               	movwf	??_display_digitalCLK
  3042  04FB  085C               	movf	??_display_digitalCLK,w
  3043  04FC  00D6               	movwf	I2C_Write1ByteRegister@data
  3044  04FD  3068               	movlw	104
  3045  04FE  3182  2263  3184   	fcall	_I2C_Write1ByteRegister
  3046  0501                     l3698:
  3047                           
  3048                           ;main.c: 335:         I2C_Write1ByteRegister(0x68,0x02,hour);
  3049  0501  3002               	movlw	2
  3050  0502  0020               	movlb	0	; select bank0
  3051  0503  00DC               	movwf	??_display_digitalCLK
  3052  0504  085C               	movf	??_display_digitalCLK,w
  3053  0505  00D5               	movwf	I2C_Write1ByteRegister@reg
  3054  0506  0849               	movf	_hour,w
  3055  0507  00DD               	movwf	??_display_digitalCLK+1
  3056  0508  085D               	movf	??_display_digitalCLK+1,w
  3057  0509  00D6               	movwf	I2C_Write1ByteRegister@data
  3058  050A  3068               	movlw	104
  3059  050B  3182  2263  3184   	fcall	_I2C_Write1ByteRegister
  3060  050E                     l3700:
  3061                           
  3062                           ;main.c: 339:         RTC_Display();
  3063  050E  3185  2571  3184   	fcall	_RTC_Display
  3064  0511                     l876:
  3065  0511  0008               	return
  3066  0512                     __end_of_display_digitalCLK:
  3067                           
  3068                           	psect	text8
  3069  069C                     __ptext8:	
  3070 ;; *************** function _edit *****************
  3071 ;; Defined at:
  3072 ;;		line 181 in file "main.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  position        1    wreg     unsigned char 
  3075 ;;  parameter       1   12[COMMON] unsigned char 
  3076 ;; Auto vars:     Size  Location     Type
  3077 ;;  position        1   13[COMMON] unsigned char 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  1    wreg      unsigned char 
  3080 ;; Registers used:
  3081 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3087 ;;      Params:         1       0       0       0       0       0       0       0
  3088 ;;      Locals:         1       0       0       0       0       0       0       0
  3089 ;;      Temps:          0       3       0       0       0       0       0       0
  3090 ;;      Totals:         2       3       0       0       0       0       0       0
  3091 ;;Total ram usage:        5 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    2
  3094 ;; This function calls:
  3095 ;;		_Write_Digits
  3096 ;;		___awdiv
  3097 ;;		___awmod
  3098 ;;		_debounce
  3099 ;;		_delay
  3100 ;; This function is called by:
  3101 ;;		_display_digitalCLK
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           
  3106                           ;psect for function _edit
  3107  069C                     _edit:
  3108                           
  3109                           ;incstack = 0
  3110                           ; Regs used in _edit: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3111                           ;edit@position stored from wreg
  3112  069C  00FD               	movwf	edit@position
  3113  069D                     l3536:
  3114  069D                     l3538:	
  3115                           ;main.c: 182:     while(debounce());
  3116                           
  3117  069D  3181  2183  3186   	fcall	_debounce
  3118  06A0  0870               	movf	?_debounce,w
  3119  06A1  0471               	iorwf	?_debounce+1,w
  3120  06A2  1D03               	btfss	3,2
  3121  06A3  2EA5               	goto	u1841
  3122  06A4  2EA6               	goto	u1840
  3123  06A5                     u1841:
  3124  06A5  2E9D               	goto	l3538
  3125  06A6                     u1840:
  3126  06A6  2F35               	goto	l3560
  3127  06A7                     l3540:
  3128                           
  3129                           ;main.c: 185:         parameter = parameter + 1;
  3130  06A7  087C               	movf	edit@parameter,w
  3131  06A8  3E01               	addlw	1
  3132  06A9  00D3               	movwf	??_edit
  3133  06AA  0853               	movf	??_edit,w
  3134  06AB  00FC               	movwf	edit@parameter
  3135                           
  3136                           ;main.c: 186:         if(i == 1 && parameter > 23) parameter = 0;
  3137  06AC  0348               	decf	_i,w
  3138  06AD  1D03               	btfss	3,2
  3139  06AE  2EB0               	goto	u1851
  3140  06AF  2EB1               	goto	u1850
  3141  06B0                     u1851:
  3142  06B0  2EB8               	goto	l3546
  3143  06B1                     u1850:
  3144  06B1                     l3542:
  3145  06B1  3018               	movlw	24
  3146  06B2  027C               	subwf	edit@parameter,w
  3147  06B3  1C03               	skipc
  3148  06B4  2EB6               	goto	u1861
  3149  06B5  2EB7               	goto	u1860
  3150  06B6                     u1861:
  3151  06B6  2EB8               	goto	l3546
  3152  06B7                     u1860:
  3153  06B7                     l3544:
  3154  06B7  01FC               	clrf	edit@parameter
  3155  06B8                     l3546:
  3156                           
  3157                           ;main.c: 187:         if(i == 2 && parameter > 59) parameter = 0;
  3158  06B8  3002               	movlw	2
  3159  06B9  0648               	xorwf	_i,w
  3160  06BA  1D03               	btfss	3,2
  3161  06BB  2EBD               	goto	u1871
  3162  06BC  2EBE               	goto	u1870
  3163  06BD                     u1871:
  3164  06BD  2EC5               	goto	l3552
  3165  06BE                     u1870:
  3166  06BE                     l3548:
  3167  06BE  303C               	movlw	60
  3168  06BF  027C               	subwf	edit@parameter,w
  3169  06C0  1C03               	skipc
  3170  06C1  2EC3               	goto	u1881
  3171  06C2  2EC4               	goto	u1880
  3172  06C3                     u1881:
  3173  06C3  2EC5               	goto	l3552
  3174  06C4                     u1880:
  3175  06C4                     l3550:
  3176  06C4  01FC               	clrf	edit@parameter
  3177  06C5                     l3552:
  3178                           
  3179                           ;main.c: 188:         if(position % 2 != 0){
  3180  06C5  1C7D               	btfss	edit@position,0
  3181  06C6  2EC8               	goto	u1891
  3182  06C7  2EC9               	goto	u1890
  3183  06C8                     u1891:
  3184  06C8  2EF9               	goto	l3556
  3185  06C9                     u1890:
  3186  06C9                     l3554:
  3187                           
  3188                           ;main.c: 189:             Write_Digits(0,parameter/10);
  3189  06C9  300A               	movlw	10
  3190  06CA  00F0               	movwf	___awdiv@divisor
  3191  06CB  3000               	movlw	0
  3192  06CC  00F1               	movwf	___awdiv@divisor+1
  3193  06CD  087C               	movf	edit@parameter,w
  3194  06CE  00D3               	movwf	??_edit
  3195  06CF  01D4               	clrf	??_edit+1
  3196  06D0  0853               	movf	??_edit,w
  3197  06D1  00F2               	movwf	___awdiv@dividend
  3198  06D2  0854               	movf	??_edit+1,w
  3199  06D3  00F3               	movwf	___awdiv@dividend+1
  3200  06D4  3185  2512  3186   	fcall	___awdiv
  3201  06D7  0870               	movf	?___awdiv,w
  3202  06D8  0020               	movlb	0	; select bank0
  3203  06D9  00D5               	movwf	??_edit+2
  3204  06DA  0855               	movf	??_edit+2,w
  3205  06DB  00F9               	movwf	Write_Digits@valueDigits
  3206  06DC  3000               	movlw	0
  3207  06DD  3181  212F  3186   	fcall	_Write_Digits
  3208                           
  3209                           ;main.c: 190:             Write_Digits(1,parameter%10);
  3210  06E0  300A               	movlw	10
  3211  06E1  00F0               	movwf	___awmod@divisor
  3212  06E2  3000               	movlw	0
  3213  06E3  00F1               	movwf	___awmod@divisor+1
  3214  06E4  087C               	movf	edit@parameter,w
  3215  06E5  0020               	movlb	0	; select bank0
  3216  06E6  00D3               	movwf	??_edit
  3217  06E7  01D4               	clrf	??_edit+1
  3218  06E8  0853               	movf	??_edit,w
  3219  06E9  00F2               	movwf	___awmod@dividend
  3220  06EA  0854               	movf	??_edit+1,w
  3221  06EB  00F3               	movwf	___awmod@dividend+1
  3222  06EC  3184  240C  3186   	fcall	___awmod
  3223  06EF  0870               	movf	?___awmod,w
  3224  06F0  0020               	movlb	0	; select bank0
  3225  06F1  00D5               	movwf	??_edit+2
  3226  06F2  0855               	movf	??_edit+2,w
  3227  06F3  00F9               	movwf	Write_Digits@valueDigits
  3228  06F4  3001               	movlw	1
  3229  06F5  3181  212F  3186   	fcall	_Write_Digits
  3230                           
  3231                           ;main.c: 191:         }else{
  3232  06F8  2F28               	goto	l3558
  3233  06F9                     l3556:
  3234                           
  3235                           ;main.c: 192:             Write_Digits(2,parameter/10);
  3236  06F9  300A               	movlw	10
  3237  06FA  00F0               	movwf	___awdiv@divisor
  3238  06FB  3000               	movlw	0
  3239  06FC  00F1               	movwf	___awdiv@divisor+1
  3240  06FD  087C               	movf	edit@parameter,w
  3241  06FE  00D3               	movwf	??_edit
  3242  06FF  01D4               	clrf	??_edit+1
  3243  0700  0853               	movf	??_edit,w
  3244  0701  00F2               	movwf	___awdiv@dividend
  3245  0702  0854               	movf	??_edit+1,w
  3246  0703  00F3               	movwf	___awdiv@dividend+1
  3247  0704  3185  2512  3186   	fcall	___awdiv
  3248  0707  0870               	movf	?___awdiv,w
  3249  0708  0020               	movlb	0	; select bank0
  3250  0709  00D5               	movwf	??_edit+2
  3251  070A  0855               	movf	??_edit+2,w
  3252  070B  00F9               	movwf	Write_Digits@valueDigits
  3253  070C  3002               	movlw	2
  3254  070D  3181  212F  3186   	fcall	_Write_Digits
  3255                           
  3256                           ;main.c: 193:             Write_Digits(3,parameter%10);
  3257  0710  300A               	movlw	10
  3258  0711  00F0               	movwf	___awmod@divisor
  3259  0712  3000               	movlw	0
  3260  0713  00F1               	movwf	___awmod@divisor+1
  3261  0714  087C               	movf	edit@parameter,w
  3262  0715  0020               	movlb	0	; select bank0
  3263  0716  00D3               	movwf	??_edit
  3264  0717  01D4               	clrf	??_edit+1
  3265  0718  0853               	movf	??_edit,w
  3266  0719  00F2               	movwf	___awmod@dividend
  3267  071A  0854               	movf	??_edit+1,w
  3268  071B  00F3               	movwf	___awmod@dividend+1
  3269  071C  3184  240C  3186   	fcall	___awmod
  3270  071F  0870               	movf	?___awmod,w
  3271  0720  0020               	movlb	0	; select bank0
  3272  0721  00D5               	movwf	??_edit+2
  3273  0722  0855               	movf	??_edit+2,w
  3274  0723  00F9               	movwf	Write_Digits@valueDigits
  3275  0724  3003               	movlw	3
  3276  0725  3181  212F  3186   	fcall	_Write_Digits
  3277  0728                     l3558:
  3278                           
  3279                           ;main.c: 196:         _delay((unsigned long)((200)*(4000000/4000.0)));
  3280  0728  3002               	movlw	2
  3281  0729  0020               	movlb	0	; select bank0
  3282  072A  00D4               	movwf	??_edit+1
  3283  072B  3004               	movlw	4
  3284  072C  00D3               	movwf	??_edit
  3285  072D  30BA               	movlw	186
  3286  072E                     u2647:
  3287  072E  0B89               	decfsz	9,f
  3288  072F  2F2E               	goto	u2647
  3289  0730  0BD3               	decfsz	??_edit,f
  3290  0731  2F2E               	goto	u2647
  3291  0732  0BD4               	decfsz	??_edit+1,f
  3292  0733  2F2E               	goto	u2647
  3293  0734  0000               	nop
  3294  0735                     l3560:
  3295                           
  3296                           ;main.c: 184:     while(!PORTCbits.RC4){
  3297  0735  0020               	movlb	0	; select bank0
  3298  0736  1E0E               	btfss	14,4	;volatile
  3299  0737  2F39               	goto	u1901
  3300  0738  2F3A               	goto	u1900
  3301  0739                     u1901:
  3302  0739  2EA7               	goto	l3540
  3303  073A                     u1900:
  3304  073A                     l817:
  3305                           
  3306                           ;main.c: 199:     if(position %2 != 0){
  3307  073A  1C7D               	btfss	edit@position,0
  3308  073B  2F3D               	goto	u1911
  3309  073C  2F3E               	goto	u1910
  3310  073D                     u1911:
  3311  073D  2F86               	goto	l3572
  3312  073E                     u1910:
  3313  073E                     l3562:
  3314                           
  3315                           ;main.c: 200:         Write_Digits(0,0x0F);
  3316  073E  300F               	movlw	15
  3317  073F  00D3               	movwf	??_edit
  3318  0740  0853               	movf	??_edit,w
  3319  0741  00F9               	movwf	Write_Digits@valueDigits
  3320  0742  3000               	movlw	0
  3321  0743  3181  212F  3186   	fcall	_Write_Digits
  3322                           
  3323                           ;main.c: 201:         Write_Digits(1,0x0F);
  3324  0746  300F               	movlw	15
  3325  0747  0020               	movlb	0	; select bank0
  3326  0748  00D3               	movwf	??_edit
  3327  0749  0853               	movf	??_edit,w
  3328  074A  00F9               	movwf	Write_Digits@valueDigits
  3329  074B  3001               	movlw	1
  3330  074C  3181  212F  3186   	fcall	_Write_Digits
  3331  074F                     l3564:
  3332                           
  3333                           ;main.c: 202:         delay();
  3334  074F  318F  2789  3186   	fcall	_delay
  3335  0752                     l3566:
  3336                           
  3337                           ;main.c: 203:         Write_Digits(0,parameter/10);
  3338  0752  300A               	movlw	10
  3339  0753  00F0               	movwf	___awdiv@divisor
  3340  0754  3000               	movlw	0
  3341  0755  00F1               	movwf	___awdiv@divisor+1
  3342  0756  087C               	movf	edit@parameter,w
  3343  0757  0020               	movlb	0	; select bank0
  3344  0758  00D3               	movwf	??_edit
  3345  0759  01D4               	clrf	??_edit+1
  3346  075A  0853               	movf	??_edit,w
  3347  075B  00F2               	movwf	___awdiv@dividend
  3348  075C  0854               	movf	??_edit+1,w
  3349  075D  00F3               	movwf	___awdiv@dividend+1
  3350  075E  3185  2512  3186   	fcall	___awdiv
  3351  0761  0870               	movf	?___awdiv,w
  3352  0762  0020               	movlb	0	; select bank0
  3353  0763  00D5               	movwf	??_edit+2
  3354  0764  0855               	movf	??_edit+2,w
  3355  0765  00F9               	movwf	Write_Digits@valueDigits
  3356  0766  3000               	movlw	0
  3357  0767  3181  212F  3186   	fcall	_Write_Digits
  3358  076A                     l3568:
  3359                           
  3360                           ;main.c: 204:         Write_Digits(1,parameter%10);
  3361  076A  300A               	movlw	10
  3362  076B  00F0               	movwf	___awmod@divisor
  3363  076C  3000               	movlw	0
  3364  076D  00F1               	movwf	___awmod@divisor+1
  3365  076E  087C               	movf	edit@parameter,w
  3366  076F  0020               	movlb	0	; select bank0
  3367  0770  00D3               	movwf	??_edit
  3368  0771  01D4               	clrf	??_edit+1
  3369  0772  0853               	movf	??_edit,w
  3370  0773  00F2               	movwf	___awmod@dividend
  3371  0774  0854               	movf	??_edit+1,w
  3372  0775  00F3               	movwf	___awmod@dividend+1
  3373  0776  3184  240C  3186   	fcall	___awmod
  3374  0779  0870               	movf	?___awmod,w
  3375  077A  0020               	movlb	0	; select bank0
  3376  077B  00D5               	movwf	??_edit+2
  3377  077C  0855               	movf	??_edit+2,w
  3378  077D  00F9               	movwf	Write_Digits@valueDigits
  3379  077E  3001               	movlw	1
  3380  077F  3181  212F  3186   	fcall	_Write_Digits
  3381  0782                     l3570:
  3382                           
  3383                           ;main.c: 205:         delay();
  3384  0782  318F  2789  3186   	fcall	_delay
  3385                           
  3386                           ;main.c: 206:     }else{
  3387  0785  2FCB               	goto	l3582
  3388  0786                     l3572:
  3389                           
  3390                           ;main.c: 207:         Write_Digits(2,0x0F);
  3391  0786  300F               	movlw	15
  3392  0787  00D3               	movwf	??_edit
  3393  0788  0853               	movf	??_edit,w
  3394  0789  00F9               	movwf	Write_Digits@valueDigits
  3395  078A  3002               	movlw	2
  3396  078B  3181  212F  3186   	fcall	_Write_Digits
  3397                           
  3398                           ;main.c: 208:         Write_Digits(3,0x0F);
  3399  078E  300F               	movlw	15
  3400  078F  0020               	movlb	0	; select bank0
  3401  0790  00D3               	movwf	??_edit
  3402  0791  0853               	movf	??_edit,w
  3403  0792  00F9               	movwf	Write_Digits@valueDigits
  3404  0793  3003               	movlw	3
  3405  0794  3181  212F  3186   	fcall	_Write_Digits
  3406  0797                     l3574:
  3407                           
  3408                           ;main.c: 209:         delay();
  3409  0797  318F  2789  3186   	fcall	_delay
  3410  079A                     l3576:
  3411                           
  3412                           ;main.c: 210:         Write_Digits(2,parameter/10);
  3413  079A  300A               	movlw	10
  3414  079B  00F0               	movwf	___awdiv@divisor
  3415  079C  3000               	movlw	0
  3416  079D  00F1               	movwf	___awdiv@divisor+1
  3417  079E  087C               	movf	edit@parameter,w
  3418  079F  0020               	movlb	0	; select bank0
  3419  07A0  00D3               	movwf	??_edit
  3420  07A1  01D4               	clrf	??_edit+1
  3421  07A2  0853               	movf	??_edit,w
  3422  07A3  00F2               	movwf	___awdiv@dividend
  3423  07A4  0854               	movf	??_edit+1,w
  3424  07A5  00F3               	movwf	___awdiv@dividend+1
  3425  07A6  3185  2512  3186   	fcall	___awdiv
  3426  07A9  0870               	movf	?___awdiv,w
  3427  07AA  0020               	movlb	0	; select bank0
  3428  07AB  00D5               	movwf	??_edit+2
  3429  07AC  0855               	movf	??_edit+2,w
  3430  07AD  00F9               	movwf	Write_Digits@valueDigits
  3431  07AE  3002               	movlw	2
  3432  07AF  3181  212F  3186   	fcall	_Write_Digits
  3433  07B2                     l3578:
  3434                           
  3435                           ;main.c: 211:         Write_Digits(3,parameter%10);
  3436  07B2  300A               	movlw	10
  3437  07B3  00F0               	movwf	___awmod@divisor
  3438  07B4  3000               	movlw	0
  3439  07B5  00F1               	movwf	___awmod@divisor+1
  3440  07B6  087C               	movf	edit@parameter,w
  3441  07B7  0020               	movlb	0	; select bank0
  3442  07B8  00D3               	movwf	??_edit
  3443  07B9  01D4               	clrf	??_edit+1
  3444  07BA  0853               	movf	??_edit,w
  3445  07BB  00F2               	movwf	___awmod@dividend
  3446  07BC  0854               	movf	??_edit+1,w
  3447  07BD  00F3               	movwf	___awmod@dividend+1
  3448  07BE  3184  240C  3186   	fcall	___awmod
  3449  07C1  0870               	movf	?___awmod,w
  3450  07C2  0020               	movlb	0	; select bank0
  3451  07C3  00D5               	movwf	??_edit+2
  3452  07C4  0855               	movf	??_edit+2,w
  3453  07C5  00F9               	movwf	Write_Digits@valueDigits
  3454  07C6  3003               	movlw	3
  3455  07C7  3181  212F  3186   	fcall	_Write_Digits
  3456  07CA  2F82               	goto	l3570
  3457  07CB                     l3582:
  3458                           
  3459                           ;main.c: 216:     if(!PORTCbits.RC3)
  3460  07CB  0020               	movlb	0	; select bank0
  3461  07CC  198E               	btfsc	14,3	;volatile
  3462  07CD  2FCF               	goto	u1921
  3463  07CE  2FD0               	goto	u1920
  3464  07CF                     u1921:
  3465  07CF  2F35               	goto	l3560
  3466  07D0                     u1920:
  3467  07D0                     l3584:
  3468                           
  3469                           ;main.c: 217:     if(debounce()){
  3470  07D0  3181  2183  3186   	fcall	_debounce
  3471  07D3  0870               	movf	?_debounce,w
  3472  07D4  0471               	iorwf	?_debounce+1,w
  3473  07D5  1903               	btfsc	3,2
  3474  07D6  2FD8               	goto	u1931
  3475  07D7  2FD9               	goto	u1930
  3476  07D8                     u1931:
  3477  07D8  2F35               	goto	l3560
  3478  07D9                     u1930:
  3479  07D9                     l3586:
  3480                           
  3481                           ;main.c: 218:         i = i + 1;
  3482  07D9  0020               	movlb	0	; select bank0
  3483  07DA  0848               	movf	_i,w
  3484  07DB  3E01               	addlw	1
  3485  07DC  00D3               	movwf	??_edit
  3486  07DD  0853               	movf	??_edit,w
  3487  07DE  00C8               	movwf	_i
  3488                           
  3489                           ;main.c: 219:         if(i == 3) i = 0;
  3490  07DF  3003               	movlw	3
  3491  07E0  0648               	xorwf	_i,w
  3492  07E1  1D03               	btfss	3,2
  3493  07E2  2FE4               	goto	u1941
  3494  07E3  2FE5               	goto	u1940
  3495  07E4                     u1941:
  3496  07E4  2FE6               	goto	l3590
  3497  07E5                     u1940:
  3498  07E5                     l3588:
  3499  07E5  01C8               	clrf	_i
  3500  07E6                     l3590:
  3501                           
  3502                           ;main.c: 220:         return parameter;
  3503  07E6  087C               	movf	edit@parameter,w
  3504  07E7                     l823:
  3505  07E7  0008               	return
  3506  07E8                     __end_of_edit:
  3507                           
  3508                           	psect	text9
  3509  0F89                     __ptext9:	
  3510 ;; *************** function _delay *****************
  3511 ;; Defined at:
  3512 ;;		line 173 in file "main.c"
  3513 ;; Parameters:    Size  Location     Type
  3514 ;;		None
  3515 ;; Auto vars:     Size  Location     Type
  3516 ;;		None
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, status,2
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3526 ;;      Params:         0       0       0       0       0       0       0       0
  3527 ;;      Locals:         0       0       0       0       0       0       0       0
  3528 ;;      Temps:          0       0       0       0       0       0       0       0
  3529 ;;      Totals:         0       0       0       0       0       0       0       0
  3530 ;;Total ram usage:        0 bytes
  3531 ;; Hardware stack levels used:    1
  3532 ;; This function calls:
  3533 ;;		Nothing
  3534 ;; This function is called by:
  3535 ;;		_edit
  3536 ;; This function uses a non-reentrant model
  3537 ;;
  3538                           
  3539                           
  3540                           ;psect for function _delay
  3541  0F89                     _delay:
  3542  0F89                     l3354:	
  3543                           ;incstack = 0
  3544                           ; Regs used in _delay: [wreg+status,2]
  3545                           
  3546                           
  3547                           ;main.c: 174:   TMR1H = TMR1L = 0;
  3548  0F89  0020               	movlb	0	; select bank0
  3549  0F8A  0196               	clrf	22	;volatile
  3550  0F8B  0197               	clrf	23	;volatile
  3551  0F8C                     l3356:
  3552                           
  3553                           ;main.c: 175:   TMR1ON = 1;
  3554  0F8C  1418               	bsf	24,0	;volatile
  3555  0F8D                     l3358:	
  3556                           ;main.c: 177:   while (((uint16_t)(TMR1H << 8) | TMR1L) < 62500 && PORTCbits.RC3 && PORT
      +                          Cbits.RC4);
  3557                           
  3558  0F8D  30F4               	movlw	244
  3559  0F8E  0217               	subwf	23,w	;volatile
  3560  0F8F  3024               	movlw	36
  3561  0F90  1903               	skipnz
  3562  0F91  0216               	subwf	22,w	;volatile
  3563  0F92  1803               	skipnc
  3564  0F93  2F95               	goto	u1581
  3565  0F94  2F96               	goto	u1580
  3566  0F95                     u1581:
  3567  0F95  2F9E               	goto	l803
  3568  0F96                     u1580:
  3569  0F96                     l3360:
  3570  0F96  1D8E               	btfss	14,3	;volatile
  3571  0F97  2F99               	goto	u1591
  3572  0F98  2F9A               	goto	u1590
  3573  0F99                     u1591:
  3574  0F99  2F9E               	goto	l803
  3575  0F9A                     u1590:
  3576  0F9A                     l3362:
  3577  0F9A  1A0E               	btfsc	14,4	;volatile
  3578  0F9B  2F9D               	goto	u1601
  3579  0F9C  2F9E               	goto	u1600
  3580  0F9D                     u1601:
  3581  0F9D  2F8D               	goto	l3358
  3582  0F9E                     u1600:
  3583  0F9E                     l803:
  3584                           
  3585                           ;main.c: 178:   TMR1ON = 0;
  3586  0F9E  1018               	bcf	24,0	;volatile
  3587  0F9F                     l804:
  3588  0F9F  0008               	return
  3589  0FA0                     __end_of_delay:
  3590                           
  3591                           	psect	text10
  3592  0183                     __ptext10:	
  3593 ;; *************** function _debounce *****************
  3594 ;; Defined at:
  3595 ;;		line 163 in file "main.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;		None
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  i               1    4[COMMON] unsigned char 
  3600 ;;  count           1    3[COMMON] unsigned char 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  2    0[COMMON] int 
  3603 ;; Registers used:
  3604 ;;		wreg, status,2, status,0
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3610 ;;      Params:         2       0       0       0       0       0       0       0
  3611 ;;      Locals:         2       0       0       0       0       0       0       0
  3612 ;;      Temps:          1       0       0       0       0       0       0       0
  3613 ;;      Totals:         5       0       0       0       0       0       0       0
  3614 ;;Total ram usage:        5 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; This function calls:
  3617 ;;		Nothing
  3618 ;; This function is called by:
  3619 ;;		_edit
  3620 ;;		_display_digitalCLK
  3621 ;; This function uses a non-reentrant model
  3622 ;;
  3623                           
  3624                           
  3625                           ;psect for function _debounce
  3626  0183                     _debounce:
  3627  0183                     l3330:	
  3628                           ;incstack = 0
  3629                           ; Regs used in _debounce: [wreg+status,2+status,0]
  3630                           
  3631                           
  3632                           ;main.c: 164:     uint8_t count = 0;
  3633  0183  01F3               	clrf	debounce@count
  3634                           
  3635                           ;main.c: 165:     for(uint8_t i = 0; i < 3; i++){
  3636  0184  01F4               	clrf	debounce@i
  3637  0185                     l791:
  3638                           
  3639                           ;main.c: 166:         if (PORTCbits.RC3 == 0)
  3640  0185  0020               	movlb	0	; select bank0
  3641  0186  198E               	btfsc	14,3	;volatile
  3642  0187  2989               	goto	u1551
  3643  0188  298A               	goto	u1550
  3644  0189                     u1551:
  3645  0189  298F               	goto	l3338
  3646  018A                     u1550:
  3647  018A                     l3336:
  3648                           
  3649                           ;main.c: 167:         count = count + 1;
  3650  018A  0873               	movf	debounce@count,w
  3651  018B  3E01               	addlw	1
  3652  018C  00F2               	movwf	??_debounce
  3653  018D  0872               	movf	??_debounce,w
  3654  018E  00F3               	movwf	debounce@count
  3655  018F                     l3338:
  3656                           
  3657                           ;main.c: 168:         _delay((unsigned long)((10)*(4000000/4000.0)));
  3658  018F  300D               	movlw	13
  3659  0190  00F2               	movwf	??_debounce
  3660  0191  30FC               	movlw	252
  3661  0192                     u2657:
  3662  0192  0B89               	decfsz	9,f
  3663  0193  2992               	goto	u2657
  3664  0194  0BF2               	decfsz	??_debounce,f
  3665  0195  2992               	goto	u2657
  3666  0196                     l3340:
  3667                           
  3668                           ;main.c: 169:     }
  3669  0196  3001               	movlw	1
  3670  0197  00F2               	movwf	??_debounce
  3671  0198  0872               	movf	??_debounce,w
  3672  0199  07F4               	addwf	debounce@i,f
  3673  019A  3003               	movlw	3
  3674  019B  0274               	subwf	debounce@i,w
  3675  019C  1C03               	skipc
  3676  019D  299F               	goto	u1561
  3677  019E  29A0               	goto	u1560
  3678  019F                     u1561:
  3679  019F  2985               	goto	l791
  3680  01A0                     u1560:
  3681  01A0                     l3342:
  3682                           
  3683                           ;main.c: 170:     if(count > 2) {return 1;}
  3684  01A0  3003               	movlw	3
  3685  01A1  0273               	subwf	debounce@count,w
  3686  01A2  1C03               	skipc
  3687  01A3  29A5               	goto	u1571
  3688  01A4  29A6               	goto	u1570
  3689  01A5                     u1571:
  3690  01A5  29AB               	goto	l3350
  3691  01A6                     u1570:
  3692  01A6                     l3344:
  3693  01A6  3001               	movlw	1
  3694  01A7  00F0               	movwf	?_debounce
  3695  01A8  3000               	movlw	0
  3696  01A9  00F1               	movwf	?_debounce+1
  3697  01AA  29AD               	goto	l795
  3698  01AB                     l3350:
  3699  01AB  01F0               	clrf	?_debounce
  3700  01AC  01F1               	clrf	?_debounce+1
  3701  01AD                     l795:
  3702  01AD  0008               	return
  3703  01AE                     __end_of_debounce:
  3704                           
  3705                           	psect	text11
  3706  0206                     __ptext11:	
  3707 ;; *************** function _decimal_to_bcd *****************
  3708 ;; Defined at:
  3709 ;;		line 143 in file "main.c"
  3710 ;; Parameters:    Size  Location     Type
  3711 ;;  number          1    wreg     unsigned char 
  3712 ;; Auto vars:     Size  Location     Type
  3713 ;;  number          1    9[COMMON] unsigned char 
  3714 ;; Return value:  Size  Location     Type
  3715 ;;                  1    wreg      unsigned char 
  3716 ;; Registers used:
  3717 ;;		wreg, status,2, status,0, pclath, cstack
  3718 ;; Tracked objects:
  3719 ;;		On entry : 0/0
  3720 ;;		On exit  : 0/0
  3721 ;;		Unchanged: 0/0
  3722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3723 ;;      Params:         0       0       0       0       0       0       0       0
  3724 ;;      Locals:         1       0       0       0       0       0       0       0
  3725 ;;      Temps:          0       7       0       0       0       0       0       0
  3726 ;;      Totals:         1       7       0       0       0       0       0       0
  3727 ;;Total ram usage:        8 bytes
  3728 ;; Hardware stack levels used:    1
  3729 ;; Hardware stack levels required when called:    1
  3730 ;; This function calls:
  3731 ;;		___awdiv
  3732 ;;		___awmod
  3733 ;; This function is called by:
  3734 ;;		_display_digitalCLK
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           
  3739                           ;psect for function _decimal_to_bcd
  3740  0206                     _decimal_to_bcd:
  3741                           
  3742                           ;incstack = 0
  3743                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  3744                           ;decimal_to_bcd@number stored from wreg
  3745  0206  00F9               	movwf	decimal_to_bcd@number
  3746  0207                     l3518:
  3747                           
  3748                           ;main.c: 143: uint8_t decimal_to_bcd(uint8_t number);main.c: 144: {;main.c: 145:   retur
      +                          n(((number / 10) << 4) + (number % 10));
  3749  0207  300A               	movlw	10
  3750  0208  00F0               	movwf	___awmod@divisor
  3751  0209  3000               	movlw	0
  3752  020A  00F1               	movwf	___awmod@divisor+1
  3753  020B  0879               	movf	decimal_to_bcd@number,w
  3754  020C  0020               	movlb	0	; select bank0
  3755  020D  00D0               	movwf	??_decimal_to_bcd
  3756  020E  01D1               	clrf	??_decimal_to_bcd+1
  3757  020F  0850               	movf	??_decimal_to_bcd,w
  3758  0210  00F2               	movwf	___awmod@dividend
  3759  0211  0851               	movf	??_decimal_to_bcd+1,w
  3760  0212  00F3               	movwf	___awmod@dividend+1
  3761  0213  3184  240C  3182   	fcall	___awmod
  3762  0216  0870               	movf	?___awmod,w
  3763  0217  0020               	movlb	0	; select bank0
  3764  0218  00D2               	movwf	??_decimal_to_bcd+2
  3765  0219  0871               	movf	?___awmod+1,w
  3766  021A  00D3               	movwf	??_decimal_to_bcd+3
  3767  021B  300A               	movlw	10
  3768  021C  00F0               	movwf	___awdiv@divisor
  3769  021D  3000               	movlw	0
  3770  021E  00F1               	movwf	___awdiv@divisor+1
  3771  021F  0879               	movf	decimal_to_bcd@number,w
  3772  0220  00D4               	movwf	??_decimal_to_bcd+4
  3773  0221  01D5               	clrf	??_decimal_to_bcd+5
  3774  0222  0854               	movf	??_decimal_to_bcd+4,w
  3775  0223  00F2               	movwf	___awdiv@dividend
  3776  0224  0855               	movf	??_decimal_to_bcd+5,w
  3777  0225  00F3               	movwf	___awdiv@dividend+1
  3778  0226  3185  2512  3182   	fcall	___awdiv
  3779  0229  0870               	movf	?___awdiv,w
  3780  022A  0020               	movlb	0	; select bank0
  3781  022B  00D6               	movwf	??_decimal_to_bcd+6
  3782  022C  3003               	movlw	3
  3783  022D                     u1835:
  3784  022D  35D6               	lslf	??_decimal_to_bcd+6,f
  3785  022E  3EFF               	addlw	-1
  3786  022F  1D03               	skipz
  3787  0230  2A2D               	goto	u1835
  3788  0231  3556               	lslf	??_decimal_to_bcd+6,w
  3789  0232  0752               	addwf	??_decimal_to_bcd+2,w
  3790  0233                     l785:
  3791  0233  0008               	return
  3792  0234                     __end_of_decimal_to_bcd:
  3793                           
  3794                           	psect	text12
  3795  0571                     __ptext12:	
  3796 ;; *************** function _RTC_Display *****************
  3797 ;; Defined at:
  3798 ;;		line 147 in file "main.c"
  3799 ;; Parameters:    Size  Location     Type
  3800 ;;		None
  3801 ;; Auto vars:     Size  Location     Type
  3802 ;;		None
  3803 ;; Return value:  Size  Location     Type
  3804 ;;                  1    wreg      void 
  3805 ;; Registers used:
  3806 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3807 ;; Tracked objects:
  3808 ;;		On entry : 0/0
  3809 ;;		On exit  : 0/0
  3810 ;;		Unchanged: 0/0
  3811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3812 ;;      Params:         0       0       0       0       0       0       0       0
  3813 ;;      Locals:         0       0       0       0       0       0       0       0
  3814 ;;      Temps:          0       3       0       0       0       0       0       0
  3815 ;;      Totals:         0       3       0       0       0       0       0       0
  3816 ;;Total ram usage:        3 bytes
  3817 ;; Hardware stack levels used:    1
  3818 ;; Hardware stack levels required when called:    9
  3819 ;; This function calls:
  3820 ;;		_I2C_Read1ByteRegister
  3821 ;;		_I2C_Write1ByteRegister
  3822 ;;		_Write_Digits
  3823 ;;		___awdiv
  3824 ;;		___awmod
  3825 ;;		_bcd_to_decimal
  3826 ;; This function is called by:
  3827 ;;		_display_digitalCLK
  3828 ;; This function uses a non-reentrant model
  3829 ;;
  3830                           
  3831                           
  3832                           ;psect for function _RTC_Display
  3833  0571                     _RTC_Display:
  3834  0571                     l3522:	
  3835                           ;incstack = 0
  3836                           ; Regs used in _RTC_Display: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3837                           
  3838                           
  3839                           ;main.c: 149:    I2C_Write1ByteRegister(0b1101000,0xD1,0x00);
  3840  0571  30D1               	movlw	209
  3841  0572  0020               	movlb	0	; select bank0
  3842  0573  00D9               	movwf	??_RTC_Display
  3843  0574  0859               	movf	??_RTC_Display,w
  3844  0575  00D5               	movwf	I2C_Write1ByteRegister@reg
  3845  0576  01D6               	clrf	I2C_Write1ByteRegister@data
  3846  0577  3068               	movlw	104
  3847  0578  3182  2263  3185   	fcall	_I2C_Write1ByteRegister
  3848                           
  3849                           ;main.c: 150:    minute = I2C_Read1ByteRegister(0b1101000,0x01);
  3850  057B  0020               	movlb	0	; select bank0
  3851  057C  01D5               	clrf	I2C_Read1ByteRegister@reg
  3852  057D  0AD5               	incf	I2C_Read1ByteRegister@reg,f
  3853  057E  3068               	movlw	104
  3854  057F  3182  22CA  3185   	fcall	_I2C_Read1ByteRegister
  3855  0582  0020               	movlb	0	; select bank0
  3856  0583  00D9               	movwf	??_RTC_Display
  3857  0584  0859               	movf	??_RTC_Display,w
  3858  0585  00CA               	movwf	_minute
  3859                           
  3860                           ;main.c: 151:    hour = I2C_Read1ByteRegister(0b1101000,0x02);
  3861  0586  3002               	movlw	2
  3862  0587  00D9               	movwf	??_RTC_Display
  3863  0588  0859               	movf	??_RTC_Display,w
  3864  0589  00D5               	movwf	I2C_Read1ByteRegister@reg
  3865  058A  3068               	movlw	104
  3866  058B  3182  22CA  3185   	fcall	_I2C_Read1ByteRegister
  3867  058E  0020               	movlb	0	; select bank0
  3868  058F  00DA               	movwf	??_RTC_Display+1
  3869  0590  085A               	movf	??_RTC_Display+1,w
  3870  0591  00C9               	movwf	_hour
  3871  0592                     l3524:
  3872                           
  3873                           ;main.c: 153:    minute = bcd_to_decimal(minute);
  3874  0592  084A               	movf	_minute,w
  3875  0593  318F  274A  3185   	fcall	_bcd_to_decimal
  3876  0596  0020               	movlb	0	; select bank0
  3877  0597  00D9               	movwf	??_RTC_Display
  3878  0598  0859               	movf	??_RTC_Display,w
  3879  0599  00CA               	movwf	_minute
  3880  059A                     l3526:
  3881                           
  3882                           ;main.c: 154:    hour = bcd_to_decimal(hour);
  3883  059A  0849               	movf	_hour,w
  3884  059B  318F  274A  3185   	fcall	_bcd_to_decimal
  3885  059E  0020               	movlb	0	; select bank0
  3886  059F  00D9               	movwf	??_RTC_Display
  3887  05A0  0859               	movf	??_RTC_Display,w
  3888  05A1  00C9               	movwf	_hour
  3889  05A2                     l3528:
  3890                           
  3891                           ;main.c: 157:    Write_Digits(0,hour/10);
  3892  05A2  300A               	movlw	10
  3893  05A3  00F0               	movwf	___awdiv@divisor
  3894  05A4  3000               	movlw	0
  3895  05A5  00F1               	movwf	___awdiv@divisor+1
  3896  05A6  0849               	movf	_hour,w
  3897  05A7  00D9               	movwf	??_RTC_Display
  3898  05A8  01DA               	clrf	??_RTC_Display+1
  3899  05A9  0859               	movf	??_RTC_Display,w
  3900  05AA  00F2               	movwf	___awdiv@dividend
  3901  05AB  085A               	movf	??_RTC_Display+1,w
  3902  05AC  00F3               	movwf	___awdiv@dividend+1
  3903  05AD  3185  2512  3185   	fcall	___awdiv
  3904  05B0  0870               	movf	?___awdiv,w
  3905  05B1  0020               	movlb	0	; select bank0
  3906  05B2  00DB               	movwf	??_RTC_Display+2
  3907  05B3  085B               	movf	??_RTC_Display+2,w
  3908  05B4  00F9               	movwf	Write_Digits@valueDigits
  3909  05B5  3000               	movlw	0
  3910  05B6  3181  212F  3185   	fcall	_Write_Digits
  3911  05B9                     l3530:
  3912                           
  3913                           ;main.c: 158:    Write_Digits(1,hour%10);
  3914  05B9  300A               	movlw	10
  3915  05BA  00F0               	movwf	___awmod@divisor
  3916  05BB  3000               	movlw	0
  3917  05BC  00F1               	movwf	___awmod@divisor+1
  3918  05BD  0020               	movlb	0	; select bank0
  3919  05BE  0849               	movf	_hour,w
  3920  05BF  00D9               	movwf	??_RTC_Display
  3921  05C0  01DA               	clrf	??_RTC_Display+1
  3922  05C1  0859               	movf	??_RTC_Display,w
  3923  05C2  00F2               	movwf	___awmod@dividend
  3924  05C3  085A               	movf	??_RTC_Display+1,w
  3925  05C4  00F3               	movwf	___awmod@dividend+1
  3926  05C5  3184  240C  3185   	fcall	___awmod
  3927  05C8  0870               	movf	?___awmod,w
  3928  05C9  0020               	movlb	0	; select bank0
  3929  05CA  00DB               	movwf	??_RTC_Display+2
  3930  05CB  085B               	movf	??_RTC_Display+2,w
  3931  05CC  00F9               	movwf	Write_Digits@valueDigits
  3932  05CD  3001               	movlw	1
  3933  05CE  3181  212F  3185   	fcall	_Write_Digits
  3934  05D1                     l3532:
  3935                           
  3936                           ;main.c: 159:    Write_Digits(2,minute/10);
  3937  05D1  300A               	movlw	10
  3938  05D2  00F0               	movwf	___awdiv@divisor
  3939  05D3  3000               	movlw	0
  3940  05D4  00F1               	movwf	___awdiv@divisor+1
  3941  05D5  0020               	movlb	0	; select bank0
  3942  05D6  084A               	movf	_minute,w
  3943  05D7  00D9               	movwf	??_RTC_Display
  3944  05D8  01DA               	clrf	??_RTC_Display+1
  3945  05D9  0859               	movf	??_RTC_Display,w
  3946  05DA  00F2               	movwf	___awdiv@dividend
  3947  05DB  085A               	movf	??_RTC_Display+1,w
  3948  05DC  00F3               	movwf	___awdiv@dividend+1
  3949  05DD  3185  2512  3185   	fcall	___awdiv
  3950  05E0  0870               	movf	?___awdiv,w
  3951  05E1  0020               	movlb	0	; select bank0
  3952  05E2  00DB               	movwf	??_RTC_Display+2
  3953  05E3  085B               	movf	??_RTC_Display+2,w
  3954  05E4  00F9               	movwf	Write_Digits@valueDigits
  3955  05E5  3002               	movlw	2
  3956  05E6  3181  212F  3185   	fcall	_Write_Digits
  3957  05E9                     l3534:
  3958                           
  3959                           ;main.c: 160:    Write_Digits(3,minute%10);
  3960  05E9  300A               	movlw	10
  3961  05EA  00F0               	movwf	___awmod@divisor
  3962  05EB  3000               	movlw	0
  3963  05EC  00F1               	movwf	___awmod@divisor+1
  3964  05ED  0020               	movlb	0	; select bank0
  3965  05EE  084A               	movf	_minute,w
  3966  05EF  00D9               	movwf	??_RTC_Display
  3967  05F0  01DA               	clrf	??_RTC_Display+1
  3968  05F1  0859               	movf	??_RTC_Display,w
  3969  05F2  00F2               	movwf	___awmod@dividend
  3970  05F3  085A               	movf	??_RTC_Display+1,w
  3971  05F4  00F3               	movwf	___awmod@dividend+1
  3972  05F5  3184  240C  3185   	fcall	___awmod
  3973  05F8  0870               	movf	?___awmod,w
  3974  05F9  0020               	movlb	0	; select bank0
  3975  05FA  00DB               	movwf	??_RTC_Display+2
  3976  05FB  085B               	movf	??_RTC_Display+2,w
  3977  05FC  00F9               	movwf	Write_Digits@valueDigits
  3978  05FD  3003               	movlw	3
  3979  05FE  3181  212F  3185   	fcall	_Write_Digits
  3980  0601                     l788:
  3981  0601  0008               	return
  3982  0602                     __end_of_RTC_Display:
  3983                           
  3984                           	psect	text13
  3985  0F4A                     __ptext13:	
  3986 ;; *************** function _bcd_to_decimal *****************
  3987 ;; Defined at:
  3988 ;;		line 138 in file "main.c"
  3989 ;; Parameters:    Size  Location     Type
  3990 ;;  number          1    wreg     unsigned char 
  3991 ;; Auto vars:     Size  Location     Type
  3992 ;;  number          1    7[COMMON] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      unsigned char 
  3995 ;; Registers used:
  3996 ;;		wreg, status,2, status,0, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4002 ;;      Params:         0       0       0       0       0       0       0       0
  4003 ;;      Locals:         1       0       0       0       0       0       0       0
  4004 ;;      Temps:          3       0       0       0       0       0       0       0
  4005 ;;      Totals:         4       0       0       0       0       0       0       0
  4006 ;;Total ram usage:        4 bytes
  4007 ;; Hardware stack levels used:    1
  4008 ;; Hardware stack levels required when called:    1
  4009 ;; This function calls:
  4010 ;;		___bmul
  4011 ;; This function is called by:
  4012 ;;		_RTC_Display
  4013 ;; This function uses a non-reentrant model
  4014 ;;
  4015                           
  4016                           
  4017                           ;psect for function _bcd_to_decimal
  4018  0F4A                     _bcd_to_decimal:
  4019                           
  4020                           ;incstack = 0
  4021                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  4022                           ;bcd_to_decimal@number stored from wreg
  4023  0F4A  00F7               	movwf	bcd_to_decimal@number
  4024  0F4B                     l3326:
  4025                           
  4026                           ;main.c: 138: uint8_t bcd_to_decimal(uint8_t number);main.c: 139: {;main.c: 140:   retur
      +                          n((number >> 4) * 10 + (number & 0x0F));
  4027  0F4B  300F               	movlw	15
  4028  0F4C  0577               	andwf	bcd_to_decimal@number,w
  4029  0F4D  00F4               	movwf	??_bcd_to_decimal
  4030  0F4E  300A               	movlw	10
  4031  0F4F  00F5               	movwf	??_bcd_to_decimal+1
  4032  0F50  0875               	movf	??_bcd_to_decimal+1,w
  4033  0F51  00F0               	movwf	___bmul@multiplicand
  4034  0F52  0877               	movf	bcd_to_decimal@number,w
  4035  0F53  00F6               	movwf	??_bcd_to_decimal+2
  4036  0F54  3004               	movlw	4
  4037  0F55                     u1545:
  4038  0F55  36F6               	lsrf	??_bcd_to_decimal+2,f
  4039  0F56  0B89               	decfsz	9,f
  4040  0F57  2F55               	goto	u1545
  4041  0F58  0876               	movf	??_bcd_to_decimal+2,w
  4042  0F59  318F  275E  318F   	fcall	___bmul
  4043  0F5C  0774               	addwf	??_bcd_to_decimal,w
  4044  0F5D                     l782:
  4045  0F5D  0008               	return
  4046  0F5E                     __end_of_bcd_to_decimal:
  4047                           
  4048                           	psect	text14
  4049  0F5E                     __ptext14:	
  4050 ;; *************** function ___bmul *****************
  4051 ;; Defined at:
  4052 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\Umul8.c"
  4053 ;; Parameters:    Size  Location     Type
  4054 ;;  multiplier      1    wreg     unsigned char 
  4055 ;;  multiplicand    1    0[COMMON] unsigned char 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  multiplier      1    3[COMMON] unsigned char 
  4058 ;;  product         1    2[COMMON] unsigned char 
  4059 ;; Return value:  Size  Location     Type
  4060 ;;                  1    wreg      unsigned char 
  4061 ;; Registers used:
  4062 ;;		wreg, status,2, status,0
  4063 ;; Tracked objects:
  4064 ;;		On entry : 0/0
  4065 ;;		On exit  : 0/0
  4066 ;;		Unchanged: 0/0
  4067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4068 ;;      Params:         1       0       0       0       0       0       0       0
  4069 ;;      Locals:         2       0       0       0       0       0       0       0
  4070 ;;      Temps:          1       0       0       0       0       0       0       0
  4071 ;;      Totals:         4       0       0       0       0       0       0       0
  4072 ;;Total ram usage:        4 bytes
  4073 ;; Hardware stack levels used:    1
  4074 ;; This function calls:
  4075 ;;		Nothing
  4076 ;; This function is called by:
  4077 ;;		_bcd_to_decimal
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           
  4082                           ;psect for function ___bmul
  4083  0F5E                     ___bmul:
  4084                           
  4085                           ;incstack = 0
  4086                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4087                           ;___bmul@multiplier stored from wreg
  4088  0F5E  00F3               	movwf	___bmul@multiplier
  4089  0F5F                     l3262:
  4090  0F5F  01F2               	clrf	___bmul@product
  4091  0F60                     l3264:
  4092  0F60  1C73               	btfss	___bmul@multiplier,0
  4093  0F61  2F63               	goto	u1481
  4094  0F62  2F64               	goto	u1480
  4095  0F63                     u1481:
  4096  0F63  2F68               	goto	l3268
  4097  0F64                     u1480:
  4098  0F64                     l3266:
  4099  0F64  0870               	movf	___bmul@multiplicand,w
  4100  0F65  00F1               	movwf	??___bmul
  4101  0F66  0871               	movf	??___bmul,w
  4102  0F67  07F2               	addwf	___bmul@product,f
  4103  0F68                     l3268:
  4104  0F68  1003               	clrc
  4105  0F69  0DF0               	rlf	___bmul@multiplicand,f
  4106  0F6A                     l3270:
  4107  0F6A  1003               	clrc
  4108  0F6B  0CF3               	rrf	___bmul@multiplier,f
  4109  0F6C  0873               	movf	___bmul@multiplier,w
  4110  0F6D  1D03               	btfss	3,2
  4111  0F6E  2F70               	goto	u1491
  4112  0F6F  2F71               	goto	u1490
  4113  0F70                     u1491:
  4114  0F70  2F60               	goto	l3264
  4115  0F71                     u1490:
  4116  0F71                     l3272:
  4117  0F71  0872               	movf	___bmul@product,w
  4118  0F72                     l986:
  4119  0F72  0008               	return
  4120  0F73                     __end_of___bmul:
  4121                           
  4122                           	psect	text15
  4123  040C                     __ptext15:	
  4124 ;; *************** function ___awmod *****************
  4125 ;; Defined at:
  4126 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awmod.c"
  4127 ;; Parameters:    Size  Location     Type
  4128 ;;  divisor         2    0[COMMON] int 
  4129 ;;  dividend        2    2[COMMON] int 
  4130 ;; Auto vars:     Size  Location     Type
  4131 ;;  sign            1    6[COMMON] unsigned char 
  4132 ;;  counter         1    5[COMMON] unsigned char 
  4133 ;; Return value:  Size  Location     Type
  4134 ;;                  2    0[COMMON] int 
  4135 ;; Registers used:
  4136 ;;		wreg, status,2, status,0
  4137 ;; Tracked objects:
  4138 ;;		On entry : 0/0
  4139 ;;		On exit  : 0/0
  4140 ;;		Unchanged: 0/0
  4141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4142 ;;      Params:         4       0       0       0       0       0       0       0
  4143 ;;      Locals:         2       0       0       0       0       0       0       0
  4144 ;;      Temps:          1       0       0       0       0       0       0       0
  4145 ;;      Totals:         7       0       0       0       0       0       0       0
  4146 ;;Total ram usage:        7 bytes
  4147 ;; Hardware stack levels used:    1
  4148 ;; This function calls:
  4149 ;;		Nothing
  4150 ;; This function is called by:
  4151 ;;		_decimal_to_bcd
  4152 ;;		_RTC_Display
  4153 ;;		_edit
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function ___awmod
  4159  040C                     ___awmod:
  4160  040C                     l3422:	
  4161                           ;incstack = 0
  4162                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4163                           
  4164  040C  01F6               	clrf	___awmod@sign
  4165  040D                     l3424:
  4166  040D  1FF3               	btfss	___awmod@dividend+1,7
  4167  040E  2C10               	goto	u1741
  4168  040F  2C11               	goto	u1740
  4169  0410                     u1741:
  4170  0410  2C18               	goto	l3430
  4171  0411                     u1740:
  4172  0411                     l3426:
  4173  0411  09F2               	comf	___awmod@dividend,f
  4174  0412  09F3               	comf	___awmod@dividend+1,f
  4175  0413  0AF2               	incf	___awmod@dividend,f
  4176  0414  1903               	skipnz
  4177  0415  0AF3               	incf	___awmod@dividend+1,f
  4178  0416                     l3428:
  4179  0416  01F6               	clrf	___awmod@sign
  4180  0417  0AF6               	incf	___awmod@sign,f
  4181  0418                     l3430:
  4182  0418  1FF1               	btfss	___awmod@divisor+1,7
  4183  0419  2C1B               	goto	u1751
  4184  041A  2C1C               	goto	u1750
  4185  041B                     u1751:
  4186  041B  2C21               	goto	l3434
  4187  041C                     u1750:
  4188  041C                     l3432:
  4189  041C  09F0               	comf	___awmod@divisor,f
  4190  041D  09F1               	comf	___awmod@divisor+1,f
  4191  041E  0AF0               	incf	___awmod@divisor,f
  4192  041F  1903               	skipnz
  4193  0420  0AF1               	incf	___awmod@divisor+1,f
  4194  0421                     l3434:
  4195  0421  0870               	movf	___awmod@divisor,w
  4196  0422  0471               	iorwf	___awmod@divisor+1,w
  4197  0423  1903               	btfsc	3,2
  4198  0424  2C26               	goto	u1761
  4199  0425  2C27               	goto	u1760
  4200  0426                     u1761:
  4201  0426  2C50               	goto	l3452
  4202  0427                     u1760:
  4203  0427                     l3436:
  4204  0427  01F5               	clrf	___awmod@counter
  4205  0428  0AF5               	incf	___awmod@counter,f
  4206  0429  2C33               	goto	l3442
  4207  042A                     l3438:
  4208  042A  3001               	movlw	1
  4209  042B                     u1775:
  4210  042B  35F0               	lslf	___awmod@divisor,f
  4211  042C  0DF1               	rlf	___awmod@divisor+1,f
  4212  042D  0B89               	decfsz	9,f
  4213  042E  2C2B               	goto	u1775
  4214  042F                     l3440:
  4215  042F  3001               	movlw	1
  4216  0430  00F4               	movwf	??___awmod
  4217  0431  0874               	movf	??___awmod,w
  4218  0432  07F5               	addwf	___awmod@counter,f
  4219  0433                     l3442:
  4220  0433  1FF1               	btfss	___awmod@divisor+1,7
  4221  0434  2C36               	goto	u1781
  4222  0435  2C37               	goto	u1780
  4223  0436                     u1781:
  4224  0436  2C2A               	goto	l3438
  4225  0437                     u1780:
  4226  0437                     l3444:
  4227  0437  0871               	movf	___awmod@divisor+1,w
  4228  0438  0273               	subwf	___awmod@dividend+1,w
  4229  0439  1D03               	skipz
  4230  043A  2C3D               	goto	u1795
  4231  043B  0870               	movf	___awmod@divisor,w
  4232  043C  0272               	subwf	___awmod@dividend,w
  4233  043D                     u1795:
  4234  043D  1C03               	skipc
  4235  043E  2C40               	goto	u1791
  4236  043F  2C41               	goto	u1790
  4237  0440                     u1791:
  4238  0440  2C45               	goto	l3448
  4239  0441                     u1790:
  4240  0441                     l3446:
  4241  0441  0870               	movf	___awmod@divisor,w
  4242  0442  02F2               	subwf	___awmod@dividend,f
  4243  0443  0871               	movf	___awmod@divisor+1,w
  4244  0444  3BF3               	subwfb	___awmod@dividend+1,f
  4245  0445                     l3448:
  4246  0445  3001               	movlw	1
  4247  0446                     u1805:
  4248  0446  36F1               	lsrf	___awmod@divisor+1,f
  4249  0447  0CF0               	rrf	___awmod@divisor,f
  4250  0448  0B89               	decfsz	9,f
  4251  0449  2C46               	goto	u1805
  4252  044A                     l3450:
  4253  044A  3001               	movlw	1
  4254  044B  02F5               	subwf	___awmod@counter,f
  4255  044C  1D03               	btfss	3,2
  4256  044D  2C4F               	goto	u1811
  4257  044E  2C50               	goto	u1810
  4258  044F                     u1811:
  4259  044F  2C37               	goto	l3444
  4260  0450                     u1810:
  4261  0450                     l3452:
  4262  0450  0876               	movf	___awmod@sign,w
  4263  0451  1903               	btfsc	3,2
  4264  0452  2C54               	goto	u1821
  4265  0453  2C55               	goto	u1820
  4266  0454                     u1821:
  4267  0454  2C5A               	goto	l3456
  4268  0455                     u1820:
  4269  0455                     l3454:
  4270  0455  09F2               	comf	___awmod@dividend,f
  4271  0456  09F3               	comf	___awmod@dividend+1,f
  4272  0457  0AF2               	incf	___awmod@dividend,f
  4273  0458  1903               	skipnz
  4274  0459  0AF3               	incf	___awmod@dividend+1,f
  4275  045A                     l3456:
  4276  045A  0873               	movf	___awmod@dividend+1,w
  4277  045B  00F1               	movwf	?___awmod+1
  4278  045C  0872               	movf	___awmod@dividend,w
  4279  045D  00F0               	movwf	?___awmod
  4280  045E                     l1126:
  4281  045E  0008               	return
  4282  045F                     __end_of___awmod:
  4283                           
  4284                           	psect	text16
  4285  0512                     __ptext16:	
  4286 ;; *************** function ___awdiv *****************
  4287 ;; Defined at:
  4288 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\awdiv.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  divisor         2    0[COMMON] int 
  4291 ;;  dividend        2    2[COMMON] int 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  quotient        2    7[COMMON] int 
  4294 ;;  sign            1    6[COMMON] unsigned char 
  4295 ;;  counter         1    5[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  2    0[COMMON] int 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4305 ;;      Params:         4       0       0       0       0       0       0       0
  4306 ;;      Locals:         4       0       0       0       0       0       0       0
  4307 ;;      Temps:          1       0       0       0       0       0       0       0
  4308 ;;      Totals:         9       0       0       0       0       0       0       0
  4309 ;;Total ram usage:        9 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_decimal_to_bcd
  4315 ;;		_RTC_Display
  4316 ;;		_edit
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           
  4321                           ;psect for function ___awdiv
  4322  0512                     ___awdiv:
  4323  0512                     l3378:	
  4324                           ;incstack = 0
  4325                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4326                           
  4327  0512  01F6               	clrf	___awdiv@sign
  4328  0513                     l3380:
  4329  0513  1FF1               	btfss	___awdiv@divisor+1,7
  4330  0514  2D16               	goto	u1641
  4331  0515  2D17               	goto	u1640
  4332  0516                     u1641:
  4333  0516  2D1E               	goto	l3386
  4334  0517                     u1640:
  4335  0517                     l3382:
  4336  0517  09F0               	comf	___awdiv@divisor,f
  4337  0518  09F1               	comf	___awdiv@divisor+1,f
  4338  0519  0AF0               	incf	___awdiv@divisor,f
  4339  051A  1903               	skipnz
  4340  051B  0AF1               	incf	___awdiv@divisor+1,f
  4341  051C                     l3384:
  4342  051C  01F6               	clrf	___awdiv@sign
  4343  051D  0AF6               	incf	___awdiv@sign,f
  4344  051E                     l3386:
  4345  051E  1FF3               	btfss	___awdiv@dividend+1,7
  4346  051F  2D21               	goto	u1651
  4347  0520  2D22               	goto	u1650
  4348  0521                     u1651:
  4349  0521  2D2B               	goto	l3392
  4350  0522                     u1650:
  4351  0522                     l3388:
  4352  0522  09F2               	comf	___awdiv@dividend,f
  4353  0523  09F3               	comf	___awdiv@dividend+1,f
  4354  0524  0AF2               	incf	___awdiv@dividend,f
  4355  0525  1903               	skipnz
  4356  0526  0AF3               	incf	___awdiv@dividend+1,f
  4357  0527                     l3390:
  4358  0527  3001               	movlw	1
  4359  0528  00F4               	movwf	??___awdiv
  4360  0529  0874               	movf	??___awdiv,w
  4361  052A  06F6               	xorwf	___awdiv@sign,f
  4362  052B                     l3392:
  4363  052B  01F7               	clrf	___awdiv@quotient
  4364  052C  01F8               	clrf	___awdiv@quotient+1
  4365  052D                     l3394:
  4366  052D  0870               	movf	___awdiv@divisor,w
  4367  052E  0471               	iorwf	___awdiv@divisor+1,w
  4368  052F  1903               	btfsc	3,2
  4369  0530  2D32               	goto	u1661
  4370  0531  2D33               	goto	u1660
  4371  0532                     u1661:
  4372  0532  2D62               	goto	l3414
  4373  0533                     u1660:
  4374  0533                     l3396:
  4375  0533  01F5               	clrf	___awdiv@counter
  4376  0534  0AF5               	incf	___awdiv@counter,f
  4377  0535  2D3F               	goto	l3402
  4378  0536                     l3398:
  4379  0536  3001               	movlw	1
  4380  0537                     u1675:
  4381  0537  35F0               	lslf	___awdiv@divisor,f
  4382  0538  0DF1               	rlf	___awdiv@divisor+1,f
  4383  0539  0B89               	decfsz	9,f
  4384  053A  2D37               	goto	u1675
  4385  053B                     l3400:
  4386  053B  3001               	movlw	1
  4387  053C  00F4               	movwf	??___awdiv
  4388  053D  0874               	movf	??___awdiv,w
  4389  053E  07F5               	addwf	___awdiv@counter,f
  4390  053F                     l3402:
  4391  053F  1FF1               	btfss	___awdiv@divisor+1,7
  4392  0540  2D42               	goto	u1681
  4393  0541  2D43               	goto	u1680
  4394  0542                     u1681:
  4395  0542  2D36               	goto	l3398
  4396  0543                     u1680:
  4397  0543                     l3404:
  4398  0543  3001               	movlw	1
  4399  0544                     u1695:
  4400  0544  35F7               	lslf	___awdiv@quotient,f
  4401  0545  0DF8               	rlf	___awdiv@quotient+1,f
  4402  0546  0B89               	decfsz	9,f
  4403  0547  2D44               	goto	u1695
  4404  0548  0871               	movf	___awdiv@divisor+1,w
  4405  0549  0273               	subwf	___awdiv@dividend+1,w
  4406  054A  1D03               	skipz
  4407  054B  2D4E               	goto	u1705
  4408  054C  0870               	movf	___awdiv@divisor,w
  4409  054D  0272               	subwf	___awdiv@dividend,w
  4410  054E                     u1705:
  4411  054E  1C03               	skipc
  4412  054F  2D51               	goto	u1701
  4413  0550  2D52               	goto	u1700
  4414  0551                     u1701:
  4415  0551  2D57               	goto	l3410
  4416  0552                     u1700:
  4417  0552                     l3406:
  4418  0552  0870               	movf	___awdiv@divisor,w
  4419  0553  02F2               	subwf	___awdiv@dividend,f
  4420  0554  0871               	movf	___awdiv@divisor+1,w
  4421  0555  3BF3               	subwfb	___awdiv@dividend+1,f
  4422  0556                     l3408:
  4423  0556  1477               	bsf	___awdiv@quotient,0
  4424  0557                     l3410:
  4425  0557  3001               	movlw	1
  4426  0558                     u1715:
  4427  0558  36F1               	lsrf	___awdiv@divisor+1,f
  4428  0559  0CF0               	rrf	___awdiv@divisor,f
  4429  055A  0B89               	decfsz	9,f
  4430  055B  2D58               	goto	u1715
  4431  055C                     l3412:
  4432  055C  3001               	movlw	1
  4433  055D  02F5               	subwf	___awdiv@counter,f
  4434  055E  1D03               	btfss	3,2
  4435  055F  2D61               	goto	u1721
  4436  0560  2D62               	goto	u1720
  4437  0561                     u1721:
  4438  0561  2D43               	goto	l3404
  4439  0562                     u1720:
  4440  0562                     l3414:
  4441  0562  0876               	movf	___awdiv@sign,w
  4442  0563  1903               	btfsc	3,2
  4443  0564  2D66               	goto	u1731
  4444  0565  2D67               	goto	u1730
  4445  0566                     u1731:
  4446  0566  2D6C               	goto	l3418
  4447  0567                     u1730:
  4448  0567                     l3416:
  4449  0567  09F7               	comf	___awdiv@quotient,f
  4450  0568  09F8               	comf	___awdiv@quotient+1,f
  4451  0569  0AF7               	incf	___awdiv@quotient,f
  4452  056A  1903               	skipnz
  4453  056B  0AF8               	incf	___awdiv@quotient+1,f
  4454  056C                     l3418:
  4455  056C  0878               	movf	___awdiv@quotient+1,w
  4456  056D  00F1               	movwf	?___awdiv+1
  4457  056E  0877               	movf	___awdiv@quotient,w
  4458  056F  00F0               	movwf	?___awdiv
  4459  0570                     l1113:
  4460  0570  0008               	return
  4461  0571                     __end_of___awdiv:
  4462                           
  4463                           	psect	text17
  4464  0263                     __ptext17:	
  4465 ;; *************** function _I2C_Write1ByteRegister *****************
  4466 ;; Defined at:
  4467 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
  4468 ;; Parameters:    Size  Location     Type
  4469 ;;  address         1    wreg     unsigned char 
  4470 ;;  reg             1    5[BANK0 ] unsigned char 
  4471 ;;  data            1    6[BANK0 ] unsigned char 
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;  address         1    8[BANK0 ] unsigned char 
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4483 ;;      Params:         0       2       0       0       0       0       0       0
  4484 ;;      Locals:         0       1       0       0       0       0       0       0
  4485 ;;      Temps:          0       1       0       0       0       0       0       0
  4486 ;;      Totals:         0       4       0       0       0       0       0       0
  4487 ;;Total ram usage:        4 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    8
  4490 ;; This function calls:
  4491 ;;		_I2C_Close
  4492 ;;		_I2C_MasterWrite
  4493 ;;		_I2C_Open
  4494 ;;		_I2C_SetAddressNackCallback
  4495 ;;		_I2C_SetBuffer
  4496 ;;		_I2C_SetDataCompleteCallback
  4497 ;; This function is called by:
  4498 ;;		_RTC_Display
  4499 ;;		_display_digitalCLK
  4500 ;;		_NAP_TGIAN_HIEM_TAI
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           
  4505                           ;psect for function _I2C_Write1ByteRegister
  4506  0263                     _I2C_Write1ByteRegister:
  4507                           
  4508                           ;incstack = 0
  4509                           ; Regs used in _I2C_Write1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4510                           ;I2C_Write1ByteRegister@address stored from wreg
  4511  0263  0020               	movlb	0	; select bank0
  4512  0264  00D8               	movwf	I2C_Write1ByteRegister@address
  4513  0265                     l3294:
  4514  0265                     l3296:	
  4515                           ;mcc_generated_files/examples/i2c_master_example.c: 91: void I2C_Write1ByteRegister(i2c_
      +                          address_t address, uint8_t reg, uint8_t data);mcc_generated_files/examples/i2c_master_ex
      +                          ample.c: 92: {;mcc_generated_files/examples/i2c_master_example.c: 93:     while(!I2C_Ope
      +                          n(address));
  4516                           
  4517  0265  0020               	movlb	0	; select bank0
  4518  0266  0858               	movf	I2C_Write1ByteRegister@address,w
  4519  0267  3183  2300  3182   	fcall	_I2C_Open
  4520  026A  3A00               	xorlw	0
  4521  026B  1903               	skipnz
  4522  026C  2A6E               	goto	u1521
  4523  026D  2A6F               	goto	u1520
  4524  026E                     u1521:
  4525  026E  2A65               	goto	l3296
  4526  026F                     u1520:
  4527  026F                     l3298:
  4528                           
  4529                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
  4530  026F  3005               	movlw	low _wr1RegCompleteHandler@i2c_master_example$F160
  4531  0270  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4532  0271  3000               	movlw	high _wr1RegCompleteHandler@i2c_master_example$F160
  4533  0272  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4534  0273  3056               	movlw	(low (I2C_Write1ByteRegister@data| 0))& (0+255)
  4535  0274  0020               	movlb	0	; select bank0
  4536  0275  00D7               	movwf	??_I2C_Write1ByteRegister
  4537  0276  0857               	movf	??_I2C_Write1ByteRegister,w
  4538  0277  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  4539  0278  318E  266A  3182   	fcall	_I2C_SetDataCompleteCallback
  4540  027B                     l3300:
  4541                           
  4542                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
  4543  027B  3001               	movlw	1
  4544  027C  00F0               	movwf	I2C_SetBuffer@bufferSize
  4545  027D  3000               	movlw	0
  4546  027E  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4547  027F  3055               	movlw	(low (I2C_Write1ByteRegister@reg| 0))& (0+255)
  4548  0280  318E  26AF  3182   	fcall	_I2C_SetBuffer
  4549  0283                     l3302:
  4550                           
  4551                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  4552  0283  3000               	movlw	0
  4553  0284  00F5               	movwf	I2C_SetAddressNackCallback@cb
  4554  0285  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  4555  0286  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  4556  0287  318E  2684  3182   	fcall	_I2C_SetAddressNackCallback
  4557  028A                     l3304:
  4558                           
  4559                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
  4560  028A  318E  2607  3182   	fcall	_I2C_MasterWrite
  4561  028D                     l3306:	
  4562                           ;mcc_generated_files/examples/i2c_master_example.c: 98:     while(I2C_BUSY == I2C_Close(
      +                          ));
  4563                           
  4564  028D  3180  2064  3182   	fcall	_I2C_Close
  4565  0290  3A01               	xorlw	1
  4566  0291  1903               	skipnz
  4567  0292  2A94               	goto	u1531
  4568  0293  2A95               	goto	u1530
  4569  0294                     u1531:
  4570  0294  2A8D               	goto	l3306
  4571  0295                     u1530:
  4572  0295                     l146:
  4573  0295  0008               	return
  4574  0296                     __end_of_I2C_Write1ByteRegister:
  4575                           
  4576                           	psect	text18
  4577  02CA                     __ptext18:	
  4578 ;; *************** function _I2C_Read1ByteRegister *****************
  4579 ;; Defined at:
  4580 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
  4581 ;; Parameters:    Size  Location     Type
  4582 ;;  address         1    wreg     unsigned char 
  4583 ;;  reg             1    5[BANK0 ] unsigned char 
  4584 ;; Auto vars:     Size  Location     Type
  4585 ;;  address         1    7[BANK0 ] unsigned char 
  4586 ;;  returnValue     1    8[BANK0 ] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;                  1    wreg      unsigned char 
  4589 ;; Registers used:
  4590 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 0/0
  4593 ;;		On exit  : 0/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4596 ;;      Params:         0       1       0       0       0       0       0       0
  4597 ;;      Locals:         0       2       0       0       0       0       0       0
  4598 ;;      Temps:          0       1       0       0       0       0       0       0
  4599 ;;      Totals:         0       4       0       0       0       0       0       0
  4600 ;;Total ram usage:        4 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    8
  4603 ;; This function calls:
  4604 ;;		_I2C_Close
  4605 ;;		_I2C_MasterWrite
  4606 ;;		_I2C_Open
  4607 ;;		_I2C_SetAddressNackCallback
  4608 ;;		_I2C_SetBuffer
  4609 ;;		_I2C_SetDataCompleteCallback
  4610 ;; This function is called by:
  4611 ;;		_RTC_Display
  4612 ;; This function uses a non-reentrant model
  4613 ;;
  4614                           
  4615                           
  4616                           ;psect for function _I2C_Read1ByteRegister
  4617  02CA                     _I2C_Read1ByteRegister:
  4618                           
  4619                           ;incstack = 0
  4620                           ; Regs used in _I2C_Read1ByteRegister: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4621                           ;I2C_Read1ByteRegister@address stored from wreg
  4622  02CA  0020               	movlb	0	; select bank0
  4623  02CB  00D7               	movwf	I2C_Read1ByteRegister@address
  4624  02CC                     l3276:
  4625                           
  4626                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
  4627  02CC  01D8               	clrf	I2C_Read1ByteRegister@returnValue
  4628  02CD                     l3278:	
  4629                           ;mcc_generated_files/examples/i2c_master_example.c: 67:     while(!I2C_Open(address));
  4630                           
  4631  02CD  0020               	movlb	0	; select bank0
  4632  02CE  0857               	movf	I2C_Read1ByteRegister@address,w
  4633  02CF  3183  2300  3182   	fcall	_I2C_Open
  4634  02D2  3A00               	xorlw	0
  4635  02D3  1903               	skipnz
  4636  02D4  2AD6               	goto	u1501
  4637  02D5  2AD7               	goto	u1500
  4638  02D6                     u1501:
  4639  02D6  2ACD               	goto	l3278
  4640  02D7                     u1500:
  4641  02D7                     l3280:
  4642                           
  4643                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
  4644  02D7  3014               	movlw	low _rd1RegCompleteHandler@i2c_master_example$F143
  4645  02D8  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  4646  02D9  300F               	movlw	high _rd1RegCompleteHandler@i2c_master_example$F143
  4647  02DA  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  4648  02DB  3058               	movlw	(low (I2C_Read1ByteRegister@returnValue| 0))& (0+255)
  4649  02DC  0020               	movlb	0	; select bank0
  4650  02DD  00D6               	movwf	??_I2C_Read1ByteRegister
  4651  02DE  0856               	movf	??_I2C_Read1ByteRegister,w
  4652  02DF  00F7               	movwf	I2C_SetDataCompleteCallback@ptr
  4653  02E0  318E  266A  3182   	fcall	_I2C_SetDataCompleteCallback
  4654  02E3                     l3282:
  4655                           
  4656                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
  4657  02E3  3001               	movlw	1
  4658  02E4  00F0               	movwf	I2C_SetBuffer@bufferSize
  4659  02E5  3000               	movlw	0
  4660  02E6  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  4661  02E7  3055               	movlw	(low (I2C_Read1ByteRegister@reg| 0))& (0+255)
  4662  02E8  318E  26AF  3182   	fcall	_I2C_SetBuffer
  4663  02EB                     l3284:
  4664                           
  4665                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
  4666  02EB  3000               	movlw	0
  4667  02EC  00F5               	movwf	I2C_SetAddressNackCallback@cb
  4668  02ED  00F6               	movwf	I2C_SetAddressNackCallback@cb+1
  4669  02EE  01F7               	clrf	I2C_SetAddressNackCallback@ptr
  4670  02EF  318E  2684  3182   	fcall	_I2C_SetAddressNackCallback
  4671  02F2                     l3286:
  4672                           
  4673                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
  4674  02F2  318E  2607  3182   	fcall	_I2C_MasterWrite
  4675  02F5                     l3288:	
  4676                           ;mcc_generated_files/examples/i2c_master_example.c: 72:     while(I2C_BUSY == I2C_Close(
      +                          ));
  4677                           
  4678  02F5  3180  2064  3182   	fcall	_I2C_Close
  4679  02F8  3A01               	xorlw	1
  4680  02F9  1903               	skipnz
  4681  02FA  2AFC               	goto	u1511
  4682  02FB  2AFD               	goto	u1510
  4683  02FC                     u1511:
  4684  02FC  2AF5               	goto	l3288
  4685  02FD                     u1510:
  4686  02FD                     l3290:
  4687                           
  4688                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
  4689  02FD  0020               	movlb	0	; select bank0
  4690  02FE  0858               	movf	I2C_Read1ByteRegister@returnValue,w
  4691  02FF                     l128:
  4692  02FF  0008               	return
  4693  0300                     __end_of_I2C_Read1ByteRegister:
  4694                           
  4695                           	psect	text19
  4696  0E84                     __ptext19:	
  4697 ;; *************** function _I2C_SetAddressNackCallback *****************
  4698 ;; Defined at:
  4699 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  4700 ;; Parameters:    Size  Location     Type
  4701 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  4702 ;;		 -> Absolute function(1), 
  4703 ;;  ptr             1    7[COMMON] PTR void 
  4704 ;;		 -> NULL(0), 
  4705 ;; Auto vars:     Size  Location     Type
  4706 ;;		None
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4716 ;;      Params:         3       0       0       0       0       0       0       0
  4717 ;;      Locals:         0       0       0       0       0       0       0       0
  4718 ;;      Temps:          1       0       0       0       0       0       0       0
  4719 ;;      Totals:         4       0       0       0       0       0       0       0
  4720 ;;Total ram usage:        4 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    1
  4723 ;; This function calls:
  4724 ;;		_I2C_SetCallback
  4725 ;; This function is called by:
  4726 ;;		_I2C_Read1ByteRegister
  4727 ;;		_I2C_Write1ByteRegister
  4728 ;;		_i2c_write1ByteRegister
  4729 ;;		_i2c_writeNBytes
  4730 ;;		_i2c_read1ByteRegister
  4731 ;;		_i2c_read2ByteRegister
  4732 ;;		_i2c_write2ByteRegister
  4733 ;;		_i2c_readDataBlock
  4734 ;;		_I2C_Read2ByteRegister
  4735 ;;		_I2C_Write2ByteRegister
  4736 ;;		_I2C_WriteNBytes
  4737 ;;		_I2C_ReadDataBlock
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           
  4742                           ;psect for function _I2C_SetAddressNackCallback
  4743  0E84                     _I2C_SetAddressNackCallback:
  4744  0E84                     l3228:	
  4745                           ;incstack = 0
  4746                           ; Regs used in _I2C_SetAddressNackCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4747                           
  4748                           
  4749                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  4750  0E84  0876               	movf	I2C_SetAddressNackCallback@cb+1,w
  4751  0E85  00F1               	movwf	I2C_SetCallback@cb+1
  4752  0E86  0875               	movf	I2C_SetAddressNackCallback@cb,w
  4753  0E87  00F0               	movwf	I2C_SetCallback@cb
  4754  0E88  0877               	movf	I2C_SetAddressNackCallback@ptr,w
  4755  0E89  00F8               	movwf	??_I2C_SetAddressNackCallback
  4756  0E8A  0878               	movf	??_I2C_SetAddressNackCallback,w
  4757  0E8B  00F2               	movwf	I2C_SetCallback@ptr
  4758  0E8C  3002               	movlw	2
  4759  0E8D  3181  2109  318E   	fcall	_I2C_SetCallback
  4760  0E90                     l397:
  4761  0E90  0008               	return
  4762  0E91                     __end_of_I2C_SetAddressNackCallback:
  4763                           
  4764                           	psect	text20
  4765  0300                     __ptext20:	
  4766 ;; *************** function _I2C_Open *****************
  4767 ;; Defined at:
  4768 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  4769 ;; Parameters:    Size  Location     Type
  4770 ;;  address         1    wreg     unsigned char 
  4771 ;; Auto vars:     Size  Location     Type
  4772 ;;  address         1    1[COMMON] unsigned char 
  4773 ;;  returnValue     1    2[COMMON] enum E355
  4774 ;; Return value:  Size  Location     Type
  4775 ;;                  1    wreg      enum E355
  4776 ;; Registers used:
  4777 ;;		wreg, status,2, status,0, pclath, cstack
  4778 ;; Tracked objects:
  4779 ;;		On entry : 0/0
  4780 ;;		On exit  : 0/0
  4781 ;;		Unchanged: 0/0
  4782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4783 ;;      Params:         0       0       0       0       0       0       0       0
  4784 ;;      Locals:         2       0       0       0       0       0       0       0
  4785 ;;      Temps:          1       0       0       0       0       0       0       0
  4786 ;;      Totals:         3       0       0       0       0       0       0       0
  4787 ;;Total ram usage:        3 bytes
  4788 ;; Hardware stack levels used:    1
  4789 ;; Hardware stack levels required when called:    1
  4790 ;; This function calls:
  4791 ;;		_I2C_MasterClearIrq
  4792 ;;		_I2C_MasterOpen
  4793 ;; This function is called by:
  4794 ;;		_I2C_Read1ByteRegister
  4795 ;;		_I2C_Write1ByteRegister
  4796 ;;		_i2c_write1ByteRegister
  4797 ;;		_i2c_writeNBytes
  4798 ;;		_i2c_read1ByteRegister
  4799 ;;		_i2c_read2ByteRegister
  4800 ;;		_i2c_write2ByteRegister
  4801 ;;		_i2c_readDataBlock
  4802 ;;		_i2c_readNBytes
  4803 ;;		_I2C_Read2ByteRegister
  4804 ;;		_I2C_Write2ByteRegister
  4805 ;;		_I2C_WriteNBytes
  4806 ;;		_I2C_ReadNBytes
  4807 ;;		_I2C_ReadDataBlock
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           
  4812                           ;psect for function _I2C_Open
  4813  0300                     _I2C_Open:
  4814                           
  4815                           ;incstack = 0
  4816                           ; Regs used in _I2C_Open: [wreg+status,2+status,0+pclath+cstack]
  4817                           ;I2C_Open@address stored from wreg
  4818  0300  00F1               	movwf	I2C_Open@address
  4819  0301                     l3196:
  4820                           
  4821                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  4822  0301  01F2               	clrf	I2C_Open@returnValue
  4823  0302  0AF2               	incf	I2C_Open@returnValue,f
  4824                           
  4825                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  4826  0303  0020               	movlb	0	; select bank0
  4827  0304  193C               	btfsc	_I2C_Status+28,2
  4828  0305  2B07               	goto	u1441
  4829  0306  2B08               	goto	u1440
  4830  0307                     u1441:
  4831  0307  2B38               	goto	l364
  4832  0308                     u1440:
  4833  0308                     l3198:
  4834                           
  4835                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  4836  0308  0871               	movf	I2C_Open@address,w
  4837  0309  00F0               	movwf	??_I2C_Open
  4838  030A  0870               	movf	??_I2C_Open,w
  4839  030B  00B6               	movwf	_I2C_Status+22
  4840  030C                     l3200:
  4841                           
  4842                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  4843  030C  10BC               	bcf	_I2C_Status+28,1
  4844  030D                     l3202:
  4845                           
  4846                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  4847  030D  153C               	bsf	_I2C_Status+28,2
  4848  030E                     l3204:
  4849                           
  4850                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  4851  030E  103C               	bcf	_I2C_Status+28,0
  4852                           
  4853                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  4854  030F  300E               	movlw	14
  4855  0310  00F0               	movwf	??_I2C_Open
  4856  0311  0870               	movf	??_I2C_Open,w
  4857  0312  00BA               	movwf	_I2C_Status+26
  4858                           
  4859                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  4860  0313  30F4               	movlw	244
  4861  0314  00B4               	movwf	_I2C_Status+20
  4862  0315  3001               	movlw	1
  4863  0316  00B5               	movwf	_I2C_Status+21
  4864  0317                     l3206:
  4865                           
  4866                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  4867  0317  15BC               	bsf	_I2C_Status+28,3
  4868                           
  4869                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  4870  0318  30AA               	movlw	low _I2C_CallbackReturnStop
  4871  0319  00A0               	movwf	_I2C_Status
  4872  031A  300D               	movlw	high _I2C_CallbackReturnStop
  4873  031B  00A1               	movwf	_I2C_Status+1
  4874  031C                     l3208:
  4875                           
  4876                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  4877  031C  01AC               	clrf	low ((_I2C_Status| 0+12))
  4878  031D                     l3210:
  4879                           
  4880                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  4881  031D  30AA               	movlw	low _I2C_CallbackReturnStop
  4882  031E  00A2               	movwf	low ((_I2C_Status| 0+2))
  4883  031F  300D               	movlw	high _I2C_CallbackReturnStop
  4884  0320  00A3               	movwf	(low ((_I2C_Status| 0+2))+1)
  4885                           
  4886                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  4887  0321  01AD               	clrf	low ((_I2C_Status| 0+13))
  4888  0322                     l3212:
  4889                           
  4890                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  4891  0322  30AA               	movlw	low _I2C_CallbackReturnStop
  4892  0323  00A4               	movwf	low ((_I2C_Status| 0+4))
  4893  0324  300D               	movlw	high _I2C_CallbackReturnStop
  4894  0325  00A5               	movwf	(low ((_I2C_Status| 0+4))+1)
  4895  0326                     l3214:
  4896                           
  4897                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  4898  0326  01AE               	clrf	low ((_I2C_Status| 0+14))
  4899                           
  4900                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  4901  0327  30AA               	movlw	low _I2C_CallbackReturnStop
  4902  0328  00A6               	movwf	low ((_I2C_Status| 0+6))
  4903  0329  300D               	movlw	high _I2C_CallbackReturnStop
  4904  032A  00A7               	movwf	(low ((_I2C_Status| 0+6))+1)
  4905  032B                     l3216:
  4906                           
  4907                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  4908  032B  01AF               	clrf	low ((_I2C_Status| 0+15))
  4909  032C                     l3218:
  4910                           
  4911                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  4912  032C  30AC               	movlw	low _I2C_CallbackReturnReset
  4913  032D  00A8               	movwf	low ((_I2C_Status| 0+8))
  4914  032E  300D               	movlw	high _I2C_CallbackReturnReset
  4915  032F  00A9               	movwf	(low ((_I2C_Status| 0+8))+1)
  4916                           
  4917                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  4918  0330  01B0               	clrf	low ((_I2C_Status| 0+16))
  4919  0331                     l3220:
  4920                           
  4921                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  4922  0331  318D  25AE  3183   	fcall	_I2C_MasterClearIrq
  4923  0334                     l3222:
  4924                           
  4925                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  4926  0334  318E  2691  3183   	fcall	_I2C_MasterOpen
  4927  0337                     l3224:
  4928                           
  4929                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  4930  0337  01F2               	clrf	I2C_Open@returnValue
  4931  0338                     l364:	
  4932                           ;mcc_generated_files/i2c_master.c: 205:     }
  4933                           
  4934                           
  4935                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  4936  0338  0872               	movf	I2C_Open@returnValue,w
  4937  0339                     l365:
  4938  0339  0008               	return
  4939  033A                     __end_of_I2C_Open:
  4940                           
  4941                           	psect	text21
  4942  0E91                     __ptext21:	
  4943 ;; *************** function _I2C_MasterOpen *****************
  4944 ;; Defined at:
  4945 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  4946 ;; Parameters:    Size  Location     Type
  4947 ;;		None
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;		None
  4950 ;; Return value:  Size  Location     Type
  4951 ;;                  1    wreg      _Bool 
  4952 ;; Registers used:
  4953 ;;		wreg, status,2
  4954 ;; Tracked objects:
  4955 ;;		On entry : 0/0
  4956 ;;		On exit  : 0/0
  4957 ;;		Unchanged: 0/0
  4958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4959 ;;      Params:         0       0       0       0       0       0       0       0
  4960 ;;      Locals:         0       0       0       0       0       0       0       0
  4961 ;;      Temps:          0       0       0       0       0       0       0       0
  4962 ;;      Totals:         0       0       0       0       0       0       0       0
  4963 ;;Total ram usage:        0 bytes
  4964 ;; Hardware stack levels used:    1
  4965 ;; This function calls:
  4966 ;;		Nothing
  4967 ;; This function is called by:
  4968 ;;		_I2C_Open
  4969 ;; This function uses a non-reentrant model
  4970 ;;
  4971                           
  4972                           
  4973                           ;psect for function _I2C_MasterOpen
  4974  0E91                     _I2C_MasterOpen:
  4975  0E91                     l3160:	
  4976                           ;incstack = 0
  4977                           ; Regs used in _I2C_MasterOpen: [wreg+status,2]
  4978                           
  4979                           
  4980                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSP1CON1bits.SSPEN)
  4981  0E91  0024               	movlb	4	; select bank4
  4982  0E92  1A95               	btfsc	21,5	;volatile
  4983  0E93  2E95               	goto	u1411
  4984  0E94  2E96               	goto	u1410
  4985  0E95                     u1411:
  4986  0E95  2E9E               	goto	l530
  4987  0E96                     u1410:
  4988  0E96                     l3162:
  4989                           
  4990                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSP1STAT = 0x80;
  4991  0E96  3080               	movlw	128
  4992  0E97  0094               	movwf	20	;volatile
  4993                           
  4994                           ;mcc_generated_files/i2c_master.c: 548:         SSP1CON1 = 0x08;
  4995  0E98  3008               	movlw	8
  4996  0E99  0095               	movwf	21	;volatile
  4997  0E9A                     l3164:
  4998                           
  4999                           ;mcc_generated_files/i2c_master.c: 549:         SSP1CON2 = 0x00;
  5000  0E9A  0196               	clrf	22	;volatile
  5001  0E9B                     l3166:
  5002                           
  5003                           ;mcc_generated_files/i2c_master.c: 550:         SSP1ADD = 0x09;
  5004  0E9B  3009               	movlw	9
  5005  0E9C  0092               	movwf	18	;volatile
  5006  0E9D                     l3168:
  5007                           
  5008                           ;mcc_generated_files/i2c_master.c: 551:         SSP1CON1bits.SSPEN = 1;
  5009  0E9D  1695               	bsf	21,5	;volatile
  5010  0E9E                     l530:
  5011  0E9E  0008               	return
  5012  0E9F                     __end_of_I2C_MasterOpen:
  5013                           
  5014                           	psect	text22
  5015  0E07                     __ptext22:	
  5016 ;; *************** function _I2C_MasterWrite *****************
  5017 ;; Defined at:
  5018 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  5019 ;; Parameters:    Size  Location     Type
  5020 ;;		None
  5021 ;; Auto vars:     Size  Location     Type
  5022 ;;		None
  5023 ;; Return value:  Size  Location     Type
  5024 ;;                  1    wreg      enum E355
  5025 ;; Registers used:
  5026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5027 ;; Tracked objects:
  5028 ;;		On entry : 0/0
  5029 ;;		On exit  : 0/0
  5030 ;;		Unchanged: 0/0
  5031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5032 ;;      Params:         0       0       0       0       0       0       0       0
  5033 ;;      Locals:         0       0       0       0       0       0       0       0
  5034 ;;      Temps:          0       0       0       0       0       0       0       0
  5035 ;;      Totals:         0       0       0       0       0       0       0       0
  5036 ;;Total ram usage:        0 bytes
  5037 ;; Hardware stack levels used:    1
  5038 ;; Hardware stack levels required when called:    7
  5039 ;; This function calls:
  5040 ;;		_I2C_MasterOperation
  5041 ;; This function is called by:
  5042 ;;		_I2C_Read1ByteRegister
  5043 ;;		_I2C_Write1ByteRegister
  5044 ;;		_i2c_write1ByteRegister
  5045 ;;		_i2c_writeNBytes
  5046 ;;		_i2c_read1ByteRegister
  5047 ;;		_i2c_read2ByteRegister
  5048 ;;		_i2c_write2ByteRegister
  5049 ;;		_i2c_readDataBlock
  5050 ;;		_I2C_Read2ByteRegister
  5051 ;;		_I2C_Write2ByteRegister
  5052 ;;		_I2C_WriteNBytes
  5053 ;;		_I2C_ReadDataBlock
  5054 ;; This function uses a non-reentrant model
  5055 ;;
  5056                           
  5057                           
  5058                           ;psect for function _I2C_MasterWrite
  5059  0E07                     _I2C_MasterWrite:
  5060  0E07                     l3230:	
  5061                           ;incstack = 0
  5062                           ; Regs used in _I2C_MasterWrite: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5063                           
  5064                           
  5065                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  5066  0E07  3000               	movlw	0
  5067  0E08  3180  2080  318E   	fcall	_I2C_MasterOperation
  5068  0E0B                     l381:
  5069  0E0B  0008               	return
  5070  0E0C                     __end_of_I2C_MasterWrite:
  5071                           
  5072                           	psect	text23
  5073  0080                     __ptext23:	
  5074 ;; *************** function _I2C_MasterOperation *****************
  5075 ;; Defined at:
  5076 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;  read            1    wreg     _Bool 
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  read            1    3[BANK0 ] _Bool 
  5081 ;;  returnValue     1    4[BANK0 ] enum E355
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      enum E355
  5084 ;; Registers used:
  5085 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5091 ;;      Params:         0       0       0       0       0       0       0       0
  5092 ;;      Locals:         0       2       0       0       0       0       0       0
  5093 ;;      Temps:          1       0       0       0       0       0       0       0
  5094 ;;      Totals:         1       2       0       0       0       0       0       0
  5095 ;;Total ram usage:        3 bytes
  5096 ;; Hardware stack levels used:    1
  5097 ;; Hardware stack levels required when called:    6
  5098 ;; This function calls:
  5099 ;;		_I2C_MasterStart
  5100 ;;		_I2C_Poller
  5101 ;; This function is called by:
  5102 ;;		_I2C_MasterWrite
  5103 ;;		_I2C_MasterRead
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           
  5107                           
  5108                           ;psect for function _I2C_MasterOperation
  5109  0080                     _I2C_MasterOperation:
  5110                           
  5111                           ;incstack = 0
  5112                           ; Regs used in _I2C_MasterOperation: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5113                           ;I2C_MasterOperation@read stored from wreg
  5114  0080  0020               	movlb	0	; select bank0
  5115  0081  00D3               	movwf	I2C_MasterOperation@read
  5116  0082                     l3176:
  5117                           
  5118                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  5119  0082  01D4               	clrf	I2C_MasterOperation@returnValue
  5120  0083  0AD4               	incf	I2C_MasterOperation@returnValue,f
  5121                           
  5122                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  5123  0084  18BC               	btfsc	_I2C_Status+28,1
  5124  0085  2887               	goto	u1421
  5125  0086  2888               	goto	u1420
  5126  0087                     u1421:
  5127  0087  289C               	goto	l3192
  5128  0088                     u1420:
  5129  0088                     l3178:
  5130                           
  5131                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  5132  0088  14BC               	bsf	_I2C_Status+28,1
  5133  0089                     l3180:
  5134                           
  5135                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  5136  0089  01D4               	clrf	I2C_MasterOperation@returnValue
  5137  008A                     l3182:
  5138                           
  5139                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  5140  008A  0853               	movf	I2C_MasterOperation@read,w
  5141  008B  1903               	btfsc	3,2
  5142  008C  288E               	goto	u1431
  5143  008D  288F               	goto	u1430
  5144  008E                     u1431:
  5145  008E  2892               	goto	l3186
  5146  008F                     u1430:
  5147  008F                     l3184:
  5148                           
  5149                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  5150  008F  01BA               	clrf	_I2C_Status+26
  5151  0090  0ABA               	incf	_I2C_Status+26,f
  5152                           
  5153                           ;mcc_generated_files/i2c_master.c: 235:         }
  5154  0091  2896               	goto	l3188
  5155  0092                     l3186:
  5156                           
  5157                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  5158  0092  3002               	movlw	2
  5159  0093  00FD               	movwf	??_I2C_MasterOperation
  5160  0094  087D               	movf	??_I2C_MasterOperation,w
  5161  0095  00BA               	movwf	_I2C_Status+26
  5162  0096                     l3188:
  5163                           
  5164                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  5165  0096  318D  25B7  3180   	fcall	_I2C_MasterStart
  5166  0099                     l3190:
  5167                           
  5168                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  5169  0099  318E  2677  3180   	fcall	_I2C_Poller
  5170  009C                     l3192:
  5171                           
  5172                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  5173  009C  0020               	movlb	0	; select bank0
  5174  009D  0854               	movf	I2C_MasterOperation@returnValue,w
  5175  009E                     l375:
  5176  009E  0008               	return
  5177  009F                     __end_of_I2C_MasterOperation:
  5178                           
  5179                           	psect	text24
  5180  0E77                     __ptext24:	
  5181 ;; *************** function _I2C_Poller *****************
  5182 ;; Defined at:
  5183 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;		None
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;		None
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  1    wreg      void 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5197 ;;      Params:         0       0       0       0       0       0       0       0
  5198 ;;      Locals:         0       0       0       0       0       0       0       0
  5199 ;;      Temps:          0       0       0       0       0       0       0       0
  5200 ;;      Totals:         0       0       0       0       0       0       0       0
  5201 ;;Total ram usage:        0 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    5
  5204 ;; This function calls:
  5205 ;;		_I2C_MasterFsm
  5206 ;;		_I2C_MasterWaitForEvent
  5207 ;; This function is called by:
  5208 ;;		_I2C_MasterOperation
  5209 ;; This function uses a non-reentrant model
  5210 ;;
  5211                           
  5212                           
  5213                           ;psect for function _I2C_Poller
  5214  0E77                     _I2C_Poller:
  5215  0E77                     l3152:	
  5216                           ;incstack = 0
  5217                           ; Regs used in _I2C_Poller: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5218                           
  5219                           
  5220                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5221  0E77  2E7E               	goto	l3158
  5222  0E78                     l3154:
  5223                           
  5224                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  5225  0E78  318E  262A  318E   	fcall	_I2C_MasterWaitForEvent
  5226  0E7B                     l3156:
  5227                           
  5228                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  5229  0E7B  3181  2158  318E   	fcall	_I2C_MasterFsm
  5230  0E7E                     l3158:
  5231                           
  5232                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  5233  0E7E  0020               	movlb	0	; select bank0
  5234  0E7F  18BC               	btfsc	_I2C_Status+28,1
  5235  0E80  2E82               	goto	u1401
  5236  0E81  2E83               	goto	u1400
  5237  0E82                     u1401:
  5238  0E82  2E78               	goto	l3154
  5239  0E83                     u1400:
  5240  0E83                     l414:
  5241  0E83  0008               	return
  5242  0E84                     __end_of_I2C_Poller:
  5243                           
  5244                           	psect	text25
  5245  0E2A                     __ptext25:	
  5246 ;; *************** function _I2C_MasterWaitForEvent *****************
  5247 ;; Defined at:
  5248 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  5249 ;; Parameters:    Size  Location     Type
  5250 ;;		None
  5251 ;; Auto vars:     Size  Location     Type
  5252 ;;		None
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  1    wreg      void 
  5255 ;; Registers used:
  5256 ;;		None
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5262 ;;      Params:         0       0       0       0       0       0       0       0
  5263 ;;      Locals:         0       0       0       0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0
  5265 ;;      Totals:         0       0       0       0       0       0       0       0
  5266 ;;Total ram usage:        0 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_I2C_Poller
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           
  5276                           ;psect for function _I2C_MasterWaitForEvent
  5277  0E2A                     _I2C_MasterWaitForEvent:
  5278  0E2A                     l587:	
  5279                           ;incstack = 0
  5280                           ; Regs used in _I2C_MasterWaitForEvent: []
  5281                           ;mcc_generated_files/i2c_master.c: 652:     while(1)
  5282                           
  5283                           
  5284                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSP1IF)
  5285  0E2A  0020               	movlb	0	; select bank0
  5286  0E2B  1D91               	btfss	17,3	;volatile
  5287  0E2C  2E2E               	goto	u1371
  5288  0E2D  2E2F               	goto	u1370
  5289  0E2E                     u1371:
  5290  0E2E  2E2A               	goto	l587
  5291  0E2F                     u1370:
  5292  0E2F                     l591:
  5293  0E2F  0008               	return
  5294  0E30                     __end_of_I2C_MasterWaitForEvent:
  5295                           
  5296                           	psect	text26
  5297  0158                     __ptext26:	
  5298 ;; *************** function _I2C_MasterFsm *****************
  5299 ;; Defined at:
  5300 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  5301 ;; Parameters:    Size  Location     Type
  5302 ;;		None
  5303 ;; Auto vars:     Size  Location     Type
  5304 ;;		None
  5305 ;; Return value:  Size  Location     Type
  5306 ;;                  1    wreg      void 
  5307 ;; Registers used:
  5308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5309 ;; Tracked objects:
  5310 ;;		On entry : 0/0
  5311 ;;		On exit  : 0/0
  5312 ;;		Unchanged: 0/0
  5313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5314 ;;      Params:         0       0       0       0       0       0       0       0
  5315 ;;      Locals:         0       0       0       0       0       0       0       0
  5316 ;;      Temps:          0       3       0       0       0       0       0       0
  5317 ;;      Totals:         0       3       0       0       0       0       0       0
  5318 ;;Total ram usage:        3 bytes
  5319 ;; Hardware stack levels used:    1
  5320 ;; Hardware stack levels required when called:    4
  5321 ;; This function calls:
  5322 ;;		_I2C_DO_ADDRESS_NACK
  5323 ;;		_I2C_DO_IDLE
  5324 ;;		_I2C_DO_RCEN
  5325 ;;		_I2C_DO_RESET
  5326 ;;		_I2C_DO_RX
  5327 ;;		_I2C_DO_RX_ACK
  5328 ;;		_I2C_DO_RX_NACK_RESTART
  5329 ;;		_I2C_DO_RX_NACK_STOP
  5330 ;;		_I2C_DO_SEND_ADR_READ
  5331 ;;		_I2C_DO_SEND_ADR_WRITE
  5332 ;;		_I2C_DO_SEND_RESTART
  5333 ;;		_I2C_DO_SEND_RESTART_READ
  5334 ;;		_I2C_DO_SEND_RESTART_WRITE
  5335 ;;		_I2C_DO_SEND_STOP
  5336 ;;		_I2C_DO_TX
  5337 ;;		_I2C_DO_TX_EMPTY
  5338 ;;		_I2C_MasterClearIrq
  5339 ;;		_I2C_MasterIsNack
  5340 ;; This function is called by:
  5341 ;;		_I2C_Poller
  5342 ;; This function uses a non-reentrant model
  5343 ;;
  5344                           
  5345                           
  5346                           ;psect for function _I2C_MasterFsm
  5347  0158                     _I2C_MasterFsm:
  5348  0158                     l3140:	
  5349                           ;incstack = 0
  5350                           ; Regs used in _I2C_MasterFsm: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5351                           
  5352                           
  5353                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  5354  0158  318D  25AE  3181   	fcall	_I2C_MasterClearIrq
  5355  015B                     l3142:
  5356                           
  5357                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  5358  015B  0020               	movlb	0	; select bank0
  5359  015C  1C3C               	btfss	_I2C_Status+28,0
  5360  015D  295F               	goto	u1381
  5361  015E  2960               	goto	u1380
  5362  015F                     u1381:
  5363  015F  296D               	goto	l3148
  5364  0160                     u1380:
  5365  0160                     l3144:
  5366  0160  318E  2624  3181   	fcall	_I2C_MasterIsNack
  5367  0163  3A00               	xorlw	0
  5368  0164  1903               	skipnz
  5369  0165  2967               	goto	u1391
  5370  0166  2968               	goto	u1390
  5371  0167                     u1391:
  5372  0167  296D               	goto	l3148
  5373  0168                     u1390:
  5374  0168                     l3146:
  5375                           
  5376                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  5377  0168  300F               	movlw	15
  5378  0169  0020               	movlb	0	; select bank0
  5379  016A  00D0               	movwf	??_I2C_MasterFsm
  5380  016B  0850               	movf	??_I2C_MasterFsm,w
  5381  016C  00BA               	movwf	_I2C_Status+26
  5382  016D                     l3148:
  5383                           
  5384                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  5385  016D  0020               	movlb	0	; select bank0
  5386  016E  083A               	movf	_I2C_Status+26,w
  5387  016F  00D0               	movwf	??_I2C_MasterFsm
  5388  0170  01D1               	clrf	??_I2C_MasterFsm+1
  5389  0171  35D0               	lslf	??_I2C_MasterFsm,f
  5390  0172  0DD1               	rlf	??_I2C_MasterFsm+1,f
  5391  0173  3000               	movlw	low (_i2c_fsmStateTable| (0+32768))
  5392  0174  0750               	addwf	??_I2C_MasterFsm,w
  5393  0175  0084               	movwf	4
  5394  0176  3088               	movlw	high (_i2c_fsmStateTable| (0+32768))
  5395  0177  3D51               	addwfc	??_I2C_MasterFsm+1,w
  5396  0178  0085               	movwf	5
  5397  0179  3F01               	moviw [1]fsr0
  5398  017A  008A               	movwf	10
  5399  017B  3F00               	moviw [0]fsr0
  5400  017C  000A               	callw
  5401  017D  3181               	pagesel	$
  5402  017E  0020               	movlb	0	; select bank0
  5403  017F  00D2               	movwf	??_I2C_MasterFsm+2
  5404  0180  0852               	movf	??_I2C_MasterFsm+2,w
  5405  0181  00BA               	movwf	_I2C_Status+26
  5406  0182                     l418:
  5407  0182  0008               	return
  5408  0183                     __end_of_I2C_MasterFsm:
  5409                           
  5410                           	psect	text27
  5411  01DA                     __ptext27:	
  5412 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  5413 ;; Defined at:
  5414 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  5415 ;; Parameters:    Size  Location     Type
  5416 ;;		None
  5417 ;; Auto vars:     Size  Location     Type
  5418 ;;		None
  5419 ;; Return value:  Size  Location     Type
  5420 ;;                  1    wreg      enum E3876
  5421 ;; Registers used:
  5422 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5423 ;; Tracked objects:
  5424 ;;		On entry : 0/0
  5425 ;;		On exit  : 0/0
  5426 ;;		Unchanged: 0/0
  5427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5428 ;;      Params:         0       0       0       0       0       0       0       0
  5429 ;;      Locals:         0       0       0       0       0       0       0       0
  5430 ;;      Temps:          3       0       0       0       0       0       0       0
  5431 ;;      Totals:         3       0       0       0       0       0       0       0
  5432 ;;Total ram usage:        3 bytes
  5433 ;; Hardware stack levels used:    1
  5434 ;; Hardware stack levels required when called:    3
  5435 ;; This function calls:
  5436 ;;		Absolute function
  5437 ;;		_I2C_CallbackReturnReset
  5438 ;;		_I2C_CallbackReturnStop
  5439 ;;		_I2C_DO_SEND_RESTART
  5440 ;;		_I2C_DO_SEND_STOP
  5441 ;;		_rd1RegCompleteHandler
  5442 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  5443 ;;		_rd2RegCompleteHandler
  5444 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  5445 ;;		_rdBlkRegCompleteHandler
  5446 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  5447 ;;		_wr1RegCompleteHandler
  5448 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  5449 ;;		_wr2RegCompleteHandler
  5450 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  5451 ;; This function is called by:
  5452 ;;		_I2C_MasterFsm
  5453 ;; This function uses a non-reentrant model
  5454 ;;
  5455                           
  5456                           
  5457                           ;psect for function _I2C_DO_ADDRESS_NACK
  5458  01DA                     _I2C_DO_ADDRESS_NACK:
  5459  01DA                     l3118:	
  5460                           ;incstack = 0
  5461                           ; Regs used in _I2C_DO_ADDRESS_NACK: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5462                           
  5463                           
  5464                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  5465  01DA  0020               	movlb	0	; select bank0
  5466  01DB  103C               	bcf	_I2C_Status+28,0
  5467  01DC                     l3120:
  5468                           
  5469                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  5470  01DC  3002               	movlw	2
  5471  01DD  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5472  01DE  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5473  01DF  00BB               	movwf	_I2C_Status+27
  5474                           
  5475                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  5476  01E0  29E9               	goto	l3132
  5477  01E1                     l3122:
  5478                           
  5479                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  5480  01E1  318D  25E9  3181   	fcall	_I2C_DO_SEND_RESTART
  5481  01E4  2A05               	goto	l509
  5482  01E5                     l3126:
  5483                           
  5484                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  5485  01E5  318D  25EE  3181   	fcall	_I2C_DO_SEND_STOP
  5486  01E8  2A05               	goto	l509
  5487  01E9                     l3132:
  5488  01E9  082E               	movf	low ((_I2C_Status| 0+14)),w
  5489  01EA  00FA               	movwf	??_I2C_DO_ADDRESS_NACK
  5490  01EB  087A               	movf	??_I2C_DO_ADDRESS_NACK,w
  5491  01EC  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  5492  01ED  3004               	movlw	4
  5493  01EE  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  5494  01EF  0086               	movwf	6
  5495  01F0  0187               	clrf	7
  5496  01F1  3F41               	moviw [1]fsr1
  5497  01F2  008A               	movwf	10
  5498  01F3  3F40               	moviw [0]fsr1
  5499  01F4  000A               	callw
  5500  01F5  3181               	pagesel	$
  5501  01F6  00FB               	movwf	??_I2C_DO_ADDRESS_NACK+1
  5502  01F7  01FC               	clrf	??_I2C_DO_ADDRESS_NACK+2
  5503                           
  5504                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5505                           ; Switch size 1, requested type "simple"
  5506                           ; Number of cases is 1, Range of values is 0 to 0
  5507                           ; switch strategies available:
  5508                           ; Name         Instructions Cycles
  5509                           ; simple_byte            4     3 (average)
  5510                           ; direct_byte            8     6 (fixed)
  5511                           ; jumptable            260     6 (fixed)
  5512                           ;	Chosen strategy is simple_byte
  5513  01F8  087C               	movf	??_I2C_DO_ADDRESS_NACK+2,w
  5514  01F9  3A00               	xorlw	0	; case 0
  5515  01FA  1903               	skipnz
  5516  01FB  29FD               	goto	l4178
  5517  01FC  29E5               	goto	l3126
  5518  01FD                     l4178:
  5519                           
  5520                           ; Switch size 1, requested type "simple"
  5521                           ; Number of cases is 2, Range of values is 2 to 3
  5522                           ; switch strategies available:
  5523                           ; Name         Instructions Cycles
  5524                           ; simple_byte            7     4 (average)
  5525                           ; direct_byte           13     9 (fixed)
  5526                           ; jumptable            263     9 (fixed)
  5527                           ;	Chosen strategy is simple_byte
  5528  01FD  087B               	movf	??_I2C_DO_ADDRESS_NACK+1,w
  5529  01FE  3A02               	xorlw	2	; case 2
  5530  01FF  1903               	skipnz
  5531  0200  29E1               	goto	l3122
  5532  0201  3A01               	xorlw	1	; case 3
  5533  0202  1903               	skipnz
  5534  0203  29E1               	goto	l3122
  5535  0204  29E5               	goto	l3126
  5536  0205                     l509:
  5537  0205  0008               	return
  5538  0206                     __end_of_I2C_DO_ADDRESS_NACK:
  5539                           
  5540                           	psect	text28
  5541  0E02                     __ptext28:	
  5542 ;; *************** function _I2C_DO_RESET *****************
  5543 ;; Defined at:
  5544 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;		None
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;		None
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      enum E3876
  5551 ;; Registers used:
  5552 ;;		wreg, status,2
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5558 ;;      Params:         0       0       0       0       0       0       0       0
  5559 ;;      Locals:         0       0       0       0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0
  5561 ;;      Totals:         0       0       0       0       0       0       0       0
  5562 ;;Total ram usage:        0 bytes
  5563 ;; Hardware stack levels used:    1
  5564 ;; This function calls:
  5565 ;;		Nothing
  5566 ;; This function is called by:
  5567 ;;		_I2C_MasterFsm
  5568 ;; This function uses a non-reentrant model
  5569 ;;
  5570                           
  5571                           
  5572                           ;psect for function _I2C_DO_RESET
  5573  0E02                     _I2C_DO_RESET:
  5574  0E02                     l3110:	
  5575                           ;incstack = 0
  5576                           ; Regs used in _I2C_DO_RESET: [wreg+status,2]
  5577                           
  5578                           
  5579                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  5580  0E02  0020               	movlb	0	; select bank0
  5581  0E03  10BC               	bcf	_I2C_Status+28,1
  5582  0E04                     l3112:
  5583                           
  5584                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  5585  0E04  01BB               	clrf	_I2C_Status+27
  5586  0E05                     l3114:
  5587                           
  5588                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  5589  0E05  300E               	movlw	14
  5590  0E06                     l503:
  5591  0E06  0008               	return
  5592  0E07                     __end_of_I2C_DO_RESET:
  5593                           
  5594                           	psect	text29
  5595  0DFD                     __ptext29:	
  5596 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  5597 ;; Defined at:
  5598 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;		None
  5601 ;; Auto vars:     Size  Location     Type
  5602 ;;		None
  5603 ;; Return value:  Size  Location     Type
  5604 ;;                  1    wreg      enum E3876
  5605 ;; Registers used:
  5606 ;;		wreg, status,2, status,0, pclath, cstack
  5607 ;; Tracked objects:
  5608 ;;		On entry : 0/0
  5609 ;;		On exit  : 0/0
  5610 ;;		Unchanged: 0/0
  5611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5612 ;;      Params:         0       0       0       0       0       0       0       0
  5613 ;;      Locals:         0       0       0       0       0       0       0       0
  5614 ;;      Temps:          0       0       0       0       0       0       0       0
  5615 ;;      Totals:         0       0       0       0       0       0       0       0
  5616 ;;Total ram usage:        0 bytes
  5617 ;; Hardware stack levels used:    1
  5618 ;; Hardware stack levels required when called:    1
  5619 ;; This function calls:
  5620 ;;		_I2C_MasterSendNack
  5621 ;; This function is called by:
  5622 ;;		_I2C_DO_RX
  5623 ;;		_I2C_MasterFsm
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           
  5627                           
  5628                           ;psect for function _I2C_DO_RX_NACK_RESTART
  5629  0DFD                     _I2C_DO_RX_NACK_RESTART:
  5630  0DFD                     l2952:	
  5631                           ;incstack = 0
  5632                           ; Regs used in _I2C_DO_RX_NACK_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5633                           
  5634                           
  5635                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  5636  0DFD  318D  25CD  318D   	fcall	_I2C_MasterSendNack
  5637  0E00                     l2954:
  5638                           
  5639                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  5640  0E00  3009               	movlw	9
  5641  0E01                     l500:
  5642  0E01  0008               	return
  5643  0E02                     __end_of_I2C_DO_RX_NACK_RESTART:
  5644                           
  5645                           	psect	text30
  5646  0DF8                     __ptext30:	
  5647 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  5648 ;; Defined at:
  5649 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      enum E3876
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5663 ;;      Params:         0       0       0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    1
  5670 ;; This function calls:
  5671 ;;		_I2C_MasterSendNack
  5672 ;; This function is called by:
  5673 ;;		_I2C_DO_RX
  5674 ;;		_I2C_MasterFsm
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _I2C_DO_RX_NACK_STOP
  5680  0DF8                     _I2C_DO_RX_NACK_STOP:
  5681  0DF8                     l2958:	
  5682                           ;incstack = 0
  5683                           ; Regs used in _I2C_DO_RX_NACK_STOP: [wreg+status,2+status,0+pclath+cstack]
  5684                           
  5685                           
  5686                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  5687  0DF8  318D  25CD  318D   	fcall	_I2C_MasterSendNack
  5688  0DFB                     l2960:
  5689                           
  5690                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  5691  0DFB  300A               	movlw	10
  5692  0DFC                     l497:
  5693  0DFC  0008               	return
  5694  0DFD                     __end_of_I2C_DO_RX_NACK_STOP:
  5695                           
  5696                           	psect	text31
  5697  0DF3                     __ptext31:	
  5698 ;; *************** function _I2C_DO_RX_ACK *****************
  5699 ;; Defined at:
  5700 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  5701 ;; Parameters:    Size  Location     Type
  5702 ;;		None
  5703 ;; Auto vars:     Size  Location     Type
  5704 ;;		None
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  1    wreg      enum E3876
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0, pclath, cstack
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5714 ;;      Params:         0       0       0       0       0       0       0       0
  5715 ;;      Locals:         0       0       0       0       0       0       0       0
  5716 ;;      Temps:          0       0       0       0       0       0       0       0
  5717 ;;      Totals:         0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:        0 bytes
  5719 ;; Hardware stack levels used:    1
  5720 ;; Hardware stack levels required when called:    1
  5721 ;; This function calls:
  5722 ;;		_I2C_MasterSendAck
  5723 ;; This function is called by:
  5724 ;;		_I2C_MasterFsm
  5725 ;; This function uses a non-reentrant model
  5726 ;;
  5727                           
  5728                           
  5729                           ;psect for function _I2C_DO_RX_ACK
  5730  0DF3                     _I2C_DO_RX_ACK:
  5731  0DF3                     l3104:	
  5732                           ;incstack = 0
  5733                           ; Regs used in _I2C_DO_RX_ACK: [wreg+status,2+status,0+pclath+cstack]
  5734                           
  5735                           
  5736                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  5737  0DF3  318D  25D1  318D   	fcall	_I2C_MasterSendAck
  5738  0DF6                     l3106:
  5739                           
  5740                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  5741  0DF6  3005               	movlw	5
  5742  0DF7                     l494:
  5743  0DF7  0008               	return
  5744  0DF8                     __end_of_I2C_DO_RX_ACK:
  5745                           
  5746                           	psect	text32
  5747  0DEE                     __ptext32:	
  5748 ;; *************** function _I2C_DO_SEND_STOP *****************
  5749 ;; Defined at:
  5750 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;		None
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      enum E3876
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0, pclath, cstack
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5764 ;;      Params:         0       0       0       0       0       0       0       0
  5765 ;;      Locals:         0       0       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0       0
  5767 ;;      Totals:         0       0       0       0       0       0       0       0
  5768 ;;Total ram usage:        0 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    1
  5771 ;; This function calls:
  5772 ;;		_I2C_MasterStop
  5773 ;; This function is called by:
  5774 ;;		_I2C_DO_TX
  5775 ;;		_I2C_DO_TX_EMPTY
  5776 ;;		_I2C_DO_ADDRESS_NACK
  5777 ;;		_I2C_MasterFsm
  5778 ;; This function uses a non-reentrant model
  5779 ;;
  5780                           
  5781                           
  5782                           ;psect for function _I2C_DO_SEND_STOP
  5783  0DEE                     _I2C_DO_SEND_STOP:
  5784  0DEE                     l2940:	
  5785                           ;incstack = 0
  5786                           ; Regs used in _I2C_DO_SEND_STOP: [wreg+status,2+status,0+pclath+cstack]
  5787                           
  5788                           
  5789                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  5790  0DEE  318D  25BD  318D   	fcall	_I2C_MasterStop
  5791  0DF1                     l2942:
  5792                           
  5793                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  5794  0DF1  3000               	movlw	0
  5795  0DF2                     l491:
  5796  0DF2  0008               	return
  5797  0DF3                     __end_of_I2C_DO_SEND_STOP:
  5798                           
  5799                           	psect	text33
  5800  0DE9                     __ptext33:	
  5801 ;; *************** function _I2C_DO_SEND_RESTART *****************
  5802 ;; Defined at:
  5803 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;		None
  5806 ;; Auto vars:     Size  Location     Type
  5807 ;;		None
  5808 ;; Return value:  Size  Location     Type
  5809 ;;                  1    wreg      enum E3876
  5810 ;; Registers used:
  5811 ;;		wreg, status,2, status,0, pclath, cstack
  5812 ;; Tracked objects:
  5813 ;;		On entry : 0/0
  5814 ;;		On exit  : 0/0
  5815 ;;		Unchanged: 0/0
  5816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5817 ;;      Params:         0       0       0       0       0       0       0       0
  5818 ;;      Locals:         0       0       0       0       0       0       0       0
  5819 ;;      Temps:          0       0       0       0       0       0       0       0
  5820 ;;      Totals:         0       0       0       0       0       0       0       0
  5821 ;;Total ram usage:        0 bytes
  5822 ;; Hardware stack levels used:    1
  5823 ;; Hardware stack levels required when called:    1
  5824 ;; This function calls:
  5825 ;;		_I2C_MasterEnableRestart
  5826 ;; This function is called by:
  5827 ;;		_I2C_DO_TX_EMPTY
  5828 ;;		_I2C_DO_ADDRESS_NACK
  5829 ;;		_I2C_MasterFsm
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           
  5834                           ;psect for function _I2C_DO_SEND_RESTART
  5835  0DE9                     _I2C_DO_SEND_RESTART:
  5836  0DE9                     l2966:	
  5837                           ;incstack = 0
  5838                           ; Regs used in _I2C_DO_SEND_RESTART: [wreg+status,2+status,0+pclath+cstack]
  5839                           
  5840                           
  5841                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  5842  0DE9  318D  25BA  318D   	fcall	_I2C_MasterEnableRestart
  5843  0DEC                     l2968:
  5844                           
  5845                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  5846  0DEC  3001               	movlw	1
  5847  0DED                     l488:
  5848  0DED  0008               	return
  5849  0DEE                     __end_of_I2C_DO_SEND_RESTART:
  5850                           
  5851                           	psect	text34
  5852  0DE4                     __ptext34:	
  5853 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  5854 ;; Defined at:
  5855 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;		None
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;		None
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      enum E3876
  5862 ;; Registers used:
  5863 ;;		wreg, status,2, status,0, pclath, cstack
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5869 ;;      Params:         0       0       0       0       0       0       0       0
  5870 ;;      Locals:         0       0       0       0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0
  5872 ;;      Totals:         0       0       0       0       0       0       0       0
  5873 ;;Total ram usage:        0 bytes
  5874 ;; Hardware stack levels used:    1
  5875 ;; Hardware stack levels required when called:    1
  5876 ;; This function calls:
  5877 ;;		_I2C_MasterEnableRestart
  5878 ;; This function is called by:
  5879 ;;		_I2C_DO_TX
  5880 ;;		_I2C_MasterFsm
  5881 ;; This function uses a non-reentrant model
  5882 ;;
  5883                           
  5884                           
  5885                           ;psect for function _I2C_DO_SEND_RESTART_WRITE
  5886  0DE4                     _I2C_DO_SEND_RESTART_WRITE:
  5887  0DE4                     l2934:	
  5888                           ;incstack = 0
  5889                           ; Regs used in _I2C_DO_SEND_RESTART_WRITE: [wreg+status,2+status,0+pclath+cstack]
  5890                           
  5891                           
  5892                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  5893  0DE4  318D  25BA  318D   	fcall	_I2C_MasterEnableRestart
  5894  0DE7                     l2936:
  5895                           
  5896                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  5897  0DE7  3002               	movlw	2
  5898  0DE8                     l485:
  5899  0DE8  0008               	return
  5900  0DE9                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  5901                           
  5902                           	psect	text35
  5903  0DDF                     __ptext35:	
  5904 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  5905 ;; Defined at:
  5906 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  5907 ;; Parameters:    Size  Location     Type
  5908 ;;		None
  5909 ;; Auto vars:     Size  Location     Type
  5910 ;;		None
  5911 ;; Return value:  Size  Location     Type
  5912 ;;                  1    wreg      enum E3876
  5913 ;; Registers used:
  5914 ;;		wreg, status,2, status,0, pclath, cstack
  5915 ;; Tracked objects:
  5916 ;;		On entry : 0/0
  5917 ;;		On exit  : 0/0
  5918 ;;		Unchanged: 0/0
  5919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5920 ;;      Params:         0       0       0       0       0       0       0       0
  5921 ;;      Locals:         0       0       0       0       0       0       0       0
  5922 ;;      Temps:          0       0       0       0       0       0       0       0
  5923 ;;      Totals:         0       0       0       0       0       0       0       0
  5924 ;;Total ram usage:        0 bytes
  5925 ;; Hardware stack levels used:    1
  5926 ;; Hardware stack levels required when called:    1
  5927 ;; This function calls:
  5928 ;;		_I2C_MasterEnableRestart
  5929 ;; This function is called by:
  5930 ;;		_I2C_DO_TX
  5931 ;;		_I2C_MasterFsm
  5932 ;; This function uses a non-reentrant model
  5933 ;;
  5934                           
  5935                           
  5936                           ;psect for function _I2C_DO_SEND_RESTART_READ
  5937  0DDF                     _I2C_DO_SEND_RESTART_READ:
  5938  0DDF                     l2928:	
  5939                           ;incstack = 0
  5940                           ; Regs used in _I2C_DO_SEND_RESTART_READ: [wreg+status,2+status,0+pclath+cstack]
  5941                           
  5942                           
  5943                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  5944  0DDF  318D  25BA  318D   	fcall	_I2C_MasterEnableRestart
  5945  0DE2                     l2930:
  5946                           
  5947                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  5948  0DE2  3001               	movlw	1
  5949  0DE3                     l482:
  5950  0DE3  0008               	return
  5951  0DE4                     __end_of_I2C_DO_SEND_RESTART_READ:
  5952                           
  5953                           	psect	text36
  5954  0E3C                     __ptext36:	
  5955 ;; *************** function _I2C_DO_RCEN *****************
  5956 ;; Defined at:
  5957 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  5958 ;; Parameters:    Size  Location     Type
  5959 ;;		None
  5960 ;; Auto vars:     Size  Location     Type
  5961 ;;		None
  5962 ;; Return value:  Size  Location     Type
  5963 ;;                  1    wreg      enum E3876
  5964 ;; Registers used:
  5965 ;;		wreg, status,2, status,0, pclath, cstack
  5966 ;; Tracked objects:
  5967 ;;		On entry : 0/0
  5968 ;;		On exit  : 0/0
  5969 ;;		Unchanged: 0/0
  5970 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5971 ;;      Params:         0       0       0       0       0       0       0       0
  5972 ;;      Locals:         0       0       0       0       0       0       0       0
  5973 ;;      Temps:          0       0       0       0       0       0       0       0
  5974 ;;      Totals:         0       0       0       0       0       0       0       0
  5975 ;;Total ram usage:        0 bytes
  5976 ;; Hardware stack levels used:    1
  5977 ;; Hardware stack levels required when called:    1
  5978 ;; This function calls:
  5979 ;;		_I2C_MasterStartRx
  5980 ;; This function is called by:
  5981 ;;		_I2C_MasterFsm
  5982 ;; This function uses a non-reentrant model
  5983 ;;
  5984                           
  5985                           
  5986                           ;psect for function _I2C_DO_RCEN
  5987  0E3C                     _I2C_DO_RCEN:
  5988  0E3C                     l3072:	
  5989                           ;incstack = 0
  5990                           ; Regs used in _I2C_DO_RCEN: [wreg+status,2+status,0+pclath+cstack]
  5991                           
  5992                           
  5993                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  5994  0E3C  0020               	movlb	0	; select bank0
  5995  0E3D  103C               	bcf	_I2C_Status+28,0
  5996  0E3E                     l3074:
  5997                           
  5998                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  5999  0E3E  318D  25C0  318E   	fcall	_I2C_MasterStartRx
  6000  0E41                     l3076:
  6001                           
  6002                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  6003  0E41  3004               	movlw	4
  6004  0E42                     l458:
  6005  0E42  0008               	return
  6006  0E43                     __end_of_I2C_DO_RCEN:
  6007                           
  6008                           	psect	text37
  6009  0376                     __ptext37:	
  6010 ;; *************** function _I2C_DO_RX *****************
  6011 ;; Defined at:
  6012 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      enum E3876
  6019 ;; Registers used:
  6020 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6026 ;;      Params:         0       0       0       0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0       0       0       0
  6028 ;;      Temps:          3       0       0       0       0       0       0       0
  6029 ;;      Totals:         3       0       0       0       0       0       0       0
  6030 ;;Total ram usage:        3 bytes
  6031 ;; Hardware stack levels used:    1
  6032 ;; Hardware stack levels required when called:    3
  6033 ;; This function calls:
  6034 ;;		Absolute function
  6035 ;;		_I2C_CallbackReturnReset
  6036 ;;		_I2C_CallbackReturnStop
  6037 ;;		_I2C_DO_RX_NACK_RESTART
  6038 ;;		_I2C_DO_RX_NACK_STOP
  6039 ;;		_I2C_MasterGetRxData
  6040 ;;		_I2C_MasterSendAck
  6041 ;;		_rd1RegCompleteHandler
  6042 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  6043 ;;		_rd2RegCompleteHandler
  6044 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  6045 ;;		_rdBlkRegCompleteHandler
  6046 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  6047 ;;		_wr1RegCompleteHandler
  6048 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  6049 ;;		_wr2RegCompleteHandler
  6050 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  6051 ;; This function is called by:
  6052 ;;		_I2C_MasterFsm
  6053 ;; This function uses a non-reentrant model
  6054 ;;
  6055                           
  6056                           
  6057                           ;psect for function _I2C_DO_RX
  6058  0376                     _I2C_DO_RX:
  6059  0376                     l3042:	
  6060                           ;incstack = 0
  6061                           ; Regs used in _I2C_DO_RX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6062                           
  6063                           
  6064                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
  6065  0376  318D  25C3  3183   	fcall	_I2C_MasterGetRxData
  6066  0379  00FA               	movwf	??_I2C_DO_RX
  6067  037A  0020               	movlb	0	; select bank0
  6068  037B  0837               	movf	low ((_I2C_Status| 0+23)),w
  6069  037C  0086               	movwf	6
  6070  037D  0187               	clrf	7
  6071  037E  087A               	movf	??_I2C_DO_RX,w
  6072  037F  0081               	movwf	1
  6073  0380                     l3044:
  6074  0380  3001               	movlw	1
  6075  0381  00FA               	movwf	??_I2C_DO_RX
  6076  0382  087A               	movf	??_I2C_DO_RX,w
  6077  0383  07B7               	addwf	low ((_I2C_Status| 0+23)),f
  6078  0384                     l3046:
  6079                           
  6080                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
  6081  0384  3001               	movlw	1
  6082  0385  02B8               	subwf	_I2C_Status+24,f
  6083  0386  3000               	movlw	0
  6084  0387  3BB9               	subwfb	_I2C_Status+25,f
  6085  0388  0838               	movf	_I2C_Status+24,w
  6086  0389  0439               	iorwf	_I2C_Status+25,w
  6087  038A  1903               	btfsc	3,2
  6088  038B  2B8D               	goto	u1361
  6089  038C  2B8E               	goto	u1360
  6090  038D                     u1361:
  6091  038D  2B93               	goto	l446
  6092  038E                     u1360:
  6093  038E                     l3048:
  6094                           
  6095                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
  6096  038E  318D  25D1  3183   	fcall	_I2C_MasterSendAck
  6097  0391                     l3050:
  6098                           
  6099                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
  6100  0391  3005               	movlw	5
  6101  0392  2BBB               	goto	l447
  6102  0393                     l446:	
  6103                           ;mcc_generated_files/i2c_master.c: 386:     else
  6104                           
  6105                           
  6106                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
  6107  0393  15BC               	bsf	_I2C_Status+28,3
  6108                           
  6109                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6110  0394  2B9D               	goto	l3066
  6111  0395                     l3056:
  6112                           
  6113                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
  6114  0395  318D  25FD  3183   	fcall	_I2C_DO_RX_NACK_RESTART
  6115  0398  2BBB               	goto	l447
  6116  0399                     l3060:
  6117                           
  6118                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
  6119  0399  318D  25F8  3183   	fcall	_I2C_DO_RX_NACK_STOP
  6120  039C  2BBB               	goto	l447
  6121  039D                     l3066:
  6122  039D  082C               	movf	low ((_I2C_Status| 0+12)),w
  6123  039E  00FA               	movwf	??_I2C_DO_RX
  6124  039F  087A               	movf	??_I2C_DO_RX,w
  6125  03A0  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6126  03A1  0821               	movf	_I2C_Status+1,w
  6127  03A2  008A               	movwf	10
  6128  03A3  0820               	movf	_I2C_Status,w
  6129  03A4  000A               	callw
  6130  03A5  3183               	pagesel	$
  6131  03A6  00FB               	movwf	??_I2C_DO_RX+1
  6132  03A7  01FC               	clrf	??_I2C_DO_RX+2
  6133                           
  6134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6135                           ; Switch size 1, requested type "simple"
  6136                           ; Number of cases is 1, Range of values is 0 to 0
  6137                           ; switch strategies available:
  6138                           ; Name         Instructions Cycles
  6139                           ; simple_byte            4     3 (average)
  6140                           ; direct_byte            8     6 (fixed)
  6141                           ; jumptable            260     6 (fixed)
  6142                           ;	Chosen strategy is simple_byte
  6143  03A8  087C               	movf	??_I2C_DO_RX+2,w
  6144  03A9  3A00               	xorlw	0	; case 0
  6145  03AA  1903               	skipnz
  6146  03AB  2BAD               	goto	l4180
  6147  03AC  2B99               	goto	l3060
  6148  03AD                     l4180:
  6149                           
  6150                           ; Switch size 1, requested type "simple"
  6151                           ; Number of cases is 4, Range of values is 1 to 4
  6152                           ; switch strategies available:
  6153                           ; Name         Instructions Cycles
  6154                           ; simple_byte           13     7 (average)
  6155                           ; direct_byte           17     9 (fixed)
  6156                           ; jumptable            263     9 (fixed)
  6157                           ;	Chosen strategy is simple_byte
  6158  03AD  087B               	movf	??_I2C_DO_RX+1,w
  6159  03AE  3A01               	xorlw	1	; case 1
  6160  03AF  1903               	skipnz
  6161  03B0  2B99               	goto	l3060
  6162  03B1  3A03               	xorlw	3	; case 2
  6163  03B2  1903               	skipnz
  6164  03B3  2B95               	goto	l3056
  6165  03B4  3A01               	xorlw	1	; case 3
  6166  03B5  1903               	skipnz
  6167  03B6  2B95               	goto	l3056
  6168  03B7  3A07               	xorlw	7	; case 4
  6169  03B8  1903               	skipnz
  6170  03B9  2B99               	goto	l3060
  6171  03BA  2B99               	goto	l3060
  6172  03BB                     l447:
  6173  03BB  0008               	return
  6174  03BC                     __end_of_I2C_DO_RX:
  6175                           
  6176                           	psect	text38
  6177  045F                     __ptext38:	
  6178 ;; *************** function _I2C_DO_TX *****************
  6179 ;; Defined at:
  6180 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
  6181 ;; Parameters:    Size  Location     Type
  6182 ;;		None
  6183 ;; Auto vars:     Size  Location     Type
  6184 ;;		None
  6185 ;; Return value:  Size  Location     Type
  6186 ;;                  1    wreg      enum E3876
  6187 ;; Registers used:
  6188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6194 ;;      Params:         0       0       0       0       0       0       0       0
  6195 ;;      Locals:         0       0       0       0       0       0       0       0
  6196 ;;      Temps:          3       0       0       0       0       0       0       0
  6197 ;;      Totals:         3       0       0       0       0       0       0       0
  6198 ;;Total ram usage:        3 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    3
  6201 ;; This function calls:
  6202 ;;		Absolute function
  6203 ;;		_I2C_CallbackReturnReset
  6204 ;;		_I2C_CallbackReturnStop
  6205 ;;		_I2C_DO_SEND_RESTART_READ
  6206 ;;		_I2C_DO_SEND_RESTART_WRITE
  6207 ;;		_I2C_DO_SEND_STOP
  6208 ;;		_I2C_MasterIsNack
  6209 ;;		_I2C_MasterSendTxData
  6210 ;;		_rd1RegCompleteHandler
  6211 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  6212 ;;		_rd2RegCompleteHandler
  6213 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  6214 ;;		_rdBlkRegCompleteHandler
  6215 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  6216 ;;		_wr1RegCompleteHandler
  6217 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  6218 ;;		_wr2RegCompleteHandler
  6219 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  6220 ;; This function is called by:
  6221 ;;		_I2C_MasterFsm
  6222 ;; This function uses a non-reentrant model
  6223 ;;
  6224                           
  6225                           
  6226                           ;psect for function _I2C_DO_TX
  6227  045F                     _I2C_DO_TX:
  6228  045F                     l3008:	
  6229                           ;incstack = 0
  6230                           ; Regs used in _I2C_DO_TX: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6231                           
  6232                           
  6233                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
  6234  045F  318E  2624  3184   	fcall	_I2C_MasterIsNack
  6235  0462  3A00               	xorlw	0
  6236  0463  1903               	skipnz
  6237  0464  2C66               	goto	u1341
  6238  0465  2C67               	goto	u1340
  6239  0466                     u1341:
  6240  0466  2C97               	goto	l430
  6241  0467                     u1340:
  6242  0467  2C74               	goto	l3026
  6243  0468                     l3012:
  6244                           
  6245                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
  6246  0468  318D  25DF  3184   	fcall	_I2C_DO_SEND_RESTART_READ
  6247  046B  2CB3               	goto	l433
  6248  046C                     l3016:
  6249                           
  6250                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
  6251  046C  318D  25E4  3184   	fcall	_I2C_DO_SEND_RESTART_WRITE
  6252  046F  2CB3               	goto	l433
  6253  0470                     l3020:
  6254                           
  6255                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
  6256  0470  318D  25EE  3184   	fcall	_I2C_DO_SEND_STOP
  6257  0473  2CB3               	goto	l433
  6258  0474                     l3026:
  6259  0474  0020               	movlb	0	; select bank0
  6260  0475  082F               	movf	low ((_I2C_Status| 0+15)),w
  6261  0476  00FA               	movwf	??_I2C_DO_TX
  6262  0477  087A               	movf	??_I2C_DO_TX,w
  6263  0478  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6264  0479  3006               	movlw	6
  6265  047A  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6266  047B  0086               	movwf	6
  6267  047C  0187               	clrf	7
  6268  047D  3F41               	moviw [1]fsr1
  6269  047E  008A               	movwf	10
  6270  047F  3F40               	moviw [0]fsr1
  6271  0480  000A               	callw
  6272  0481  3184               	pagesel	$
  6273  0482  00FB               	movwf	??_I2C_DO_TX+1
  6274  0483  01FC               	clrf	??_I2C_DO_TX+2
  6275                           
  6276                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6277                           ; Switch size 1, requested type "simple"
  6278                           ; Number of cases is 1, Range of values is 0 to 0
  6279                           ; switch strategies available:
  6280                           ; Name         Instructions Cycles
  6281                           ; simple_byte            4     3 (average)
  6282                           ; direct_byte            8     6 (fixed)
  6283                           ; jumptable            260     6 (fixed)
  6284                           ;	Chosen strategy is simple_byte
  6285  0484  087C               	movf	??_I2C_DO_TX+2,w
  6286  0485  3A00               	xorlw	0	; case 0
  6287  0486  1903               	skipnz
  6288  0487  2C89               	goto	l4182
  6289  0488  2C70               	goto	l3020
  6290  0489                     l4182:
  6291                           
  6292                           ; Switch size 1, requested type "simple"
  6293                           ; Number of cases is 4, Range of values is 1 to 4
  6294                           ; switch strategies available:
  6295                           ; Name         Instructions Cycles
  6296                           ; simple_byte           13     7 (average)
  6297                           ; direct_byte           17     9 (fixed)
  6298                           ; jumptable            263     9 (fixed)
  6299                           ;	Chosen strategy is simple_byte
  6300  0489  087B               	movf	??_I2C_DO_TX+1,w
  6301  048A  3A01               	xorlw	1	; case 1
  6302  048B  1903               	skipnz
  6303  048C  2C70               	goto	l3020
  6304  048D  3A03               	xorlw	3	; case 2
  6305  048E  1903               	skipnz
  6306  048F  2C68               	goto	l3012
  6307  0490  3A01               	xorlw	1	; case 3
  6308  0491  1903               	skipnz
  6309  0492  2C6C               	goto	l3016
  6310  0493  3A07               	xorlw	7	; case 4
  6311  0494  1903               	skipnz
  6312  0495  2C70               	goto	l3020
  6313  0496  2C70               	goto	l3020
  6314  0497                     l430:	
  6315                           ;mcc_generated_files/i2c_master.c: 370:     else
  6316                           
  6317                           
  6318                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
  6319  0497  0020               	movlb	0	; select bank0
  6320  0498  103C               	bcf	_I2C_Status+28,0
  6321  0499                     l3028:
  6322                           
  6323                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
  6324  0499  3017               	movlw	23
  6325  049A  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  6326  049B  0086               	movwf	6
  6327  049C  0187               	clrf	7
  6328  049D  3F40               	moviw [0]fsr1
  6329  049E  0084               	movwf	4
  6330  049F  0185               	clrf	5
  6331  04A0  0A81               	incf	1,f
  6332  04A1  0800               	movf	0,w
  6333  04A2  318D  25D5  3184   	fcall	_I2C_MasterSendTxData
  6334  04A5                     l3030:
  6335                           
  6336                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
  6337  04A5  3001               	movlw	1
  6338  04A6  0020               	movlb	0	; select bank0
  6339  04A7  02B8               	subwf	_I2C_Status+24,f
  6340  04A8  3000               	movlw	0
  6341  04A9  3BB9               	subwfb	_I2C_Status+25,f
  6342  04AA  0838               	movf	_I2C_Status+24,w
  6343  04AB  0439               	iorwf	_I2C_Status+25,w
  6344  04AC  1D03               	btfss	3,2
  6345  04AD  2CAF               	goto	u1351
  6346  04AE  2CB0               	goto	u1350
  6347  04AF                     u1351:
  6348  04AF  2CB2               	goto	l3034
  6349  04B0                     u1350:
  6350  04B0                     l3032:
  6351  04B0  3006               	movlw	6
  6352  04B1  2CB3               	goto	l433
  6353  04B2                     l3034:
  6354  04B2  3003               	movlw	3
  6355  04B3                     l433:
  6356  04B3  0008               	return
  6357  04B4                     __end_of_I2C_DO_TX:
  6358                           
  6359                           	psect	text39
  6360  0E43                     __ptext39:	
  6361 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
  6362 ;; Defined at:
  6363 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
  6364 ;; Parameters:    Size  Location     Type
  6365 ;;		None
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;		None
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  1    wreg      enum E3876
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0, pclath, cstack
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6377 ;;      Params:         0       0       0       0       0       0       0       0
  6378 ;;      Locals:         0       0       0       0       0       0       0       0
  6379 ;;      Temps:          0       0       0       0       0       0       0       0
  6380 ;;      Totals:         0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:        0 bytes
  6382 ;; Hardware stack levels used:    1
  6383 ;; Hardware stack levels required when called:    1
  6384 ;; This function calls:
  6385 ;;		_I2C_MasterSendTxData
  6386 ;; This function is called by:
  6387 ;;		_I2C_MasterFsm
  6388 ;; This function uses a non-reentrant model
  6389 ;;
  6390                           
  6391                           
  6392                           ;psect for function _I2C_DO_SEND_ADR_WRITE
  6393  0E43                     _I2C_DO_SEND_ADR_WRITE:
  6394  0E43                     l3000:	
  6395                           ;incstack = 0
  6396                           ; Regs used in _I2C_DO_SEND_ADR_WRITE: [wreg+status,2+status,0+pclath+cstack]
  6397                           
  6398                           
  6399                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
  6400  0E43  0020               	movlb	0	; select bank0
  6401  0E44  143C               	bsf	_I2C_Status+28,0
  6402  0E45                     l3002:
  6403                           
  6404                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
  6405  0E45  3536               	lslf	_I2C_Status+22,w
  6406  0E46  318D  25D5  318E   	fcall	_I2C_MasterSendTxData
  6407  0E49                     l3004:
  6408                           
  6409                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
  6410  0E49  3003               	movlw	3
  6411  0E4A                     l427:
  6412  0E4A  0008               	return
  6413  0E4B                     __end_of_I2C_DO_SEND_ADR_WRITE:
  6414                           
  6415                           	psect	text40
  6416  0E4B                     __ptext40:	
  6417 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
  6418 ;; Defined at:
  6419 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
  6420 ;; Parameters:    Size  Location     Type
  6421 ;;		None
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;		None
  6424 ;; Return value:  Size  Location     Type
  6425 ;;                  1    wreg      enum E3876
  6426 ;; Registers used:
  6427 ;;		wreg, status,2, status,0, pclath, cstack
  6428 ;; Tracked objects:
  6429 ;;		On entry : 0/0
  6430 ;;		On exit  : 0/0
  6431 ;;		Unchanged: 0/0
  6432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6433 ;;      Params:         0       0       0       0       0       0       0       0
  6434 ;;      Locals:         0       0       0       0       0       0       0       0
  6435 ;;      Temps:          0       0       0       0       0       0       0       0
  6436 ;;      Totals:         0       0       0       0       0       0       0       0
  6437 ;;Total ram usage:        0 bytes
  6438 ;; Hardware stack levels used:    1
  6439 ;; Hardware stack levels required when called:    1
  6440 ;; This function calls:
  6441 ;;		_I2C_MasterSendTxData
  6442 ;; This function is called by:
  6443 ;;		_I2C_MasterFsm
  6444 ;; This function uses a non-reentrant model
  6445 ;;
  6446                           
  6447                           
  6448                           ;psect for function _I2C_DO_SEND_ADR_READ
  6449  0E4B                     _I2C_DO_SEND_ADR_READ:
  6450  0E4B                     l2992:	
  6451                           ;incstack = 0
  6452                           ; Regs used in _I2C_DO_SEND_ADR_READ: [wreg+status,2+status,0+pclath+cstack]
  6453                           
  6454                           
  6455                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
  6456  0E4B  0020               	movlb	0	; select bank0
  6457  0E4C  143C               	bsf	_I2C_Status+28,0
  6458  0E4D                     l2994:
  6459                           
  6460                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
  6461  0E4D  1403               	setc
  6462  0E4E  0D36               	rlf	_I2C_Status+22,w
  6463  0E4F  318D  25D5  318E   	fcall	_I2C_MasterSendTxData
  6464  0E52                     l2996:
  6465                           
  6466                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
  6467  0E52  3005               	movlw	5
  6468  0E53                     l424:
  6469  0E53  0008               	return
  6470  0E54                     __end_of_I2C_DO_SEND_ADR_READ:
  6471                           
  6472                           	psect	text41
  6473  0DDA                     __ptext41:	
  6474 ;; *************** function _I2C_DO_IDLE *****************
  6475 ;; Defined at:
  6476 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
  6477 ;; Parameters:    Size  Location     Type
  6478 ;;		None
  6479 ;; Auto vars:     Size  Location     Type
  6480 ;;		None
  6481 ;; Return value:  Size  Location     Type
  6482 ;;                  1    wreg      enum E3876
  6483 ;; Registers used:
  6484 ;;		wreg, status,2
  6485 ;; Tracked objects:
  6486 ;;		On entry : 0/0
  6487 ;;		On exit  : 0/0
  6488 ;;		Unchanged: 0/0
  6489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6490 ;;      Params:         0       0       0       0       0       0       0       0
  6491 ;;      Locals:         0       0       0       0       0       0       0       0
  6492 ;;      Temps:          0       0       0       0       0       0       0       0
  6493 ;;      Totals:         0       0       0       0       0       0       0       0
  6494 ;;Total ram usage:        0 bytes
  6495 ;; Hardware stack levels used:    1
  6496 ;; This function calls:
  6497 ;;		Nothing
  6498 ;; This function is called by:
  6499 ;;		_I2C_MasterFsm
  6500 ;; This function uses a non-reentrant model
  6501 ;;
  6502                           
  6503                           
  6504                           ;psect for function _I2C_DO_IDLE
  6505  0DDA                     _I2C_DO_IDLE:
  6506  0DDA                     l2984:	
  6507                           ;incstack = 0
  6508                           ; Regs used in _I2C_DO_IDLE: [wreg+status,2]
  6509                           
  6510                           
  6511                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
  6512  0DDA  0020               	movlb	0	; select bank0
  6513  0DDB  10BC               	bcf	_I2C_Status+28,1
  6514  0DDC                     l2986:
  6515                           
  6516                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
  6517  0DDC  01BB               	clrf	_I2C_Status+27
  6518  0DDD                     l2988:
  6519                           
  6520                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
  6521  0DDD  300E               	movlw	14
  6522  0DDE                     l421:
  6523  0DDE  0008               	return
  6524  0DDF                     __end_of_I2C_DO_IDLE:
  6525                           
  6526                           	psect	text42
  6527  0234                     __ptext42:	
  6528 ;; *************** function _I2C_DO_TX_EMPTY *****************
  6529 ;; Defined at:
  6530 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
  6531 ;; Parameters:    Size  Location     Type
  6532 ;;		None
  6533 ;; Auto vars:     Size  Location     Type
  6534 ;;		None
  6535 ;; Return value:  Size  Location     Type
  6536 ;;                  1    wreg      enum E3876
  6537 ;; Registers used:
  6538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6539 ;; Tracked objects:
  6540 ;;		On entry : 0/0
  6541 ;;		On exit  : 0/0
  6542 ;;		Unchanged: 0/0
  6543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6544 ;;      Params:         0       0       0       0       0       0       0       0
  6545 ;;      Locals:         0       0       0       0       0       0       0       0
  6546 ;;      Temps:          3       0       0       0       0       0       0       0
  6547 ;;      Totals:         3       0       0       0       0       0       0       0
  6548 ;;Total ram usage:        3 bytes
  6549 ;; Hardware stack levels used:    1
  6550 ;; Hardware stack levels required when called:    3
  6551 ;; This function calls:
  6552 ;;		Absolute function
  6553 ;;		_I2C_CallbackReturnReset
  6554 ;;		_I2C_CallbackReturnStop
  6555 ;;		_I2C_DO_SEND_RESTART
  6556 ;;		_I2C_DO_SEND_STOP
  6557 ;;		_I2C_MasterSetIrq
  6558 ;;		_rd1RegCompleteHandler
  6559 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  6560 ;;		_rd2RegCompleteHandler
  6561 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  6562 ;;		_rdBlkRegCompleteHandler
  6563 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  6564 ;;		_wr1RegCompleteHandler
  6565 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  6566 ;;		_wr2RegCompleteHandler
  6567 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  6568 ;; This function is called by:
  6569 ;;		_I2C_MasterFsm
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           
  6574                           ;psect for function _I2C_DO_TX_EMPTY
  6575  0234                     _I2C_DO_TX_EMPTY:
  6576  0234                     l3080:	
  6577                           ;incstack = 0
  6578                           ; Regs used in _I2C_DO_TX_EMPTY: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6579                           
  6580                           
  6581                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
  6582  0234  0020               	movlb	0	; select bank0
  6583  0235  15BC               	bsf	_I2C_Status+28,3
  6584                           
  6585                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
  6586  0236  2A44               	goto	l3098
  6587  0237                     l3082:
  6588                           
  6589                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
  6590  0237  318D  25E9  3182   	fcall	_I2C_DO_SEND_RESTART
  6591  023A  2A62               	goto	l464
  6592  023B                     l3086:
  6593                           
  6594                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
  6595  023B  318D  25C6  3182   	fcall	_I2C_MasterSetIrq
  6596  023E                     l3088:
  6597                           
  6598                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
  6599  023E  3003               	movlw	3
  6600  023F  2A62               	goto	l464
  6601  0240                     l3092:
  6602                           
  6603                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
  6604  0240  318D  25EE  3182   	fcall	_I2C_DO_SEND_STOP
  6605  0243  2A62               	goto	l464
  6606  0244                     l3098:
  6607  0244  082C               	movf	low ((_I2C_Status| 0+12)),w
  6608  0245  00FA               	movwf	??_I2C_DO_TX_EMPTY
  6609  0246  087A               	movf	??_I2C_DO_TX_EMPTY,w
  6610  0247  00F9               	movwf	I2C_CallbackReturnReset@funPtr
  6611  0248  0821               	movf	_I2C_Status+1,w
  6612  0249  008A               	movwf	10
  6613  024A  0820               	movf	_I2C_Status,w
  6614  024B  000A               	callw
  6615  024C  3182               	pagesel	$
  6616  024D  00FB               	movwf	??_I2C_DO_TX_EMPTY+1
  6617  024E  01FC               	clrf	??_I2C_DO_TX_EMPTY+2
  6618                           
  6619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6620                           ; Switch size 1, requested type "simple"
  6621                           ; Number of cases is 1, Range of values is 0 to 0
  6622                           ; switch strategies available:
  6623                           ; Name         Instructions Cycles
  6624                           ; simple_byte            4     3 (average)
  6625                           ; direct_byte            8     6 (fixed)
  6626                           ; jumptable            260     6 (fixed)
  6627                           ;	Chosen strategy is simple_byte
  6628  024F  087C               	movf	??_I2C_DO_TX_EMPTY+2,w
  6629  0250  3A00               	xorlw	0	; case 0
  6630  0251  1903               	skipnz
  6631  0252  2A54               	goto	l4184
  6632  0253  2A40               	goto	l3092
  6633  0254                     l4184:
  6634                           
  6635                           ; Switch size 1, requested type "simple"
  6636                           ; Number of cases is 4, Range of values is 1 to 4
  6637                           ; switch strategies available:
  6638                           ; Name         Instructions Cycles
  6639                           ; simple_byte           13     7 (average)
  6640                           ; direct_byte           17     9 (fixed)
  6641                           ; jumptable            263     9 (fixed)
  6642                           ;	Chosen strategy is simple_byte
  6643  0254  087B               	movf	??_I2C_DO_TX_EMPTY+1,w
  6644  0255  3A01               	xorlw	1	; case 1
  6645  0256  1903               	skipnz
  6646  0257  2A40               	goto	l3092
  6647  0258  3A03               	xorlw	3	; case 2
  6648  0259  1903               	skipnz
  6649  025A  2A37               	goto	l3082
  6650  025B  3A01               	xorlw	1	; case 3
  6651  025C  1903               	skipnz
  6652  025D  2A37               	goto	l3082
  6653  025E  3A07               	xorlw	7	; case 4
  6654  025F  1903               	skipnz
  6655  0260  2A3B               	goto	l3086
  6656  0261  2A40               	goto	l3092
  6657  0262                     l464:
  6658  0262  0008               	return
  6659  0263                     __end_of_I2C_DO_TX_EMPTY:
  6660                           
  6661                           	psect	text43
  6662  0DC6                     __ptext43:	
  6663 ;; *************** function _I2C_MasterSetIrq *****************
  6664 ;; Defined at:
  6665 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
  6666 ;; Parameters:    Size  Location     Type
  6667 ;;		None
  6668 ;; Auto vars:     Size  Location     Type
  6669 ;;		None
  6670 ;; Return value:  Size  Location     Type
  6671 ;;                  1    wreg      void 
  6672 ;; Registers used:
  6673 ;;		None
  6674 ;; Tracked objects:
  6675 ;;		On entry : 0/0
  6676 ;;		On exit  : 0/0
  6677 ;;		Unchanged: 0/0
  6678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6679 ;;      Params:         0       0       0       0       0       0       0       0
  6680 ;;      Locals:         0       0       0       0       0       0       0       0
  6681 ;;      Temps:          0       0       0       0       0       0       0       0
  6682 ;;      Totals:         0       0       0       0       0       0       0       0
  6683 ;;Total ram usage:        0 bytes
  6684 ;; Hardware stack levels used:    1
  6685 ;; This function calls:
  6686 ;;		Nothing
  6687 ;; This function is called by:
  6688 ;;		_I2C_DO_TX_EMPTY
  6689 ;; This function uses a non-reentrant model
  6690 ;;
  6691                           
  6692                           
  6693                           ;psect for function _I2C_MasterSetIrq
  6694  0DC6                     _I2C_MasterSetIrq:
  6695  0DC6                     l2972:	
  6696                           ;incstack = 0
  6697                           ; Regs used in _I2C_MasterSetIrq: []
  6698                           
  6699                           
  6700                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSP1IF = 1;
  6701  0DC6  0020               	movlb	0	; select bank0
  6702  0DC7  1591               	bsf	17,3	;volatile
  6703  0DC8                     l584:
  6704  0DC8  0008               	return
  6705  0DC9                     __end_of_I2C_MasterSetIrq:
  6706                           
  6707                           	psect	text44
  6708  0E24                     __ptext44:	
  6709 ;; *************** function _I2C_MasterIsNack *****************
  6710 ;; Defined at:
  6711 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;		None
  6716 ;; Return value:  Size  Location     Type
  6717 ;;                  1    wreg      _Bool 
  6718 ;; Registers used:
  6719 ;;		wreg, status,2, status,0
  6720 ;; Tracked objects:
  6721 ;;		On entry : 0/0
  6722 ;;		On exit  : 0/0
  6723 ;;		Unchanged: 0/0
  6724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6725 ;;      Params:         0       0       0       0       0       0       0       0
  6726 ;;      Locals:         0       0       0       0       0       0       0       0
  6727 ;;      Temps:          0       0       0       0       0       0       0       0
  6728 ;;      Totals:         0       0       0       0       0       0       0       0
  6729 ;;Total ram usage:        0 bytes
  6730 ;; Hardware stack levels used:    1
  6731 ;; This function calls:
  6732 ;;		Nothing
  6733 ;; This function is called by:
  6734 ;;		_I2C_MasterFsm
  6735 ;;		_I2C_DO_TX
  6736 ;; This function uses a non-reentrant model
  6737 ;;
  6738                           
  6739                           
  6740                           ;psect for function _I2C_MasterIsNack
  6741  0E24                     _I2C_MasterIsNack:
  6742  0E24                     l2922:	
  6743                           ;incstack = 0
  6744                           ; Regs used in _I2C_MasterIsNack: [wreg+status,2+status,0]
  6745                           
  6746                           
  6747                           ;mcc_generated_files/i2c_master.c: 600:     return SSP1CON2bits.ACKSTAT;
  6748  0E24  0024               	movlb	4	; select bank4
  6749  0E25  0E16               	swapf	22,w	;volatile
  6750  0E26  0C89               	rrf	9,f
  6751  0E27  0C89               	rrf	9,f
  6752  0E28  3901               	andlw	1
  6753  0E29                     l557:
  6754  0E29  0008               	return
  6755  0E2A                     __end_of_I2C_MasterIsNack:
  6756                           
  6757                           	psect	text45
  6758  0DD5                     __ptext45:	
  6759 ;; *************** function _I2C_MasterSendTxData *****************
  6760 ;; Defined at:
  6761 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  data            1    wreg     unsigned char 
  6764 ;; Auto vars:     Size  Location     Type
  6765 ;;  data            1    0[COMMON] unsigned char 
  6766 ;; Return value:  Size  Location     Type
  6767 ;;                  1    wreg      void 
  6768 ;; Registers used:
  6769 ;;		wreg
  6770 ;; Tracked objects:
  6771 ;;		On entry : 0/0
  6772 ;;		On exit  : 0/0
  6773 ;;		Unchanged: 0/0
  6774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6775 ;;      Params:         0       0       0       0       0       0       0       0
  6776 ;;      Locals:         1       0       0       0       0       0       0       0
  6777 ;;      Temps:          0       0       0       0       0       0       0       0
  6778 ;;      Totals:         1       0       0       0       0       0       0       0
  6779 ;;Total ram usage:        1 bytes
  6780 ;; Hardware stack levels used:    1
  6781 ;; This function calls:
  6782 ;;		Nothing
  6783 ;; This function is called by:
  6784 ;;		_I2C_DO_SEND_ADR_READ
  6785 ;;		_I2C_DO_SEND_ADR_WRITE
  6786 ;;		_I2C_DO_TX
  6787 ;; This function uses a non-reentrant model
  6788 ;;
  6789                           
  6790                           
  6791                           ;psect for function _I2C_MasterSendTxData
  6792  0DD5                     _I2C_MasterSendTxData:
  6793                           
  6794                           ;incstack = 0
  6795                           ; Regs used in _I2C_MasterSendTxData: [wreg]
  6796                           ;I2C_MasterSendTxData@data stored from wreg
  6797  0DD5  00F0               	movwf	I2C_MasterSendTxData@data
  6798  0DD6                     l2926:
  6799                           
  6800                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSP1BUF = data;
  6801  0DD6  0870               	movf	I2C_MasterSendTxData@data,w
  6802  0DD7  0024               	movlb	4	; select bank4
  6803  0DD8  0091               	movwf	17	;volatile
  6804  0DD9                     l539:
  6805  0DD9  0008               	return
  6806  0DDA                     __end_of_I2C_MasterSendTxData:
  6807                           
  6808                           	psect	text46
  6809  0DD1                     __ptext46:	
  6810 ;; *************** function _I2C_MasterSendAck *****************
  6811 ;; Defined at:
  6812 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;		None
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;		None
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		None
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6826 ;;      Params:         0       0       0       0       0       0       0       0
  6827 ;;      Locals:         0       0       0       0       0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0
  6829 ;;      Totals:         0       0       0       0       0       0       0       0
  6830 ;;Total ram usage:        0 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_I2C_DO_RX
  6836 ;;		_I2C_DO_RX_ACK
  6837 ;; This function uses a non-reentrant model
  6838 ;;
  6839                           
  6840                           
  6841                           ;psect for function _I2C_MasterSendAck
  6842  0DD1                     _I2C_MasterSendAck:
  6843  0DD1                     l2950:	
  6844                           ;incstack = 0
  6845                           ; Regs used in _I2C_MasterSendAck: []
  6846                           
  6847                           
  6848                           ;mcc_generated_files/i2c_master.c: 605:     SSP1CON2bits.ACKDT = 0;
  6849  0DD1  0024               	movlb	4	; select bank4
  6850  0DD2  1296               	bcf	22,5	;volatile
  6851                           
  6852                           ;mcc_generated_files/i2c_master.c: 606:     SSP1CON2bits.ACKEN = 1;
  6853  0DD3  1616               	bsf	22,4	;volatile
  6854  0DD4                     l560:
  6855  0DD4  0008               	return
  6856  0DD5                     __end_of_I2C_MasterSendAck:
  6857                           
  6858                           	psect	text47
  6859  0DC3                     __ptext47:	
  6860 ;; *************** function _I2C_MasterGetRxData *****************
  6861 ;; Defined at:
  6862 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;		None
  6865 ;; Auto vars:     Size  Location     Type
  6866 ;;		None
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  1    wreg      unsigned char 
  6869 ;; Registers used:
  6870 ;;		wreg
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6876 ;;      Params:         0       0       0       0       0       0       0       0
  6877 ;;      Locals:         0       0       0       0       0       0       0       0
  6878 ;;      Temps:          0       0       0       0       0       0       0       0
  6879 ;;      Totals:         0       0       0       0       0       0       0       0
  6880 ;;Total ram usage:        0 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; This function calls:
  6883 ;;		Nothing
  6884 ;; This function is called by:
  6885 ;;		_I2C_DO_RX
  6886 ;; This function uses a non-reentrant model
  6887 ;;
  6888                           
  6889                           
  6890                           ;psect for function _I2C_MasterGetRxData
  6891  0DC3                     _I2C_MasterGetRxData:
  6892  0DC3                     l2946:	
  6893                           ;incstack = 0
  6894                           ; Regs used in _I2C_MasterGetRxData: [wreg]
  6895                           
  6896                           
  6897                           ;mcc_generated_files/i2c_master.c: 565:     return SSP1BUF;
  6898  0DC3  0024               	movlb	4	; select bank4
  6899  0DC4  0811               	movf	17,w	;volatile
  6900  0DC5                     l536:
  6901  0DC5  0008               	return
  6902  0DC6                     __end_of_I2C_MasterGetRxData:
  6903                           
  6904                           	psect	text48
  6905  0DCD                     __ptext48:	
  6906 ;; *************** function _I2C_MasterSendNack *****************
  6907 ;; Defined at:
  6908 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;		None
  6911 ;; Auto vars:     Size  Location     Type
  6912 ;;		None
  6913 ;; Return value:  Size  Location     Type
  6914 ;;                  1    wreg      void 
  6915 ;; Registers used:
  6916 ;;		None
  6917 ;; Tracked objects:
  6918 ;;		On entry : 0/0
  6919 ;;		On exit  : 0/0
  6920 ;;		Unchanged: 0/0
  6921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6922 ;;      Params:         0       0       0       0       0       0       0       0
  6923 ;;      Locals:         0       0       0       0       0       0       0       0
  6924 ;;      Temps:          0       0       0       0       0       0       0       0
  6925 ;;      Totals:         0       0       0       0       0       0       0       0
  6926 ;;Total ram usage:        0 bytes
  6927 ;; Hardware stack levels used:    1
  6928 ;; This function calls:
  6929 ;;		Nothing
  6930 ;; This function is called by:
  6931 ;;		_I2C_DO_RX_NACK_STOP
  6932 ;;		_I2C_DO_RX_NACK_RESTART
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           
  6937                           ;psect for function _I2C_MasterSendNack
  6938  0DCD                     _I2C_MasterSendNack:
  6939  0DCD                     l2844:	
  6940                           ;incstack = 0
  6941                           ; Regs used in _I2C_MasterSendNack: []
  6942                           
  6943                           
  6944                           ;mcc_generated_files/i2c_master.c: 611:     SSP1CON2bits.ACKDT = 1;
  6945  0DCD  0024               	movlb	4	; select bank4
  6946  0DCE  1696               	bsf	22,5	;volatile
  6947                           
  6948                           ;mcc_generated_files/i2c_master.c: 612:     SSP1CON2bits.ACKEN = 1;
  6949  0DCF  1616               	bsf	22,4	;volatile
  6950  0DD0                     l563:
  6951  0DD0  0008               	return
  6952  0DD1                     __end_of_I2C_MasterSendNack:
  6953                           
  6954                           	psect	text49
  6955  0DC0                     __ptext49:	
  6956 ;; *************** function _I2C_MasterStartRx *****************
  6957 ;; Defined at:
  6958 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
  6959 ;; Parameters:    Size  Location     Type
  6960 ;;		None
  6961 ;; Auto vars:     Size  Location     Type
  6962 ;;		None
  6963 ;; Return value:  Size  Location     Type
  6964 ;;                  1    wreg      void 
  6965 ;; Registers used:
  6966 ;;		None
  6967 ;; Tracked objects:
  6968 ;;		On entry : 0/0
  6969 ;;		On exit  : 0/0
  6970 ;;		Unchanged: 0/0
  6971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  6972 ;;      Params:         0       0       0       0       0       0       0       0
  6973 ;;      Locals:         0       0       0       0       0       0       0       0
  6974 ;;      Temps:          0       0       0       0       0       0       0       0
  6975 ;;      Totals:         0       0       0       0       0       0       0       0
  6976 ;;Total ram usage:        0 bytes
  6977 ;; Hardware stack levels used:    1
  6978 ;; This function calls:
  6979 ;;		Nothing
  6980 ;; This function is called by:
  6981 ;;		_I2C_DO_RCEN
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           
  6986                           ;psect for function _I2C_MasterStartRx
  6987  0DC0                     _I2C_MasterStartRx:
  6988  0DC0                     l2964:	
  6989                           ;incstack = 0
  6990                           ; Regs used in _I2C_MasterStartRx: []
  6991                           
  6992                           
  6993                           ;mcc_generated_files/i2c_master.c: 585:     SSP1CON2bits.RCEN = 1;
  6994  0DC0  0024               	movlb	4	; select bank4
  6995  0DC1  1596               	bsf	22,3	;volatile
  6996  0DC2                     l548:
  6997  0DC2  0008               	return
  6998  0DC3                     __end_of_I2C_MasterStartRx:
  6999                           
  7000                           	psect	text50
  7001  0DAC                     __ptext50:	
  7002 ;; *************** function _I2C_CallbackReturnReset *****************
  7003 ;; Defined at:
  7004 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
  7005 ;; Parameters:    Size  Location     Type
  7006 ;;  funPtr          1    9[COMMON] PTR void 
  7007 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7008 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7009 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7010 ;; Auto vars:     Size  Location     Type
  7011 ;;		None
  7012 ;; Return value:  Size  Location     Type
  7013 ;;                  1    wreg      enum E360
  7014 ;; Registers used:
  7015 ;;		wreg
  7016 ;; Tracked objects:
  7017 ;;		On entry : 0/0
  7018 ;;		On exit  : 0/0
  7019 ;;		Unchanged: 0/0
  7020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7021 ;;      Params:         1       0       0       0       0       0       0       0
  7022 ;;      Locals:         0       0       0       0       0       0       0       0
  7023 ;;      Temps:          0       0       0       0       0       0       0       0
  7024 ;;      Totals:         1       0       0       0       0       0       0       0
  7025 ;;Total ram usage:        1 bytes
  7026 ;; Hardware stack levels used:    1
  7027 ;; This function calls:
  7028 ;;		Nothing
  7029 ;; This function is called by:
  7030 ;;		_I2C_Open
  7031 ;;		_I2C_DO_TX
  7032 ;;		_I2C_DO_RX
  7033 ;;		_I2C_DO_TX_EMPTY
  7034 ;;		_I2C_DO_ADDRESS_NACK
  7035 ;;		_I2C_DO_RX_EMPTY
  7036 ;; This function uses a non-reentrant model
  7037 ;;
  7038                           
  7039                           
  7040                           ;psect for function _I2C_CallbackReturnReset
  7041  0DAC                     _I2C_CallbackReturnReset:
  7042  0DAC                     l2978:	
  7043                           ;incstack = 0
  7044                           ; Regs used in _I2C_CallbackReturnReset: [wreg]
  7045                           
  7046                           
  7047                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
  7048  0DAC  3005               	movlw	5
  7049  0DAD                     l520:
  7050  0DAD  0008               	return
  7051  0DAE                     __end_of_I2C_CallbackReturnReset:
  7052                           
  7053                           	psect	text51
  7054  0DAA                     __ptext51:	
  7055 ;; *************** function _I2C_CallbackReturnStop *****************
  7056 ;; Defined at:
  7057 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
  7058 ;; Parameters:    Size  Location     Type
  7059 ;;  funPtr          1    9[COMMON] PTR void 
  7060 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7061 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7062 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;		None
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      enum E360
  7067 ;; Registers used:
  7068 ;;		wreg
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7074 ;;      Params:         1       0       0       0       0       0       0       0
  7075 ;;      Locals:         0       0       0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0
  7077 ;;      Totals:         1       0       0       0       0       0       0       0
  7078 ;;Total ram usage:        1 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; This function calls:
  7081 ;;		Nothing
  7082 ;; This function is called by:
  7083 ;;		_I2C_Open
  7084 ;;		_I2C_SetCallback
  7085 ;;		_I2C_DO_TX
  7086 ;;		_I2C_DO_RX
  7087 ;;		_I2C_DO_TX_EMPTY
  7088 ;;		_I2C_DO_ADDRESS_NACK
  7089 ;;		_I2C_DO_RX_EMPTY
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function _I2C_CallbackReturnStop
  7095  0DAA                     _I2C_CallbackReturnStop:
  7096  0DAA                     l2974:	
  7097                           ;incstack = 0
  7098                           ; Regs used in _I2C_CallbackReturnStop: [wreg]
  7099                           
  7100                           
  7101                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
  7102  0DAA  3001               	movlw	1
  7103  0DAB                     l517:
  7104  0DAB  0008               	return
  7105  0DAC                     __end_of_I2C_CallbackReturnStop:
  7106                           
  7107                           	psect	text52
  7108  0FB8                     __ptext52:	
  7109 ;; *************** function _rdBlkRegCompleteHandler@i2c_master_example$F177 *****************
  7110 ;; Defined at:
  7111 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
  7112 ;; Parameters:    Size  Location     Type
  7113 ;;  ptr             1    9[COMMON] PTR void 
  7114 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7115 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7116 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  1    wreg      enum E360
  7121 ;; Registers used:
  7122 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7128 ;;      Params:         1       0       0       0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0
  7130 ;;      Temps:          0       0       0       0       0       0       0       0
  7131 ;;      Totals:         1       0       0       0       0       0       0       0
  7132 ;;Total ram usage:        1 bytes
  7133 ;; Hardware stack levels used:    1
  7134 ;; Hardware stack levels required when called:    2
  7135 ;; This function calls:
  7136 ;;		_I2C_SetBuffer
  7137 ;;		_I2C_SetDataCompleteCallback
  7138 ;; This function is called by:
  7139 ;;		_I2C_ReadDataBlock
  7140 ;;		_I2C_DO_TX
  7141 ;;		_I2C_DO_RX
  7142 ;;		_I2C_DO_TX_EMPTY
  7143 ;;		_I2C_DO_ADDRESS_NACK
  7144 ;;		_I2C_DO_RX_EMPTY
  7145 ;; This function uses a non-reentrant model
  7146 ;;
  7147                           
  7148                           
  7149                           ;psect for function _rdBlkRegCompleteHandler@i2c_master_example$F177
  7150  0FB8                     _rdBlkRegCompleteHandler@i2c_master_example$F177:
  7151  0FB8                     l2916:	
  7152                           ;incstack = 0
  7153                           ; Regs used in _rdBlkRegCompleteHandler@i2c_master_example$F177: [wreg+fsr1l+fsr1h+statu
      +                          s,2+status,0+pclath+cstack]
  7154                           
  7155                           
  7156                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
  7157  0FB8  0879               	movf	rdBlkRegCompleteHandler@i2c_master_example$F177@ptr,w
  7158  0FB9  0086               	movwf	6
  7159  0FBA  0187               	clrf	7
  7160  0FBB  3F40               	moviw [0]fsr1
  7161  0FBC  00F0               	movwf	I2C_SetBuffer@bufferSize
  7162  0FBD  3F41               	moviw [1]fsr1
  7163  0FBE  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7164  0FBF  0879               	movf	rdBlkRegCompleteHandler@i2c_master_example$F177@ptr,w
  7165  0FC0  3E02               	addlw	2
  7166  0FC1  0086               	movwf	6
  7167  0FC2  0187               	clrf	7
  7168  0FC3  0801               	movf	1,w
  7169  0FC4  318E  26AF  318F   	fcall	_I2C_SetBuffer
  7170                           
  7171                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7172  0FC7  3000               	movlw	0
  7173  0FC8  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7174  0FC9  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7175  0FCA  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7176  0FCB  318E  266A  318F   	fcall	_I2C_SetDataCompleteCallback
  7177  0FCE                     l2918:
  7178                           
  7179                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
  7180  0FCE  3002               	movlw	2
  7181  0FCF                     l197:
  7182  0FCF  0008               	return
  7183  0FD0                     __end_of_rdBlkRegCompleteHandler@i2c_master_example$F177:
  7184                           
  7185                           	psect	text53
  7186  0005                     __ptext53:	
  7187 ;; *************** function _wr1RegCompleteHandler@i2c_master_example$F160 *****************
  7188 ;; Defined at:
  7189 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  ptr             1    9[COMMON] PTR void 
  7192 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7193 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7194 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;		None
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      enum E360
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7206 ;;      Params:         1       0       0       0       0       0       0       0
  7207 ;;      Locals:         0       0       0       0       0       0       0       0
  7208 ;;      Temps:          0       0       0       0       0       0       0       0
  7209 ;;      Totals:         1       0       0       0       0       0       0       0
  7210 ;;Total ram usage:        1 bytes
  7211 ;; Hardware stack levels used:    1
  7212 ;; Hardware stack levels required when called:    2
  7213 ;; This function calls:
  7214 ;;		_I2C_SetBuffer
  7215 ;;		_I2C_SetDataCompleteCallback
  7216 ;; This function is called by:
  7217 ;;		_I2C_Write1ByteRegister
  7218 ;;		_I2C_DO_TX
  7219 ;;		_I2C_DO_RX
  7220 ;;		_I2C_DO_TX_EMPTY
  7221 ;;		_I2C_DO_ADDRESS_NACK
  7222 ;;		_I2C_DO_RX_EMPTY
  7223 ;; This function uses a non-reentrant model
  7224 ;;
  7225                           
  7226                           
  7227                           ;psect for function _wr1RegCompleteHandler@i2c_master_example$F160
  7228  0005                     _wr1RegCompleteHandler@i2c_master_example$F160:
  7229  0005                     l2900:	
  7230                           ;incstack = 0
  7231                           ; Regs used in _wr1RegCompleteHandler@i2c_master_example$F160: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
  7232                           
  7233                           
  7234                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
  7235  0005  3001               	movlw	1
  7236  0006  00F0               	movwf	I2C_SetBuffer@bufferSize
  7237  0007  3000               	movlw	0
  7238  0008  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7239  0009  0879               	movf	wr1RegCompleteHandler@i2c_master_example$F160@ptr,w
  7240  000A  318E  26AF  3180   	fcall	_I2C_SetBuffer
  7241  000D                     l2902:
  7242                           
  7243                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7244  000D  3000               	movlw	0
  7245  000E  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7246  000F  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7247  0010  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7248  0011  318E  266A  3180   	fcall	_I2C_SetDataCompleteCallback
  7249  0014                     l2904:
  7250                           
  7251                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
  7252  0014  3004               	movlw	4
  7253  0015                     l191:
  7254  0015  0008               	return
  7255  0016                     __end_of_wr1RegCompleteHandler@i2c_master_example$F160:
  7256                           
  7257                           	psect	text54
  7258  0F25                     __ptext54:	
  7259 ;; *************** function _rd2RegCompleteHandler@i2c_master_example$F154 *****************
  7260 ;; Defined at:
  7261 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
  7262 ;; Parameters:    Size  Location     Type
  7263 ;;  ptr             1    9[COMMON] PTR void 
  7264 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7265 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7266 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7267 ;; Auto vars:     Size  Location     Type
  7268 ;;		None
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  1    wreg      enum E360
  7271 ;; Registers used:
  7272 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7278 ;;      Params:         1       0       0       0       0       0       0       0
  7279 ;;      Locals:         0       0       0       0       0       0       0       0
  7280 ;;      Temps:          0       0       0       0       0       0       0       0
  7281 ;;      Totals:         1       0       0       0       0       0       0       0
  7282 ;;Total ram usage:        1 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    2
  7285 ;; This function calls:
  7286 ;;		_I2C_SetBuffer
  7287 ;;		_I2C_SetDataCompleteCallback
  7288 ;; This function is called by:
  7289 ;;		_I2C_Read2ByteRegister
  7290 ;;		_I2C_DO_TX
  7291 ;;		_I2C_DO_RX
  7292 ;;		_I2C_DO_TX_EMPTY
  7293 ;;		_I2C_DO_ADDRESS_NACK
  7294 ;;		_I2C_DO_RX_EMPTY
  7295 ;; This function uses a non-reentrant model
  7296 ;;
  7297                           
  7298                           
  7299                           ;psect for function _rd2RegCompleteHandler@i2c_master_example$F154
  7300  0F25                     _rd2RegCompleteHandler@i2c_master_example$F154:
  7301  0F25                     l2892:	
  7302                           ;incstack = 0
  7303                           ; Regs used in _rd2RegCompleteHandler@i2c_master_example$F154: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
  7304                           
  7305                           
  7306                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
  7307  0F25  3002               	movlw	2
  7308  0F26  00F0               	movwf	I2C_SetBuffer@bufferSize
  7309  0F27  3000               	movlw	0
  7310  0F28  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7311  0F29  0879               	movf	rd2RegCompleteHandler@i2c_master_example$F154@ptr,w
  7312  0F2A  318E  26AF  318F   	fcall	_I2C_SetBuffer
  7313  0F2D                     l2894:
  7314                           
  7315                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7316  0F2D  3000               	movlw	0
  7317  0F2E  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7318  0F2F  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7319  0F30  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7320  0F31  318E  266A  318F   	fcall	_I2C_SetDataCompleteCallback
  7321  0F34                     l2896:
  7322                           
  7323                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
  7324  0F34  3002               	movlw	2
  7325  0F35                     l188:
  7326  0F35  0008               	return
  7327  0F36                     __end_of_rd2RegCompleteHandler@i2c_master_example$F154:
  7328                           
  7329                           	psect	text55
  7330  0F14                     __ptext55:	
  7331 ;; *************** function _rd1RegCompleteHandler@i2c_master_example$F143 *****************
  7332 ;; Defined at:
  7333 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
  7334 ;; Parameters:    Size  Location     Type
  7335 ;;  ptr             1    9[COMMON] PTR void 
  7336 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7337 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7338 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7339 ;; Auto vars:     Size  Location     Type
  7340 ;;		None
  7341 ;; Return value:  Size  Location     Type
  7342 ;;                  1    wreg      enum E360
  7343 ;; Registers used:
  7344 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7345 ;; Tracked objects:
  7346 ;;		On entry : 0/0
  7347 ;;		On exit  : 0/0
  7348 ;;		Unchanged: 0/0
  7349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7350 ;;      Params:         1       0       0       0       0       0       0       0
  7351 ;;      Locals:         0       0       0       0       0       0       0       0
  7352 ;;      Temps:          0       0       0       0       0       0       0       0
  7353 ;;      Totals:         1       0       0       0       0       0       0       0
  7354 ;;Total ram usage:        1 bytes
  7355 ;; Hardware stack levels used:    1
  7356 ;; Hardware stack levels required when called:    2
  7357 ;; This function calls:
  7358 ;;		_I2C_SetBuffer
  7359 ;;		_I2C_SetDataCompleteCallback
  7360 ;; This function is called by:
  7361 ;;		_I2C_Read1ByteRegister
  7362 ;;		_I2C_DO_TX
  7363 ;;		_I2C_DO_RX
  7364 ;;		_I2C_DO_TX_EMPTY
  7365 ;;		_I2C_DO_ADDRESS_NACK
  7366 ;;		_I2C_DO_RX_EMPTY
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           
  7371                           ;psect for function _rd1RegCompleteHandler@i2c_master_example$F143
  7372  0F14                     _rd1RegCompleteHandler@i2c_master_example$F143:
  7373  0F14                     l2884:	
  7374                           ;incstack = 0
  7375                           ; Regs used in _rd1RegCompleteHandler@i2c_master_example$F143: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
  7376                           
  7377                           
  7378                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
  7379  0F14  3001               	movlw	1
  7380  0F15  00F0               	movwf	I2C_SetBuffer@bufferSize
  7381  0F16  3000               	movlw	0
  7382  0F17  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7383  0F18  0879               	movf	rd1RegCompleteHandler@i2c_master_example$F143@ptr,w
  7384  0F19  318E  26AF  318F   	fcall	_I2C_SetBuffer
  7385  0F1C                     l2886:
  7386                           
  7387                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7388  0F1C  3000               	movlw	0
  7389  0F1D  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7390  0F1E  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7391  0F1F  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7392  0F20  318E  266A  318F   	fcall	_I2C_SetDataCompleteCallback
  7393  0F23                     l2888:
  7394                           
  7395                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
  7396  0F23  3002               	movlw	2
  7397  0F24                     l185:
  7398  0F24  0008               	return
  7399  0F25                     __end_of_rd1RegCompleteHandler@i2c_master_example$F143:
  7400                           
  7401                           	psect	text56
  7402  0FA0                     __ptext56:	
  7403 ;; *************** function _rdBlkRegCompleteHandler *****************
  7404 ;; Defined at:
  7405 ;;		line 185 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7406 ;; Parameters:    Size  Location     Type
  7407 ;;  p               1    9[COMMON] PTR void 
  7408 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7409 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7410 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7411 ;; Auto vars:     Size  Location     Type
  7412 ;;		None
  7413 ;; Return value:  Size  Location     Type
  7414 ;;                  1    wreg      enum E360
  7415 ;; Registers used:
  7416 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7417 ;; Tracked objects:
  7418 ;;		On entry : 0/0
  7419 ;;		On exit  : 0/0
  7420 ;;		Unchanged: 0/0
  7421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7422 ;;      Params:         1       0       0       0       0       0       0       0
  7423 ;;      Locals:         0       0       0       0       0       0       0       0
  7424 ;;      Temps:          0       0       0       0       0       0       0       0
  7425 ;;      Totals:         1       0       0       0       0       0       0       0
  7426 ;;Total ram usage:        1 bytes
  7427 ;; Hardware stack levels used:    1
  7428 ;; Hardware stack levels required when called:    2
  7429 ;; This function calls:
  7430 ;;		_I2C_SetBuffer
  7431 ;;		_I2C_SetDataCompleteCallback
  7432 ;; This function is called by:
  7433 ;;		_i2c_readDataBlock
  7434 ;;		_I2C_DO_TX
  7435 ;;		_I2C_DO_RX
  7436 ;;		_I2C_DO_TX_EMPTY
  7437 ;;		_I2C_DO_ADDRESS_NACK
  7438 ;;		_I2C_DO_RX_EMPTY
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           
  7443                           ;psect for function _rdBlkRegCompleteHandler
  7444  0FA0                     _rdBlkRegCompleteHandler:
  7445  0FA0                     l2878:	
  7446                           ;incstack = 0
  7447                           ; Regs used in _rdBlkRegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+csta
      +                          ck]
  7448                           
  7449                           
  7450                           ;mcc_generated_files/drivers/i2c_simple_master.c: 185: static i2c_operations_t rdBlkRegC
      +                          ompleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 186: {;mcc_gene
      +                          rated_files/drivers/i2c_simple_master.c: 187:     I2C_SetBuffer(((buf_t *)p)->data,((buf
      +                          _t*)p)->len);
  7451  0FA0  0879               	movf	rdBlkRegCompleteHandler@p,w
  7452  0FA1  0086               	movwf	6
  7453  0FA2  0187               	clrf	7
  7454  0FA3  3F40               	moviw [0]fsr1
  7455  0FA4  00F0               	movwf	I2C_SetBuffer@bufferSize
  7456  0FA5  3F41               	moviw [1]fsr1
  7457  0FA6  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7458  0FA7  0879               	movf	rdBlkRegCompleteHandler@p,w
  7459  0FA8  3E02               	addlw	2
  7460  0FA9  0086               	movwf	6
  7461  0FAA  0187               	clrf	7
  7462  0FAB  0801               	movf	1,w
  7463  0FAC  318E  26AF  318F   	fcall	_I2C_SetBuffer
  7464                           
  7465                           ;mcc_generated_files/drivers/i2c_simple_master.c: 188:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
  7466  0FAF  3000               	movlw	0
  7467  0FB0  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7468  0FB1  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7469  0FB2  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7470  0FB3  318E  266A  318F   	fcall	_I2C_SetDataCompleteCallback
  7471  0FB6                     l2880:
  7472                           
  7473                           ;mcc_generated_files/drivers/i2c_simple_master.c: 189:     return I2C_RESTART_READ;
  7474  0FB6  3002               	movlw	2
  7475  0FB7                     l77:
  7476  0FB7  0008               	return
  7477  0FB8                     __end_of_rdBlkRegCompleteHandler:
  7478                           
  7479                           	psect	text57
  7480  0F03                     __ptext57:	
  7481 ;; *************** function _wr2RegCompleteHandler *****************
  7482 ;; Defined at:
  7483 ;;		line 151 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  p               1    9[COMMON] PTR void 
  7486 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7487 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7488 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      enum E360
  7493 ;; Registers used:
  7494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7500 ;;      Params:         1       0       0       0       0       0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0
  7503 ;;      Totals:         1       0       0       0       0       0       0       0
  7504 ;;Total ram usage:        1 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; Hardware stack levels required when called:    2
  7507 ;; This function calls:
  7508 ;;		_I2C_SetBuffer
  7509 ;;		_I2C_SetDataCompleteCallback
  7510 ;; This function is called by:
  7511 ;;		_i2c_write2ByteRegister
  7512 ;;		_I2C_DO_TX
  7513 ;;		_I2C_DO_RX
  7514 ;;		_I2C_DO_TX_EMPTY
  7515 ;;		_I2C_DO_ADDRESS_NACK
  7516 ;;		_I2C_DO_RX_EMPTY
  7517 ;; This function uses a non-reentrant model
  7518 ;;
  7519                           
  7520                           
  7521                           ;psect for function _wr2RegCompleteHandler
  7522  0F03                     _wr2RegCompleteHandler:
  7523  0F03                     l2870:	
  7524                           ;incstack = 0
  7525                           ; Regs used in _wr2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7526                           
  7527                           
  7528                           ;mcc_generated_files/drivers/i2c_simple_master.c: 151: static i2c_operations_t wr2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 152: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 153:     I2C_SetBuffer(p,2);
  7529  0F03  3002               	movlw	2
  7530  0F04  00F0               	movwf	I2C_SetBuffer@bufferSize
  7531  0F05  3000               	movlw	0
  7532  0F06  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7533  0F07  0879               	movf	wr2RegCompleteHandler@p,w
  7534  0F08  318E  26AF  318F   	fcall	_I2C_SetBuffer
  7535  0F0B                     l2872:
  7536                           
  7537                           ;mcc_generated_files/drivers/i2c_simple_master.c: 154:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
  7538  0F0B  3000               	movlw	0
  7539  0F0C  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7540  0F0D  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7541  0F0E  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7542  0F0F  318E  266A  318F   	fcall	_I2C_SetDataCompleteCallback
  7543  0F12                     l2874:
  7544                           
  7545                           ;mcc_generated_files/drivers/i2c_simple_master.c: 155:     return I2C_CONTINUE;
  7546  0F12  3004               	movlw	4
  7547  0F13                     l65:
  7548  0F13  0008               	return
  7549  0F14                     __end_of_wr2RegCompleteHandler:
  7550                           
  7551                           	psect	text58
  7552  0EF2                     __ptext58:	
  7553 ;; *************** function _rd2RegCompleteHandler *****************
  7554 ;; Defined at:
  7555 ;;		line 119 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7556 ;; Parameters:    Size  Location     Type
  7557 ;;  p               1    9[COMMON] PTR void 
  7558 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7559 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7560 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7561 ;; Auto vars:     Size  Location     Type
  7562 ;;		None
  7563 ;; Return value:  Size  Location     Type
  7564 ;;                  1    wreg      enum E360
  7565 ;; Registers used:
  7566 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7567 ;; Tracked objects:
  7568 ;;		On entry : 0/0
  7569 ;;		On exit  : 0/0
  7570 ;;		Unchanged: 0/0
  7571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7572 ;;      Params:         1       0       0       0       0       0       0       0
  7573 ;;      Locals:         0       0       0       0       0       0       0       0
  7574 ;;      Temps:          0       0       0       0       0       0       0       0
  7575 ;;      Totals:         1       0       0       0       0       0       0       0
  7576 ;;Total ram usage:        1 bytes
  7577 ;; Hardware stack levels used:    1
  7578 ;; Hardware stack levels required when called:    2
  7579 ;; This function calls:
  7580 ;;		_I2C_SetBuffer
  7581 ;;		_I2C_SetDataCompleteCallback
  7582 ;; This function is called by:
  7583 ;;		_i2c_read2ByteRegister
  7584 ;;		_I2C_DO_TX
  7585 ;;		_I2C_DO_RX
  7586 ;;		_I2C_DO_TX_EMPTY
  7587 ;;		_I2C_DO_ADDRESS_NACK
  7588 ;;		_I2C_DO_RX_EMPTY
  7589 ;; This function uses a non-reentrant model
  7590 ;;
  7591                           
  7592                           
  7593                           ;psect for function _rd2RegCompleteHandler
  7594  0EF2                     _rd2RegCompleteHandler:
  7595  0EF2                     l2862:	
  7596                           ;incstack = 0
  7597                           ; Regs used in _rd2RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7598                           
  7599                           
  7600                           ;mcc_generated_files/drivers/i2c_simple_master.c: 119: static i2c_operations_t rd2RegCom
      +                          pleteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 120: {;mcc_genera
      +                          ted_files/drivers/i2c_simple_master.c: 121:     I2C_SetBuffer(p,2);
  7601  0EF2  3002               	movlw	2
  7602  0EF3  00F0               	movwf	I2C_SetBuffer@bufferSize
  7603  0EF4  3000               	movlw	0
  7604  0EF5  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7605  0EF6  0879               	movf	rd2RegCompleteHandler@p,w
  7606  0EF7  318E  26AF  318E   	fcall	_I2C_SetBuffer
  7607  0EFA                     l2864:
  7608                           
  7609                           ;mcc_generated_files/drivers/i2c_simple_master.c: 122:     I2C_SetDataCompleteCallback((
      +                          (void*)0),((void*)0));
  7610  0EFA  3000               	movlw	0
  7611  0EFB  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7612  0EFC  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7613  0EFD  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7614  0EFE  318E  266A  318E   	fcall	_I2C_SetDataCompleteCallback
  7615  0F01                     l2866:
  7616                           
  7617                           ;mcc_generated_files/drivers/i2c_simple_master.c: 123:     return I2C_RESTART_READ;
  7618  0F01  3002               	movlw	2
  7619  0F02                     l53:
  7620  0F02  0008               	return
  7621  0F03                     __end_of_rd2RegCompleteHandler:
  7622                           
  7623                           	psect	text59
  7624  0EE1                     __ptext59:	
  7625 ;; *************** function _rd1RegCompleteHandler *****************
  7626 ;; Defined at:
  7627 ;;		line 81 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  p               1    9[COMMON] PTR void 
  7630 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7631 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7632 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      enum E360
  7637 ;; Registers used:
  7638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7644 ;;      Params:         1       0       0       0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0
  7647 ;;      Totals:         1       0       0       0       0       0       0       0
  7648 ;;Total ram usage:        1 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; Hardware stack levels required when called:    2
  7651 ;; This function calls:
  7652 ;;		_I2C_SetBuffer
  7653 ;;		_I2C_SetDataCompleteCallback
  7654 ;; This function is called by:
  7655 ;;		_i2c_read1ByteRegister
  7656 ;;		_I2C_DO_TX
  7657 ;;		_I2C_DO_RX
  7658 ;;		_I2C_DO_TX_EMPTY
  7659 ;;		_I2C_DO_ADDRESS_NACK
  7660 ;;		_I2C_DO_RX_EMPTY
  7661 ;; This function uses a non-reentrant model
  7662 ;;
  7663                           
  7664                           
  7665                           ;psect for function _rd1RegCompleteHandler
  7666  0EE1                     _rd1RegCompleteHandler:
  7667  0EE1                     l2854:	
  7668                           ;incstack = 0
  7669                           ; Regs used in _rd1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7670                           
  7671                           
  7672                           ;mcc_generated_files/drivers/i2c_simple_master.c: 81: static i2c_operations_t rd1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 82: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 83:     I2C_SetBuffer(p,1);
  7673  0EE1  3001               	movlw	1
  7674  0EE2  00F0               	movwf	I2C_SetBuffer@bufferSize
  7675  0EE3  3000               	movlw	0
  7676  0EE4  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7677  0EE5  0879               	movf	rd1RegCompleteHandler@p,w
  7678  0EE6  318E  26AF  318E   	fcall	_I2C_SetBuffer
  7679  0EE9                     l2856:
  7680                           
  7681                           ;mcc_generated_files/drivers/i2c_simple_master.c: 84:     I2C_SetDataCompleteCallback(((
      +                          void*)0),((void*)0));
  7682  0EE9  3000               	movlw	0
  7683  0EEA  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7684  0EEB  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7685  0EEC  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7686  0EED  318E  266A  318E   	fcall	_I2C_SetDataCompleteCallback
  7687  0EF0                     l2858:
  7688                           
  7689                           ;mcc_generated_files/drivers/i2c_simple_master.c: 85:     return I2C_RESTART_READ;
  7690  0EF0  3002               	movlw	2
  7691  0EF1                     l38:
  7692  0EF1  0008               	return
  7693  0EF2                     __end_of_rd1RegCompleteHandler:
  7694                           
  7695                           	psect	text60
  7696  0ED0                     __ptext60:	
  7697 ;; *************** function _wr1RegCompleteHandler *****************
  7698 ;; Defined at:
  7699 ;;		line 34 in file "mcc_generated_files/drivers/i2c_simple_master.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  p               1    9[COMMON] PTR void 
  7702 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7703 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7704 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7705 ;; Auto vars:     Size  Location     Type
  7706 ;;		None
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      enum E360
  7709 ;; Registers used:
  7710 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7716 ;;      Params:         1       0       0       0       0       0       0       0
  7717 ;;      Locals:         0       0       0       0       0       0       0       0
  7718 ;;      Temps:          0       0       0       0       0       0       0       0
  7719 ;;      Totals:         1       0       0       0       0       0       0       0
  7720 ;;Total ram usage:        1 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:    2
  7723 ;; This function calls:
  7724 ;;		_I2C_SetBuffer
  7725 ;;		_I2C_SetDataCompleteCallback
  7726 ;; This function is called by:
  7727 ;;		_i2c_write1ByteRegister
  7728 ;;		_I2C_DO_TX
  7729 ;;		_I2C_DO_RX
  7730 ;;		_I2C_DO_TX_EMPTY
  7731 ;;		_I2C_DO_ADDRESS_NACK
  7732 ;;		_I2C_DO_RX_EMPTY
  7733 ;; This function uses a non-reentrant model
  7734 ;;
  7735                           
  7736                           
  7737                           ;psect for function _wr1RegCompleteHandler
  7738  0ED0                     _wr1RegCompleteHandler:
  7739  0ED0                     l2846:	
  7740                           ;incstack = 0
  7741                           ; Regs used in _wr1RegCompleteHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  7742                           
  7743                           
  7744                           ;mcc_generated_files/drivers/i2c_simple_master.c: 34: static i2c_operations_t wr1RegComp
      +                          leteHandler(void *p);mcc_generated_files/drivers/i2c_simple_master.c: 35: {;mcc_generate
      +                          d_files/drivers/i2c_simple_master.c: 36:     I2C_SetBuffer(p,1);
  7745  0ED0  3001               	movlw	1
  7746  0ED1  00F0               	movwf	I2C_SetBuffer@bufferSize
  7747  0ED2  3000               	movlw	0
  7748  0ED3  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7749  0ED4  0879               	movf	wr1RegCompleteHandler@p,w
  7750  0ED5  318E  26AF  318E   	fcall	_I2C_SetBuffer
  7751  0ED8                     l2848:
  7752                           
  7753                           ;mcc_generated_files/drivers/i2c_simple_master.c: 37:     I2C_SetDataCompleteCallback(((
      +                          void*)0),((void*)0));
  7754  0ED8  3000               	movlw	0
  7755  0ED9  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7756  0EDA  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7757  0EDB  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7758  0EDC  318E  266A  318E   	fcall	_I2C_SetDataCompleteCallback
  7759  0EDF                     l2850:
  7760                           
  7761                           ;mcc_generated_files/drivers/i2c_simple_master.c: 38:     return I2C_CONTINUE;
  7762  0EDF  3004               	movlw	4
  7763  0EE0                     l17:
  7764  0EE0  0008               	return
  7765  0EE1                     __end_of_wr1RegCompleteHandler:
  7766                           
  7767                           	psect	text61
  7768  0EBF                     __ptext61:	
  7769 ;; *************** function _wr2RegCompleteHandler@i2c_master_example$F166 *****************
  7770 ;; Defined at:
  7771 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
  7772 ;; Parameters:    Size  Location     Type
  7773 ;;  ptr             1    9[COMMON] PTR void 
  7774 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7775 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7776 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7777 ;; Auto vars:     Size  Location     Type
  7778 ;;		None
  7779 ;; Return value:  Size  Location     Type
  7780 ;;                  1    wreg      enum E360
  7781 ;; Registers used:
  7782 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7783 ;; Tracked objects:
  7784 ;;		On entry : 0/0
  7785 ;;		On exit  : 0/0
  7786 ;;		Unchanged: 0/0
  7787 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7788 ;;      Params:         1       0       0       0       0       0       0       0
  7789 ;;      Locals:         0       0       0       0       0       0       0       0
  7790 ;;      Temps:          0       0       0       0       0       0       0       0
  7791 ;;      Totals:         1       0       0       0       0       0       0       0
  7792 ;;Total ram usage:        1 bytes
  7793 ;; Hardware stack levels used:    1
  7794 ;; Hardware stack levels required when called:    2
  7795 ;; This function calls:
  7796 ;;		_I2C_SetBuffer
  7797 ;;		_I2C_SetDataCompleteCallback
  7798 ;; This function is called by:
  7799 ;;		_I2C_Write2ByteRegister
  7800 ;;		_I2C_DO_TX
  7801 ;;		_I2C_DO_RX
  7802 ;;		_I2C_DO_TX_EMPTY
  7803 ;;		_I2C_DO_ADDRESS_NACK
  7804 ;;		_I2C_DO_RX_EMPTY
  7805 ;; This function uses a non-reentrant model
  7806 ;;
  7807                           
  7808                           
  7809                           ;psect for function _wr2RegCompleteHandler@i2c_master_example$F166
  7810  0EBF                     _wr2RegCompleteHandler@i2c_master_example$F166:
  7811  0EBF                     l2908:	
  7812                           ;incstack = 0
  7813                           ; Regs used in _wr2RegCompleteHandler@i2c_master_example$F166: [wreg+fsr1l+fsr1h+status,
      +                          2+status,0+pclath+cstack]
  7814                           
  7815                           
  7816                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
  7817  0EBF  3002               	movlw	2
  7818  0EC0  00F0               	movwf	I2C_SetBuffer@bufferSize
  7819  0EC1  3000               	movlw	0
  7820  0EC2  00F1               	movwf	I2C_SetBuffer@bufferSize+1
  7821  0EC3  0879               	movf	wr2RegCompleteHandler@i2c_master_example$F166@ptr,w
  7822  0EC4  318E  26AF  318E   	fcall	_I2C_SetBuffer
  7823  0EC7                     l2910:
  7824                           
  7825                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
  7826  0EC7  3000               	movlw	0
  7827  0EC8  00F5               	movwf	I2C_SetDataCompleteCallback@cb
  7828  0EC9  00F6               	movwf	I2C_SetDataCompleteCallback@cb+1
  7829  0ECA  01F7               	clrf	I2C_SetDataCompleteCallback@ptr
  7830  0ECB  318E  266A  318E   	fcall	_I2C_SetDataCompleteCallback
  7831  0ECE                     l2912:
  7832                           
  7833                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
  7834  0ECE  3004               	movlw	4
  7835  0ECF                     l194:
  7836  0ECF  0008               	return
  7837  0ED0                     __end_of_wr2RegCompleteHandler@i2c_master_example$F166:
  7838                           
  7839                           	psect	text62
  7840  0E6A                     __ptext62:	
  7841 ;; *************** function _I2C_SetDataCompleteCallback *****************
  7842 ;; Defined at:
  7843 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
  7844 ;; Parameters:    Size  Location     Type
  7845 ;;  cb              2    5[COMMON] PTR FTN(PTR void ,)enum 
  7846 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c_master_example$F177(1), wr2RegCompleteHandler@i2c_master_examp
      +le$F166(1), wr1RegCompleteHandler@i2c_master_example$F160(1), 
  7847 ;;		 -> rd2RegCompleteHandler@i2c_master_example$F154(1), rd1RegCompleteHandler@i2c_master_example$F143(1), rdBlkRegComp
      +leteHandler(1), wr2RegCompleteHandler(1), 
  7848 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7849 ;;  ptr             1    7[COMMON] PTR void 
  7850 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7851 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7852 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7853 ;; Auto vars:     Size  Location     Type
  7854 ;;		None
  7855 ;; Return value:  Size  Location     Type
  7856 ;;                  1    wreg      void 
  7857 ;; Registers used:
  7858 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7859 ;; Tracked objects:
  7860 ;;		On entry : 0/0
  7861 ;;		On exit  : 0/0
  7862 ;;		Unchanged: 0/0
  7863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7864 ;;      Params:         3       0       0       0       0       0       0       0
  7865 ;;      Locals:         0       0       0       0       0       0       0       0
  7866 ;;      Temps:          1       0       0       0       0       0       0       0
  7867 ;;      Totals:         4       0       0       0       0       0       0       0
  7868 ;;Total ram usage:        4 bytes
  7869 ;; Hardware stack levels used:    1
  7870 ;; Hardware stack levels required when called:    1
  7871 ;; This function calls:
  7872 ;;		_I2C_SetCallback
  7873 ;; This function is called by:
  7874 ;;		_wr1RegCompleteHandler
  7875 ;;		_rd1RegCompleteHandler
  7876 ;;		_rd2RegCompleteHandler
  7877 ;;		_wr2RegCompleteHandler
  7878 ;;		_rdBlkRegCompleteHandler
  7879 ;;		_I2C_Read1ByteRegister
  7880 ;;		_I2C_Write1ByteRegister
  7881 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  7882 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  7883 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  7884 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  7885 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  7886 ;;		_i2c_write1ByteRegister
  7887 ;;		_i2c_read1ByteRegister
  7888 ;;		_i2c_read2ByteRegister
  7889 ;;		_i2c_write2ByteRegister
  7890 ;;		_i2c_readDataBlock
  7891 ;;		_I2C_Read2ByteRegister
  7892 ;;		_I2C_Write2ByteRegister
  7893 ;;		_I2C_ReadDataBlock
  7894 ;; This function uses a non-reentrant model
  7895 ;;
  7896                           
  7897                           
  7898                           ;psect for function _I2C_SetDataCompleteCallback
  7899  0E6A                     _I2C_SetDataCompleteCallback:
  7900  0E6A                     l2838:	
  7901                           ;incstack = 0
  7902                           ; Regs used in _I2C_SetDataCompleteCallback: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+
      +                          cstack]
  7903                           
  7904                           
  7905                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
  7906  0E6A  0876               	movf	I2C_SetDataCompleteCallback@cb+1,w
  7907  0E6B  00F1               	movwf	I2C_SetCallback@cb+1
  7908  0E6C  0875               	movf	I2C_SetDataCompleteCallback@cb,w
  7909  0E6D  00F0               	movwf	I2C_SetCallback@cb
  7910  0E6E  0877               	movf	I2C_SetDataCompleteCallback@ptr,w
  7911  0E6F  00F8               	movwf	??_I2C_SetDataCompleteCallback
  7912  0E70  0878               	movf	??_I2C_SetDataCompleteCallback,w
  7913  0E71  00F2               	movwf	I2C_SetCallback@ptr
  7914  0E72  3000               	movlw	0
  7915  0E73  3181  2109  318E   	fcall	_I2C_SetCallback
  7916  0E76                     l391:
  7917  0E76  0008               	return
  7918  0E77                     __end_of_I2C_SetDataCompleteCallback:
  7919                           
  7920                           	psect	text63
  7921  0109                     __ptext63:	
  7922 ;; *************** function _I2C_SetCallback *****************
  7923 ;; Defined at:
  7924 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
  7925 ;; Parameters:    Size  Location     Type
  7926 ;;  idx             1    wreg     enum E3894
  7927 ;;  cb              2    0[COMMON] PTR FTN(PTR void ,)enum 
  7928 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler@i2c_master_example$F177(1), wr2RegCompleteHandler@i2c_master_examp
      +le$F166(1), wr1RegCompleteHandler@i2c_master_example$F160(1), 
  7929 ;;		 -> rd2RegCompleteHandler@i2c_master_example$F154(1), rd1RegCompleteHandler@i2c_master_example$F143(1), rdBlkRegComp
      +leteHandler(1), wr2RegCompleteHandler(1), 
  7930 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), wr1RegCompleteHandler(1), 
  7931 ;;  ptr             1    2[COMMON] PTR void 
  7932 ;;		 -> I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
  7933 ;;		 -> I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@d(3), i2c_write2ByteRegister@data(2), i2c_read2ByteRegis
      +ter@result(2), 
  7934 ;;		 -> i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@data(1), NULL(0), 
  7935 ;; Auto vars:     Size  Location     Type
  7936 ;;  idx             1    4[COMMON] enum E3894
  7937 ;; Return value:  Size  Location     Type
  7938 ;;                  1    wreg      void 
  7939 ;; Registers used:
  7940 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  7941 ;; Tracked objects:
  7942 ;;		On entry : 0/0
  7943 ;;		On exit  : 0/0
  7944 ;;		Unchanged: 0/0
  7945 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  7946 ;;      Params:         3       0       0       0       0       0       0       0
  7947 ;;      Locals:         1       0       0       0       0       0       0       0
  7948 ;;      Temps:          1       0       0       0       0       0       0       0
  7949 ;;      Totals:         5       0       0       0       0       0       0       0
  7950 ;;Total ram usage:        5 bytes
  7951 ;; Hardware stack levels used:    1
  7952 ;; This function calls:
  7953 ;;		Nothing
  7954 ;; This function is called by:
  7955 ;;		_I2C_SetDataCompleteCallback
  7956 ;;		_I2C_SetAddressNackCallback
  7957 ;;		_I2C_SetWriteCollisionCallback
  7958 ;;		_I2C_SetDataNackCallback
  7959 ;;		_I2C_SetTimeoutCallback
  7960 ;; This function uses a non-reentrant model
  7961 ;;
  7962                           
  7963                           
  7964                           ;psect for function _I2C_SetCallback
  7965  0109                     _I2C_SetCallback:
  7966                           
  7967                           ;incstack = 0
  7968                           ; Regs used in _I2C_SetCallback: [wreg+fsr1l+fsr1h+status,2+status,0]
  7969                           ;I2C_SetCallback@idx stored from wreg
  7970  0109  00F4               	movwf	I2C_SetCallback@idx
  7971  010A                     l2826:
  7972                           
  7973                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
  7974  010A  0870               	movf	I2C_SetCallback@cb,w
  7975  010B  0471               	iorwf	I2C_SetCallback@cb+1,w
  7976  010C  1903               	btfsc	3,2
  7977  010D  290F               	goto	u1321
  7978  010E  2910               	goto	u1320
  7979  010F                     u1321:
  7980  010F  2921               	goto	l2830
  7981  0110                     u1320:
  7982  0110                     l2828:
  7983                           
  7984                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
  7985  0110  3574               	lslf	I2C_SetCallback@idx,w
  7986  0111  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  7987  0112  0086               	movwf	6
  7988  0113  0187               	clrf	7
  7989  0114  0870               	movf	I2C_SetCallback@cb,w
  7990  0115  3FC0               	movwi [0]fsr1
  7991  0116  0871               	movf	I2C_SetCallback@cb+1,w
  7992  0117  3FC1               	movwi [1]fsr1
  7993                           
  7994                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
  7995  0118  0872               	movf	I2C_SetCallback@ptr,w
  7996  0119  00F3               	movwf	??_I2C_SetCallback
  7997  011A  0874               	movf	I2C_SetCallback@idx,w
  7998  011B  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  7999  011C  0086               	movwf	6
  8000  011D  0187               	clrf	7
  8001  011E  0873               	movf	??_I2C_SetCallback,w
  8002  011F  0081               	movwf	1
  8003                           
  8004                           ;mcc_generated_files/i2c_master.c: 304:     }
  8005  0120  292E               	goto	l408
  8006  0121                     l2830:
  8007                           
  8008                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
  8009  0121  3574               	lslf	I2C_SetCallback@idx,w
  8010  0122  3E20               	addlw	(low (_I2C_Status| 0))& (0+255)
  8011  0123  0086               	movwf	6
  8012  0124  0187               	clrf	7
  8013  0125  30AA               	movlw	low _I2C_CallbackReturnStop
  8014  0126  3FC0               	movwi [0]fsr1
  8015  0127  300D               	movlw	high _I2C_CallbackReturnStop
  8016  0128  3FC1               	movwi [1]fsr1
  8017                           
  8018                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
  8019  0129  0874               	movf	I2C_SetCallback@idx,w
  8020  012A  3E2C               	addlw	(low ((_I2C_Status| 0+12)))& (0+255)
  8021  012B  0086               	movwf	6
  8022  012C  0187               	clrf	7
  8023  012D  0181               	clrf	1
  8024  012E                     l408:
  8025  012E  0008               	return
  8026  012F                     __end_of_I2C_SetCallback:
  8027                           
  8028                           	psect	text64
  8029  0EAF                     __ptext64:	
  8030 ;; *************** function _I2C_SetBuffer *****************
  8031 ;; Defined at:
  8032 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  buffer          1    wreg     PTR void 
  8035 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8036 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8037 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@
      +d(3), 
  8038 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  8039 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  8040 ;;		 -> NULL(0), 
  8041 ;;  bufferSize      2    0[COMMON] unsigned int 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  buffer          1    3[COMMON] PTR void 
  8044 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(3), I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegiste
      +r@data(2), 
  8045 ;;		 -> I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegist
      +er@returnValue(2), 
  8046 ;;		 -> I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), i2c_readDataBlock@reg(1), i2c_readDataBlock@
      +d(3), 
  8047 ;;		 -> i2c_write2ByteRegister@reg(1), i2c_write2ByteRegister@data(2), i2c_read2ByteRegister@reg(1), i2c_read2ByteRegist
      +er@result(2), 
  8048 ;;		 -> i2c_read1ByteRegister@reg(1), i2c_read1ByteRegister@d2(1), i2c_write1ByteRegister@reg(1), i2c_write1ByteRegister
      +@data(1), 
  8049 ;;		 -> NULL(0), 
  8050 ;; Return value:  Size  Location     Type
  8051 ;;                  1    wreg      void 
  8052 ;; Registers used:
  8053 ;;		wreg
  8054 ;; Tracked objects:
  8055 ;;		On entry : 0/0
  8056 ;;		On exit  : 0/0
  8057 ;;		Unchanged: 0/0
  8058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8059 ;;      Params:         2       0       0       0       0       0       0       0
  8060 ;;      Locals:         1       0       0       0       0       0       0       0
  8061 ;;      Temps:          1       0       0       0       0       0       0       0
  8062 ;;      Totals:         4       0       0       0       0       0       0       0
  8063 ;;Total ram usage:        4 bytes
  8064 ;; Hardware stack levels used:    1
  8065 ;; This function calls:
  8066 ;;		Nothing
  8067 ;; This function is called by:
  8068 ;;		_wr1RegCompleteHandler
  8069 ;;		_rd1RegCompleteHandler
  8070 ;;		_rd2RegCompleteHandler
  8071 ;;		_wr2RegCompleteHandler
  8072 ;;		_rdBlkRegCompleteHandler
  8073 ;;		_I2C_Read1ByteRegister
  8074 ;;		_I2C_Write1ByteRegister
  8075 ;;		_rd1RegCompleteHandler@i2c_master_example$F143
  8076 ;;		_rd2RegCompleteHandler@i2c_master_example$F154
  8077 ;;		_wr1RegCompleteHandler@i2c_master_example$F160
  8078 ;;		_wr2RegCompleteHandler@i2c_master_example$F166
  8079 ;;		_rdBlkRegCompleteHandler@i2c_master_example$F177
  8080 ;;		_i2c_write1ByteRegister
  8081 ;;		_i2c_writeNBytes
  8082 ;;		_i2c_read1ByteRegister
  8083 ;;		_i2c_read2ByteRegister
  8084 ;;		_i2c_write2ByteRegister
  8085 ;;		_i2c_readDataBlock
  8086 ;;		_i2c_readNBytes
  8087 ;;		_I2C_Read2ByteRegister
  8088 ;;		_I2C_Write2ByteRegister
  8089 ;;		_I2C_WriteNBytes
  8090 ;;		_I2C_ReadNBytes
  8091 ;;		_I2C_ReadDataBlock
  8092 ;; This function uses a non-reentrant model
  8093 ;;
  8094                           
  8095                           
  8096                           ;psect for function _I2C_SetBuffer
  8097  0EAF                     _I2C_SetBuffer:
  8098                           
  8099                           ;incstack = 0
  8100                           ; Regs used in _I2C_SetBuffer: [wreg]
  8101                           ;I2C_SetBuffer@buffer stored from wreg
  8102  0EAF  00F3               	movwf	I2C_SetBuffer@buffer
  8103  0EB0                     l2832:
  8104                           
  8105                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
  8106  0EB0  0020               	movlb	0	; select bank0
  8107  0EB1  1DBC               	btfss	_I2C_Status+28,3
  8108  0EB2  2EB4               	goto	u1331
  8109  0EB3  2EB5               	goto	u1330
  8110  0EB4                     u1331:
  8111  0EB4  2EBE               	goto	l388
  8112  0EB5                     u1330:
  8113  0EB5                     l2834:
  8114                           
  8115                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
  8116  0EB5  0873               	movf	I2C_SetBuffer@buffer,w
  8117  0EB6  00F2               	movwf	??_I2C_SetBuffer
  8118  0EB7  0872               	movf	??_I2C_SetBuffer,w
  8119  0EB8  00B7               	movwf	low ((_I2C_Status| 0+23))
  8120                           
  8121                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
  8122  0EB9  0871               	movf	I2C_SetBuffer@bufferSize+1,w
  8123  0EBA  00B9               	movwf	_I2C_Status+25
  8124  0EBB  0870               	movf	I2C_SetBuffer@bufferSize,w
  8125  0EBC  00B8               	movwf	_I2C_Status+24
  8126  0EBD                     l2836:
  8127                           
  8128                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
  8129  0EBD  11BC               	bcf	_I2C_Status+28,3
  8130  0EBE                     l388:
  8131  0EBE  0008               	return
  8132  0EBF                     __end_of_I2C_SetBuffer:
  8133                           
  8134                           	psect	text65
  8135  0DBD                     __ptext65:	
  8136 ;; *************** function _I2C_MasterStop *****************
  8137 ;; Defined at:
  8138 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
  8139 ;; Parameters:    Size  Location     Type
  8140 ;;		None
  8141 ;; Auto vars:     Size  Location     Type
  8142 ;;		None
  8143 ;; Return value:  Size  Location     Type
  8144 ;;                  1    wreg      void 
  8145 ;; Registers used:
  8146 ;;		None
  8147 ;; Tracked objects:
  8148 ;;		On entry : 0/0
  8149 ;;		On exit  : 0/0
  8150 ;;		Unchanged: 0/0
  8151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8152 ;;      Params:         0       0       0       0       0       0       0       0
  8153 ;;      Locals:         0       0       0       0       0       0       0       0
  8154 ;;      Temps:          0       0       0       0       0       0       0       0
  8155 ;;      Totals:         0       0       0       0       0       0       0       0
  8156 ;;Total ram usage:        0 bytes
  8157 ;; Hardware stack levels used:    1
  8158 ;; This function calls:
  8159 ;;		Nothing
  8160 ;; This function is called by:
  8161 ;;		_I2C_DO_SEND_STOP
  8162 ;; This function uses a non-reentrant model
  8163 ;;
  8164                           
  8165                           
  8166                           ;psect for function _I2C_MasterStop
  8167  0DBD                     _I2C_MasterStop:
  8168  0DBD                     l2842:	
  8169                           ;incstack = 0
  8170                           ; Regs used in _I2C_MasterStop: []
  8171                           
  8172                           
  8173                           ;mcc_generated_files/i2c_master.c: 595:     SSP1CON2bits.PEN = 1;
  8174  0DBD  0024               	movlb	4	; select bank4
  8175  0DBE  1516               	bsf	22,2	;volatile
  8176  0DBF                     l554:
  8177  0DBF  0008               	return
  8178  0DC0                     __end_of_I2C_MasterStop:
  8179                           
  8180                           	psect	text66
  8181  0DBA                     __ptext66:	
  8182 ;; *************** function _I2C_MasterEnableRestart *****************
  8183 ;; Defined at:
  8184 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
  8185 ;; Parameters:    Size  Location     Type
  8186 ;;		None
  8187 ;; Auto vars:     Size  Location     Type
  8188 ;;		None
  8189 ;; Return value:  Size  Location     Type
  8190 ;;                  1    wreg      void 
  8191 ;; Registers used:
  8192 ;;		None
  8193 ;; Tracked objects:
  8194 ;;		On entry : 0/0
  8195 ;;		On exit  : 0/0
  8196 ;;		Unchanged: 0/0
  8197 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8198 ;;      Params:         0       0       0       0       0       0       0       0
  8199 ;;      Locals:         0       0       0       0       0       0       0       0
  8200 ;;      Temps:          0       0       0       0       0       0       0       0
  8201 ;;      Totals:         0       0       0       0       0       0       0       0
  8202 ;;Total ram usage:        0 bytes
  8203 ;; Hardware stack levels used:    1
  8204 ;; This function calls:
  8205 ;;		Nothing
  8206 ;; This function is called by:
  8207 ;;		_I2C_DO_SEND_RESTART_READ
  8208 ;;		_I2C_DO_SEND_RESTART_WRITE
  8209 ;;		_I2C_DO_SEND_RESTART
  8210 ;;		_I2C_DO_RX_EMPTY
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214                           
  8215                           ;psect for function _I2C_MasterEnableRestart
  8216  0DBA                     _I2C_MasterEnableRestart:
  8217  0DBA                     l2840:	
  8218                           ;incstack = 0
  8219                           ; Regs used in _I2C_MasterEnableRestart: []
  8220                           
  8221                           
  8222                           ;mcc_generated_files/i2c_master.c: 575:     SSP1CON2bits.RSEN = 1;
  8223  0DBA  0024               	movlb	4	; select bank4
  8224  0DBB  1496               	bsf	22,1	;volatile
  8225  0DBC                     l542:
  8226  0DBC  0008               	return
  8227  0DBD                     __end_of_I2C_MasterEnableRestart:
  8228                           
  8229                           	psect	text67
  8230  0DB7                     __ptext67:	
  8231 ;; *************** function _I2C_MasterStart *****************
  8232 ;; Defined at:
  8233 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
  8234 ;; Parameters:    Size  Location     Type
  8235 ;;		None
  8236 ;; Auto vars:     Size  Location     Type
  8237 ;;		None
  8238 ;; Return value:  Size  Location     Type
  8239 ;;                  1    wreg      void 
  8240 ;; Registers used:
  8241 ;;		None
  8242 ;; Tracked objects:
  8243 ;;		On entry : 0/0
  8244 ;;		On exit  : 0/0
  8245 ;;		Unchanged: 0/0
  8246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8247 ;;      Params:         0       0       0       0       0       0       0       0
  8248 ;;      Locals:         0       0       0       0       0       0       0       0
  8249 ;;      Temps:          0       0       0       0       0       0       0       0
  8250 ;;      Totals:         0       0       0       0       0       0       0       0
  8251 ;;Total ram usage:        0 bytes
  8252 ;; Hardware stack levels used:    1
  8253 ;; This function calls:
  8254 ;;		Nothing
  8255 ;; This function is called by:
  8256 ;;		_I2C_MasterOperation
  8257 ;; This function uses a non-reentrant model
  8258 ;;
  8259                           
  8260                           
  8261                           ;psect for function _I2C_MasterStart
  8262  0DB7                     _I2C_MasterStart:
  8263  0DB7                     l3150:	
  8264                           ;incstack = 0
  8265                           ; Regs used in _I2C_MasterStart: []
  8266                           
  8267                           
  8268                           ;mcc_generated_files/i2c_master.c: 590:     SSP1CON2bits.SEN = 1;
  8269  0DB7  0024               	movlb	4	; select bank4
  8270  0DB8  1416               	bsf	22,0	;volatile
  8271  0DB9                     l551:
  8272  0DB9  0008               	return
  8273  0DBA                     __end_of_I2C_MasterStart:
  8274                           
  8275                           	psect	text68
  8276  0064                     __ptext68:	
  8277 ;; *************** function _I2C_Close *****************
  8278 ;; Defined at:
  8279 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;		None
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  returnValue     1    1[COMMON] enum E355
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1    wreg      enum E355
  8286 ;; Registers used:
  8287 ;;		wreg, status,2, status,0, pclath, cstack
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8293 ;;      Params:         0       0       0       0       0       0       0       0
  8294 ;;      Locals:         1       0       0       0       0       0       0       0
  8295 ;;      Temps:          1       0       0       0       0       0       0       0
  8296 ;;      Totals:         2       0       0       0       0       0       0       0
  8297 ;;Total ram usage:        2 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:    1
  8300 ;; This function calls:
  8301 ;;		_I2C_MasterClearIrq
  8302 ;;		_I2C_MasterClose
  8303 ;;		_I2C_MasterDisableIrq
  8304 ;; This function is called by:
  8305 ;;		_I2C_Read1ByteRegister
  8306 ;;		_I2C_Write1ByteRegister
  8307 ;;		_i2c_write1ByteRegister
  8308 ;;		_i2c_writeNBytes
  8309 ;;		_i2c_read1ByteRegister
  8310 ;;		_i2c_read2ByteRegister
  8311 ;;		_i2c_write2ByteRegister
  8312 ;;		_i2c_readDataBlock
  8313 ;;		_i2c_readNBytes
  8314 ;;		_I2C_Read2ByteRegister
  8315 ;;		_I2C_Write2ByteRegister
  8316 ;;		_I2C_WriteNBytes
  8317 ;;		_I2C_ReadNBytes
  8318 ;;		_I2C_ReadDataBlock
  8319 ;; This function uses a non-reentrant model
  8320 ;;
  8321                           
  8322                           
  8323                           ;psect for function _I2C_Close
  8324  0064                     _I2C_Close:
  8325  0064                     l3234:	
  8326                           ;incstack = 0
  8327                           ; Regs used in _I2C_Close: [wreg+status,2+status,0+pclath+cstack]
  8328                           
  8329                           
  8330                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
  8331  0064  01F1               	clrf	I2C_Close@returnValue
  8332  0065  0AF1               	incf	I2C_Close@returnValue,f
  8333                           
  8334                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
  8335  0066  0020               	movlb	0	; select bank0
  8336  0067  18BC               	btfsc	_I2C_Status+28,1
  8337  0068  286A               	goto	u1451
  8338  0069  286B               	goto	u1450
  8339  006A                     u1451:
  8340  006A  287E               	goto	l3248
  8341  006B                     u1450:
  8342  006B                     l3236:
  8343                           
  8344                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
  8345  006B  113C               	bcf	_I2C_Status+28,2
  8346  006C                     l3238:
  8347                           
  8348                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
  8349  006C  30FF               	movlw	255
  8350  006D  00F0               	movwf	??_I2C_Close
  8351  006E  0870               	movf	??_I2C_Close,w
  8352  006F  00B6               	movwf	_I2C_Status+22
  8353  0070                     l3240:
  8354                           
  8355                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
  8356  0070  318D  25AE  3180   	fcall	_I2C_MasterClearIrq
  8357  0073                     l3242:
  8358                           
  8359                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
  8360  0073  318D  25B4  3180   	fcall	_I2C_MasterDisableIrq
  8361  0076                     l3244:
  8362                           
  8363                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
  8364  0076  318D  25B1  3180   	fcall	_I2C_MasterClose
  8365  0079                     l3246:
  8366                           
  8367                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
  8368  0079  0020               	movlb	0	; select bank0
  8369  007A  083B               	movf	_I2C_Status+27,w
  8370  007B  00F0               	movwf	??_I2C_Close
  8371  007C  0870               	movf	??_I2C_Close,w
  8372  007D  00F1               	movwf	I2C_Close@returnValue
  8373  007E                     l3248:
  8374                           
  8375                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
  8376  007E  0871               	movf	I2C_Close@returnValue,w
  8377  007F                     l369:
  8378  007F  0008               	return
  8379  0080                     __end_of_I2C_Close:
  8380                           
  8381                           	psect	text69
  8382  0DB4                     __ptext69:	
  8383 ;; *************** function _I2C_MasterDisableIrq *****************
  8384 ;; Defined at:
  8385 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;		None
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;		None
  8390 ;; Return value:  Size  Location     Type
  8391 ;;                  1    wreg      void 
  8392 ;; Registers used:
  8393 ;;		None
  8394 ;; Tracked objects:
  8395 ;;		On entry : 0/0
  8396 ;;		On exit  : 0/0
  8397 ;;		Unchanged: 0/0
  8398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8399 ;;      Params:         0       0       0       0       0       0       0       0
  8400 ;;      Locals:         0       0       0       0       0       0       0       0
  8401 ;;      Temps:          0       0       0       0       0       0       0       0
  8402 ;;      Totals:         0       0       0       0       0       0       0       0
  8403 ;;Total ram usage:        0 bytes
  8404 ;; Hardware stack levels used:    1
  8405 ;; This function calls:
  8406 ;;		Nothing
  8407 ;; This function is called by:
  8408 ;;		_I2C_Close
  8409 ;;		_I2C_SetTimeOut
  8410 ;; This function uses a non-reentrant model
  8411 ;;
  8412                           
  8413                           
  8414                           ;psect for function _I2C_MasterDisableIrq
  8415  0DB4                     _I2C_MasterDisableIrq:
  8416  0DB4                     l3172:	
  8417                           ;incstack = 0
  8418                           ; Regs used in _I2C_MasterDisableIrq: []
  8419                           
  8420                           
  8421                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSP1IE = 0;
  8422  0DB4  0021               	movlb	1	; select bank1
  8423  0DB5  1191               	bcf	17,3	;volatile
  8424  0DB6                     l578:
  8425  0DB6  0008               	return
  8426  0DB7                     __end_of_I2C_MasterDisableIrq:
  8427                           
  8428                           	psect	text70
  8429  0DB1                     __ptext70:	
  8430 ;; *************** function _I2C_MasterClose *****************
  8431 ;; Defined at:
  8432 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
  8433 ;; Parameters:    Size  Location     Type
  8434 ;;		None
  8435 ;; Auto vars:     Size  Location     Type
  8436 ;;		None
  8437 ;; Return value:  Size  Location     Type
  8438 ;;                  1    wreg      void 
  8439 ;; Registers used:
  8440 ;;		None
  8441 ;; Tracked objects:
  8442 ;;		On entry : 0/0
  8443 ;;		On exit  : 0/0
  8444 ;;		Unchanged: 0/0
  8445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8446 ;;      Params:         0       0       0       0       0       0       0       0
  8447 ;;      Locals:         0       0       0       0       0       0       0       0
  8448 ;;      Temps:          0       0       0       0       0       0       0       0
  8449 ;;      Totals:         0       0       0       0       0       0       0       0
  8450 ;;Total ram usage:        0 bytes
  8451 ;; Hardware stack levels used:    1
  8452 ;; This function calls:
  8453 ;;		Nothing
  8454 ;; This function is called by:
  8455 ;;		_I2C_Close
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           
  8460                           ;psect for function _I2C_MasterClose
  8461  0DB1                     _I2C_MasterClose:
  8462  0DB1                     l3174:	
  8463                           ;incstack = 0
  8464                           ; Regs used in _I2C_MasterClose: []
  8465                           
  8466                           
  8467                           ;mcc_generated_files/i2c_master.c: 560:     SSP1CON1bits.SSPEN = 0;
  8468  0DB1  0024               	movlb	4	; select bank4
  8469  0DB2  1295               	bcf	21,5	;volatile
  8470  0DB3                     l533:
  8471  0DB3  0008               	return
  8472  0DB4                     __end_of_I2C_MasterClose:
  8473                           
  8474                           	psect	text71
  8475  0DAE                     __ptext71:	
  8476 ;; *************** function _I2C_MasterClearIrq *****************
  8477 ;; Defined at:
  8478 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		None
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8492 ;;      Params:         0       0       0       0       0       0       0       0
  8493 ;;      Locals:         0       0       0       0       0       0       0       0
  8494 ;;      Temps:          0       0       0       0       0       0       0       0
  8495 ;;      Totals:         0       0       0       0       0       0       0       0
  8496 ;;Total ram usage:        0 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_I2C_Open
  8502 ;;		_I2C_Close
  8503 ;;		_I2C_MasterFsm
  8504 ;; This function uses a non-reentrant model
  8505 ;;
  8506                           
  8507                           
  8508                           ;psect for function _I2C_MasterClearIrq
  8509  0DAE                     _I2C_MasterClearIrq:
  8510  0DAE                     l2982:	
  8511                           ;incstack = 0
  8512                           ; Regs used in _I2C_MasterClearIrq: []
  8513                           
  8514                           
  8515                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSP1IF = 0;
  8516  0DAE  0020               	movlb	0	; select bank0
  8517  0DAF  1191               	bcf	17,3	;volatile
  8518  0DB0                     l581:
  8519  0DB0  0008               	return
  8520  0DB1                     __end_of_I2C_MasterClearIrq:
  8521                           
  8522                           	psect	text72
  8523  0296                     __ptext72:	
  8524 ;; *************** function ___lwmod *****************
  8525 ;; Defined at:
  8526 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwmod.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;  divisor         2    0[COMMON] unsigned int 
  8529 ;;  dividend        2    2[COMMON] unsigned int 
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  counter         1    5[COMMON] unsigned char 
  8532 ;; Return value:  Size  Location     Type
  8533 ;;                  2    0[COMMON] unsigned int 
  8534 ;; Registers used:
  8535 ;;		wreg, status,2, status,0
  8536 ;; Tracked objects:
  8537 ;;		On entry : 0/0
  8538 ;;		On exit  : 0/0
  8539 ;;		Unchanged: 0/0
  8540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8541 ;;      Params:         4       0       0       0       0       0       0       0
  8542 ;;      Locals:         1       0       0       0       0       0       0       0
  8543 ;;      Temps:          1       0       0       0       0       0       0       0
  8544 ;;      Totals:         6       0       0       0       0       0       0       0
  8545 ;;Total ram usage:        6 bytes
  8546 ;; Hardware stack levels used:    1
  8547 ;; This function calls:
  8548 ;;		Nothing
  8549 ;; This function is called by:
  8550 ;;		_main
  8551 ;; This function uses a non-reentrant model
  8552 ;;
  8553                           
  8554                           
  8555                           ;psect for function ___lwmod
  8556  0296                     ___lwmod:
  8557  0296                     l3728:	
  8558                           ;incstack = 0
  8559                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8560                           
  8561  0296  0870               	movf	___lwmod@divisor,w
  8562  0297  0471               	iorwf	___lwmod@divisor+1,w
  8563  0298  1903               	btfsc	3,2
  8564  0299  2A9B               	goto	u2141
  8565  029A  2A9C               	goto	u2140
  8566  029B                     u2141:
  8567  029B  2AC5               	goto	l3746
  8568  029C                     u2140:
  8569  029C                     l3730:
  8570  029C  01F5               	clrf	___lwmod@counter
  8571  029D  0AF5               	incf	___lwmod@counter,f
  8572  029E  2AA8               	goto	l3736
  8573  029F                     l3732:
  8574  029F  3001               	movlw	1
  8575  02A0                     u2155:
  8576  02A0  35F0               	lslf	___lwmod@divisor,f
  8577  02A1  0DF1               	rlf	___lwmod@divisor+1,f
  8578  02A2  0B89               	decfsz	9,f
  8579  02A3  2AA0               	goto	u2155
  8580  02A4                     l3734:
  8581  02A4  3001               	movlw	1
  8582  02A5  00F4               	movwf	??___lwmod
  8583  02A6  0874               	movf	??___lwmod,w
  8584  02A7  07F5               	addwf	___lwmod@counter,f
  8585  02A8                     l3736:
  8586  02A8  1FF1               	btfss	___lwmod@divisor+1,7
  8587  02A9  2AAB               	goto	u2161
  8588  02AA  2AAC               	goto	u2160
  8589  02AB                     u2161:
  8590  02AB  2A9F               	goto	l3732
  8591  02AC                     u2160:
  8592  02AC                     l3738:
  8593  02AC  0871               	movf	___lwmod@divisor+1,w
  8594  02AD  0273               	subwf	___lwmod@dividend+1,w
  8595  02AE  1D03               	skipz
  8596  02AF  2AB2               	goto	u2175
  8597  02B0  0870               	movf	___lwmod@divisor,w
  8598  02B1  0272               	subwf	___lwmod@dividend,w
  8599  02B2                     u2175:
  8600  02B2  1C03               	skipc
  8601  02B3  2AB5               	goto	u2171
  8602  02B4  2AB6               	goto	u2170
  8603  02B5                     u2171:
  8604  02B5  2ABA               	goto	l3742
  8605  02B6                     u2170:
  8606  02B6                     l3740:
  8607  02B6  0870               	movf	___lwmod@divisor,w
  8608  02B7  02F2               	subwf	___lwmod@dividend,f
  8609  02B8  0871               	movf	___lwmod@divisor+1,w
  8610  02B9  3BF3               	subwfb	___lwmod@dividend+1,f
  8611  02BA                     l3742:
  8612  02BA  3001               	movlw	1
  8613  02BB                     u2185:
  8614  02BB  36F1               	lsrf	___lwmod@divisor+1,f
  8615  02BC  0CF0               	rrf	___lwmod@divisor,f
  8616  02BD  0B89               	decfsz	9,f
  8617  02BE  2ABB               	goto	u2185
  8618  02BF                     l3744:
  8619  02BF  3001               	movlw	1
  8620  02C0  02F5               	subwf	___lwmod@counter,f
  8621  02C1  1D03               	btfss	3,2
  8622  02C2  2AC4               	goto	u2191
  8623  02C3  2AC5               	goto	u2190
  8624  02C4                     u2191:
  8625  02C4  2AAC               	goto	l3738
  8626  02C5                     u2190:
  8627  02C5                     l3746:
  8628  02C5  0873               	movf	___lwmod@dividend+1,w
  8629  02C6  00F1               	movwf	?___lwmod+1
  8630  02C7  0872               	movf	___lwmod@dividend,w
  8631  02C8  00F0               	movwf	?___lwmod
  8632  02C9                     l1250:
  8633  02C9  0008               	return
  8634  02CA                     __end_of___lwmod:
  8635                           
  8636                           	psect	text73
  8637  033A                     __ptext73:	
  8638 ;; *************** function ___lwdiv *****************
  8639 ;; Defined at:
  8640 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c99\common\lwdiv.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;  divisor         2    0[COMMON] unsigned int 
  8643 ;;  dividend        2    2[COMMON] unsigned int 
  8644 ;; Auto vars:     Size  Location     Type
  8645 ;;  quotient        2    5[COMMON] unsigned int 
  8646 ;;  counter         1    7[COMMON] unsigned char 
  8647 ;; Return value:  Size  Location     Type
  8648 ;;                  2    0[COMMON] unsigned int 
  8649 ;; Registers used:
  8650 ;;		wreg, status,2, status,0
  8651 ;; Tracked objects:
  8652 ;;		On entry : 0/0
  8653 ;;		On exit  : 0/0
  8654 ;;		Unchanged: 0/0
  8655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8656 ;;      Params:         4       0       0       0       0       0       0       0
  8657 ;;      Locals:         3       0       0       0       0       0       0       0
  8658 ;;      Temps:          1       0       0       0       0       0       0       0
  8659 ;;      Totals:         8       0       0       0       0       0       0       0
  8660 ;;Total ram usage:        8 bytes
  8661 ;; Hardware stack levels used:    1
  8662 ;; This function calls:
  8663 ;;		Nothing
  8664 ;; This function is called by:
  8665 ;;		_main
  8666 ;; This function uses a non-reentrant model
  8667 ;;
  8668                           
  8669                           
  8670                           ;psect for function ___lwdiv
  8671  033A                     ___lwdiv:
  8672  033A                     l3702:	
  8673                           ;incstack = 0
  8674                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8675                           
  8676  033A  01F5               	clrf	___lwdiv@quotient
  8677  033B  01F6               	clrf	___lwdiv@quotient+1
  8678  033C                     l3704:
  8679  033C  0870               	movf	___lwdiv@divisor,w
  8680  033D  0471               	iorwf	___lwdiv@divisor+1,w
  8681  033E  1903               	btfsc	3,2
  8682  033F  2B41               	goto	u2071
  8683  0340  2B42               	goto	u2070
  8684  0341                     u2071:
  8685  0341  2B71               	goto	l3724
  8686  0342                     u2070:
  8687  0342                     l3706:
  8688  0342  01F7               	clrf	___lwdiv@counter
  8689  0343  0AF7               	incf	___lwdiv@counter,f
  8690  0344  2B4E               	goto	l3712
  8691  0345                     l3708:
  8692  0345  3001               	movlw	1
  8693  0346                     u2085:
  8694  0346  35F0               	lslf	___lwdiv@divisor,f
  8695  0347  0DF1               	rlf	___lwdiv@divisor+1,f
  8696  0348  0B89               	decfsz	9,f
  8697  0349  2B46               	goto	u2085
  8698  034A                     l3710:
  8699  034A  3001               	movlw	1
  8700  034B  00F4               	movwf	??___lwdiv
  8701  034C  0874               	movf	??___lwdiv,w
  8702  034D  07F7               	addwf	___lwdiv@counter,f
  8703  034E                     l3712:
  8704  034E  1FF1               	btfss	___lwdiv@divisor+1,7
  8705  034F  2B51               	goto	u2091
  8706  0350  2B52               	goto	u2090
  8707  0351                     u2091:
  8708  0351  2B45               	goto	l3708
  8709  0352                     u2090:
  8710  0352                     l3714:
  8711  0352  3001               	movlw	1
  8712  0353                     u2105:
  8713  0353  35F5               	lslf	___lwdiv@quotient,f
  8714  0354  0DF6               	rlf	___lwdiv@quotient+1,f
  8715  0355  0B89               	decfsz	9,f
  8716  0356  2B53               	goto	u2105
  8717  0357  0871               	movf	___lwdiv@divisor+1,w
  8718  0358  0273               	subwf	___lwdiv@dividend+1,w
  8719  0359  1D03               	skipz
  8720  035A  2B5D               	goto	u2115
  8721  035B  0870               	movf	___lwdiv@divisor,w
  8722  035C  0272               	subwf	___lwdiv@dividend,w
  8723  035D                     u2115:
  8724  035D  1C03               	skipc
  8725  035E  2B60               	goto	u2111
  8726  035F  2B61               	goto	u2110
  8727  0360                     u2111:
  8728  0360  2B66               	goto	l3720
  8729  0361                     u2110:
  8730  0361                     l3716:
  8731  0361  0870               	movf	___lwdiv@divisor,w
  8732  0362  02F2               	subwf	___lwdiv@dividend,f
  8733  0363  0871               	movf	___lwdiv@divisor+1,w
  8734  0364  3BF3               	subwfb	___lwdiv@dividend+1,f
  8735  0365                     l3718:
  8736  0365  1475               	bsf	___lwdiv@quotient,0
  8737  0366                     l3720:
  8738  0366  3001               	movlw	1
  8739  0367                     u2125:
  8740  0367  36F1               	lsrf	___lwdiv@divisor+1,f
  8741  0368  0CF0               	rrf	___lwdiv@divisor,f
  8742  0369  0B89               	decfsz	9,f
  8743  036A  2B67               	goto	u2125
  8744  036B                     l3722:
  8745  036B  3001               	movlw	1
  8746  036C  02F7               	subwf	___lwdiv@counter,f
  8747  036D  1D03               	btfss	3,2
  8748  036E  2B70               	goto	u2131
  8749  036F  2B71               	goto	u2130
  8750  0370                     u2131:
  8751  0370  2B52               	goto	l3714
  8752  0371                     u2130:
  8753  0371                     l3724:
  8754  0371  0876               	movf	___lwdiv@quotient+1,w
  8755  0372  00F1               	movwf	?___lwdiv+1
  8756  0373  0875               	movf	___lwdiv@quotient,w
  8757  0374  00F0               	movwf	?___lwdiv
  8758  0375                     l1240:
  8759  0375  0008               	return
  8760  0376                     __end_of___lwdiv:
  8761                           
  8762                           	psect	text74
  8763  0E9F                     __ptext74:	
  8764 ;; *************** function _SYSTEM_Initialize *****************
  8765 ;; Defined at:
  8766 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8767 ;; Parameters:    Size  Location     Type
  8768 ;;		None
  8769 ;; Auto vars:     Size  Location     Type
  8770 ;;		None
  8771 ;; Return value:  Size  Location     Type
  8772 ;;                  1    wreg      void 
  8773 ;; Registers used:
  8774 ;;		wreg, status,2, status,0, pclath, cstack
  8775 ;; Tracked objects:
  8776 ;;		On entry : 0/0
  8777 ;;		On exit  : 0/0
  8778 ;;		Unchanged: 0/0
  8779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8780 ;;      Params:         0       0       0       0       0       0       0       0
  8781 ;;      Locals:         0       0       0       0       0       0       0       0
  8782 ;;      Temps:          0       0       0       0       0       0       0       0
  8783 ;;      Totals:         0       0       0       0       0       0       0       0
  8784 ;;Total ram usage:        0 bytes
  8785 ;; Hardware stack levels used:    1
  8786 ;; Hardware stack levels required when called:    2
  8787 ;; This function calls:
  8788 ;;		_EUSART_Initialize
  8789 ;;		_I2C_Initialize
  8790 ;;		_OSCILLATOR_Initialize
  8791 ;;		_PIN_MANAGER_Initialize
  8792 ;;		_WDT_Initialize
  8793 ;; This function is called by:
  8794 ;;		_main
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           
  8799                           ;psect for function _SYSTEM_Initialize
  8800  0E9F                     _SYSTEM_Initialize:
  8801  0E9F                     l3640:	
  8802                           ;incstack = 0
  8803                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  8804                           
  8805                           
  8806                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  8807  0E9F  318E  2654  318E   	fcall	_I2C_Initialize
  8808                           
  8809                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8810  0EA2  3180  2016  318E   	fcall	_PIN_MANAGER_Initialize
  8811                           
  8812                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8813  0EA5  318E  261E  318E   	fcall	_OSCILLATOR_Initialize
  8814                           
  8815                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  8816  0EA8  318D  25C9  318E   	fcall	_WDT_Initialize
  8817                           
  8818                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  8819  0EAB  3180  209F  318E   	fcall	_EUSART_Initialize
  8820  0EAE                     l248:
  8821  0EAE  0008               	return
  8822  0EAF                     __end_of_SYSTEM_Initialize:
  8823                           
  8824                           	psect	text75
  8825  0DC9                     __ptext75:	
  8826 ;; *************** function _WDT_Initialize *****************
  8827 ;; Defined at:
  8828 ;;		line 68 in file "mcc_generated_files/mcc.c"
  8829 ;; Parameters:    Size  Location     Type
  8830 ;;		None
  8831 ;; Auto vars:     Size  Location     Type
  8832 ;;		None
  8833 ;; Return value:  Size  Location     Type
  8834 ;;                  1    wreg      void 
  8835 ;; Registers used:
  8836 ;;		wreg
  8837 ;; Tracked objects:
  8838 ;;		On entry : 0/0
  8839 ;;		On exit  : 0/0
  8840 ;;		Unchanged: 0/0
  8841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8842 ;;      Params:         0       0       0       0       0       0       0       0
  8843 ;;      Locals:         0       0       0       0       0       0       0       0
  8844 ;;      Temps:          0       0       0       0       0       0       0       0
  8845 ;;      Totals:         0       0       0       0       0       0       0       0
  8846 ;;Total ram usage:        0 bytes
  8847 ;; Hardware stack levels used:    1
  8848 ;; This function calls:
  8849 ;;		Nothing
  8850 ;; This function is called by:
  8851 ;;		_SYSTEM_Initialize
  8852 ;; This function uses a non-reentrant model
  8853 ;;
  8854                           
  8855                           
  8856                           ;psect for function _WDT_Initialize
  8857  0DC9                     _WDT_Initialize:
  8858  0DC9                     l3492:	
  8859                           ;incstack = 0
  8860                           ; Regs used in _WDT_Initialize: [wreg]
  8861                           
  8862                           
  8863                           ;mcc_generated_files/mcc.c: 71:     WDTCON = 0x16;
  8864  0DC9  3016               	movlw	22
  8865  0DCA  0021               	movlb	1	; select bank1
  8866  0DCB  0097               	movwf	23	;volatile
  8867  0DCC                     l254:
  8868  0DCC  0008               	return
  8869  0DCD                     __end_of_WDT_Initialize:
  8870                           
  8871                           	psect	text76
  8872  0016                     __ptext76:	
  8873 ;; *************** function _PIN_MANAGER_Initialize *****************
  8874 ;; Defined at:
  8875 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8876 ;; Parameters:    Size  Location     Type
  8877 ;;		None
  8878 ;; Auto vars:     Size  Location     Type
  8879 ;;		None
  8880 ;; Return value:  Size  Location     Type
  8881 ;;                  1    wreg      void 
  8882 ;; Registers used:
  8883 ;;		wreg, status,2
  8884 ;; Tracked objects:
  8885 ;;		On entry : 0/0
  8886 ;;		On exit  : 0/0
  8887 ;;		Unchanged: 0/0
  8888 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8889 ;;      Params:         0       0       0       0       0       0       0       0
  8890 ;;      Locals:         0       0       0       0       0       0       0       0
  8891 ;;      Temps:          0       0       0       0       0       0       0       0
  8892 ;;      Totals:         0       0       0       0       0       0       0       0
  8893 ;;Total ram usage:        0 bytes
  8894 ;; Hardware stack levels used:    1
  8895 ;; This function calls:
  8896 ;;		Nothing
  8897 ;; This function is called by:
  8898 ;;		_SYSTEM_Initialize
  8899 ;; This function uses a non-reentrant model
  8900 ;;
  8901                           
  8902                           
  8903                           ;psect for function _PIN_MANAGER_Initialize
  8904  0016                     _PIN_MANAGER_Initialize:
  8905  0016                     l3460:	
  8906                           ;incstack = 0
  8907                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  8908                           
  8909                           
  8910                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  8911  0016  0022               	movlb	2	; select bank2
  8912  0017  018C               	clrf	12	;volatile
  8913                           
  8914                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  8915  0018  018D               	clrf	13	;volatile
  8916                           
  8917                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  8918  0019  018E               	clrf	14	;volatile
  8919  001A                     l3462:
  8920                           
  8921                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x3F;
  8922  001A  303F               	movlw	63
  8923  001B  0021               	movlb	1	; select bank1
  8924  001C  008C               	movwf	12	;volatile
  8925  001D                     l3464:
  8926                           
  8927                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0x70;
  8928  001D  3070               	movlw	112
  8929  001E  008D               	movwf	13	;volatile
  8930  001F                     l3466:
  8931                           
  8932                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0xFF;
  8933  001F  30FF               	movlw	255
  8934  0020  008E               	movwf	14	;volatile
  8935  0021                     l3468:
  8936                           
  8937                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0xCF;
  8938  0021  30CF               	movlw	207
  8939  0022  0023               	movlb	3	; select bank3
  8940  0023  008E               	movwf	14	;volatile
  8941                           
  8942                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0x00;
  8943  0024  018D               	clrf	13	;volatile
  8944  0025                     l3470:
  8945                           
  8946                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x17;
  8947  0025  3017               	movlw	23
  8948  0026  008C               	movwf	12	;volatile
  8949  0027                     l3472:
  8950                           
  8951                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  8952  0027  0024               	movlb	4	; select bank4
  8953  0028  018D               	clrf	13	;volatile
  8954  0029                     l3474:
  8955                           
  8956                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  8957  0029  018C               	clrf	12	;volatile
  8958  002A                     l3476:
  8959                           
  8960                           ;mcc_generated_files/pin_manager.c: 83:     OPTION_REGbits.nWPUEN = 1;
  8961  002A  0021               	movlb	1	; select bank1
  8962  002B  1795               	bsf	21,7	;volatile
  8963  002C                     l3478:
  8964                           
  8965                           ;mcc_generated_files/pin_manager.c: 89:     APFCON = 0x00;
  8966  002C  0022               	movlb	2	; select bank2
  8967  002D  019D               	clrf	29	;volatile
  8968  002E                     l226:
  8969  002E  0008               	return
  8970  002F                     __end_of_PIN_MANAGER_Initialize:
  8971                           
  8972                           	psect	text77
  8973  0E1E                     __ptext77:	
  8974 ;; *************** function _OSCILLATOR_Initialize *****************
  8975 ;; Defined at:
  8976 ;;		line 60 in file "mcc_generated_files/mcc.c"
  8977 ;; Parameters:    Size  Location     Type
  8978 ;;		None
  8979 ;; Auto vars:     Size  Location     Type
  8980 ;;		None
  8981 ;; Return value:  Size  Location     Type
  8982 ;;                  1    wreg      void 
  8983 ;; Registers used:
  8984 ;;		wreg, status,2
  8985 ;; Tracked objects:
  8986 ;;		On entry : 0/0
  8987 ;;		On exit  : 0/0
  8988 ;;		Unchanged: 0/0
  8989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  8990 ;;      Params:         0       0       0       0       0       0       0       0
  8991 ;;      Locals:         0       0       0       0       0       0       0       0
  8992 ;;      Temps:          0       0       0       0       0       0       0       0
  8993 ;;      Totals:         0       0       0       0       0       0       0       0
  8994 ;;Total ram usage:        0 bytes
  8995 ;; Hardware stack levels used:    1
  8996 ;; This function calls:
  8997 ;;		Nothing
  8998 ;; This function is called by:
  8999 ;;		_SYSTEM_Initialize
  9000 ;; This function uses a non-reentrant model
  9001 ;;
  9002                           
  9003                           
  9004                           ;psect for function _OSCILLATOR_Initialize
  9005  0E1E                     _OSCILLATOR_Initialize:
  9006  0E1E                     l3488:	
  9007                           ;incstack = 0
  9008                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  9009                           
  9010                           
  9011                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x6A;
  9012  0E1E  306A               	movlw	106
  9013  0E1F  0021               	movlb	1	; select bank1
  9014  0E20  0099               	movwf	25	;volatile
  9015  0E21                     l3490:
  9016                           
  9017                           ;mcc_generated_files/mcc.c: 65:     BORCON = 0x00;
  9018  0E21  0022               	movlb	2	; select bank2
  9019  0E22  0196               	clrf	22	;volatile
  9020  0E23                     l251:
  9021  0E23  0008               	return
  9022  0E24                     __end_of_OSCILLATOR_Initialize:
  9023                           
  9024                           	psect	text78
  9025  0E54                     __ptext78:	
  9026 ;; *************** function _I2C_Initialize *****************
  9027 ;; Defined at:
  9028 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		wreg, status,2
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9042 ;;      Params:         0       0       0       0       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used:    1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_SYSTEM_Initialize
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           
  9056                           ;psect for function _I2C_Initialize
  9057  0E54                     _I2C_Initialize:
  9058  0E54                     l3480:	
  9059                           ;incstack = 0
  9060                           ; Regs used in _I2C_Initialize: [wreg+status,2]
  9061                           
  9062                           
  9063                           ;mcc_generated_files/i2c_master.c: 169:     SSP1STAT = 0x80;
  9064  0E54  3080               	movlw	128
  9065  0E55  0024               	movlb	4	; select bank4
  9066  0E56  0094               	movwf	20	;volatile
  9067                           
  9068                           ;mcc_generated_files/i2c_master.c: 170:     SSP1CON1 = 0x08;
  9069  0E57  3008               	movlw	8
  9070  0E58  0095               	movwf	21	;volatile
  9071  0E59                     l3482:
  9072                           
  9073                           ;mcc_generated_files/i2c_master.c: 171:     SSP1CON2 = 0x00;
  9074  0E59  0196               	clrf	22	;volatile
  9075  0E5A                     l3484:
  9076                           
  9077                           ;mcc_generated_files/i2c_master.c: 172:     SSP1ADD = 0x09;
  9078  0E5A  3009               	movlw	9
  9079  0E5B  0092               	movwf	18	;volatile
  9080  0E5C                     l3486:
  9081                           
  9082                           ;mcc_generated_files/i2c_master.c: 173:     SSP1CON1bits.SSPEN = 0;
  9083  0E5C  1295               	bcf	21,5	;volatile
  9084  0E5D                     l361:
  9085  0E5D  0008               	return
  9086  0E5E                     __end_of_I2C_Initialize:
  9087                           
  9088                           	psect	text79
  9089  009F                     __ptext79:	
  9090 ;; *************** function _EUSART_Initialize *****************
  9091 ;; Defined at:
  9092 ;;		line 66 in file "mcc_generated_files/eusart.c"
  9093 ;; Parameters:    Size  Location     Type
  9094 ;;		None
  9095 ;; Auto vars:     Size  Location     Type
  9096 ;;		None
  9097 ;; Return value:  Size  Location     Type
  9098 ;;                  1    wreg      void 
  9099 ;; Registers used:
  9100 ;;		wreg, status,2, status,0, pclath, cstack
  9101 ;; Tracked objects:
  9102 ;;		On entry : 0/0
  9103 ;;		On exit  : 0/0
  9104 ;;		Unchanged: 0/0
  9105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9106 ;;      Params:         0       0       0       0       0       0       0       0
  9107 ;;      Locals:         0       0       0       0       0       0       0       0
  9108 ;;      Temps:          0       0       0       0       0       0       0       0
  9109 ;;      Totals:         0       0       0       0       0       0       0       0
  9110 ;;Total ram usage:        0 bytes
  9111 ;; Hardware stack levels used:    1
  9112 ;; Hardware stack levels required when called:    1
  9113 ;; This function calls:
  9114 ;;		_EUSART_SetErrorHandler
  9115 ;;		_EUSART_SetFramingErrorHandler
  9116 ;;		_EUSART_SetOverrunErrorHandler
  9117 ;; This function is called by:
  9118 ;;		_SYSTEM_Initialize
  9119 ;; This function uses a non-reentrant model
  9120 ;;
  9121                           
  9122                           
  9123                           ;psect for function _EUSART_Initialize
  9124  009F                     _EUSART_Initialize:
  9125  009F                     l3494:	
  9126                           ;incstack = 0
  9127                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  9128                           
  9129                           
  9130                           ;mcc_generated_files/eusart.c: 71:     BAUDCON = 0x08;
  9131  009F  3008               	movlw	8
  9132  00A0  0023               	movlb	3	; select bank3
  9133  00A1  009F               	movwf	31	;volatile
  9134                           
  9135                           ;mcc_generated_files/eusart.c: 74:     RCSTA = 0x90;
  9136  00A2  3090               	movlw	144
  9137  00A3  009D               	movwf	29	;volatile
  9138                           
  9139                           ;mcc_generated_files/eusart.c: 77:     TXSTA = 0x24;
  9140  00A4  3024               	movlw	36
  9141  00A5  009E               	movwf	30	;volatile
  9142                           
  9143                           ;mcc_generated_files/eusart.c: 80:     SPBRGL = 0x67;
  9144  00A6  3067               	movlw	103
  9145  00A7  009B               	movwf	27	;volatile
  9146  00A8                     l3496:
  9147                           
  9148                           ;mcc_generated_files/eusart.c: 83:     SPBRGH = 0x00;
  9149  00A8  019C               	clrf	28	;volatile
  9150  00A9                     l3498:
  9151                           
  9152                           ;mcc_generated_files/eusart.c: 86:     EUSART_SetFramingErrorHandler(EUSART_DefaultFrami
      +                          ngErrorHandler);
  9153  00A9  3000               	movlw	0
  9154  00AA  00F0               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  9155  00AB  3000               	movlw	0
  9156  00AC  00F1               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  9157  00AD  318E  2612  3180   	fcall	_EUSART_SetFramingErrorHandler
  9158  00B0                     l3500:
  9159                           
  9160                           ;mcc_generated_files/eusart.c: 87:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOverr
      +                          unErrorHandler);
  9161  00B0  3000               	movlw	0
  9162  00B1  00F0               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  9163  00B2  3000               	movlw	0
  9164  00B3  00F1               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  9165  00B4  318E  2618  3180   	fcall	_EUSART_SetOverrunErrorHandler
  9166  00B7                     l3502:
  9167                           
  9168                           ;mcc_generated_files/eusart.c: 88:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandler
      +                          );
  9169  00B7  3000               	movlw	0
  9170  00B8  00F0               	movwf	EUSART_SetErrorHandler@interruptHandler
  9171  00B9  3000               	movlw	0
  9172  00BA  00F1               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  9173  00BB  318E  260C  3180   	fcall	_EUSART_SetErrorHandler
  9174  00BE                     l3504:
  9175                           
  9176                           ;mcc_generated_files/eusart.c: 90:     eusartRxLastError.status = 0;
  9177  00BE  0020               	movlb	0	; select bank0
  9178  00BF  01CD               	clrf	_eusartRxLastError	;volatile
  9179  00C0                     l634:
  9180  00C0  0008               	return
  9181  00C1                     __end_of_EUSART_Initialize:
  9182                           
  9183                           	psect	text80
  9184  0E18                     __ptext80:	
  9185 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  9186 ;; Defined at:
  9187 ;;		line 161 in file "mcc_generated_files/eusart.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9190 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;		None
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      void 
  9195 ;; Registers used:
  9196 ;;		wreg
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9202 ;;      Params:         2       0       0       0       0       0       0       0
  9203 ;;      Locals:         0       0       0       0       0       0       0       0
  9204 ;;      Temps:          0       0       0       0       0       0       0       0
  9205 ;;      Totals:         2       0       0       0       0       0       0       0
  9206 ;;Total ram usage:        2 bytes
  9207 ;; Hardware stack levels used:    1
  9208 ;; This function calls:
  9209 ;;		Nothing
  9210 ;; This function is called by:
  9211 ;;		_EUSART_Initialize
  9212 ;; This function uses a non-reentrant model
  9213 ;;
  9214                           
  9215                           
  9216                           ;psect for function _EUSART_SetOverrunErrorHandler
  9217  0E18                     _EUSART_SetOverrunErrorHandler:
  9218  0E18                     l3310:	
  9219                           ;incstack = 0
  9220                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  9221                           
  9222                           
  9223                           ;mcc_generated_files/eusart.c: 162:     EUSART_OverrunErrorHandler = interruptHandler;
  9224  0E18  0871               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  9225  0E19  0020               	movlb	0	; select bank0
  9226  0E1A  00EC               	movwf	_EUSART_OverrunErrorHandler+1
  9227  0E1B  0870               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  9228  0E1C  00EB               	movwf	_EUSART_OverrunErrorHandler
  9229  0E1D                     l676:
  9230  0E1D  0008               	return
  9231  0E1E                     __end_of_EUSART_SetOverrunErrorHandler:
  9232                           
  9233                           	psect	text81
  9234  0E12                     __ptext81:	
  9235 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  9236 ;; Defined at:
  9237 ;;		line 157 in file "mcc_generated_files/eusart.c"
  9238 ;; Parameters:    Size  Location     Type
  9239 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9240 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  9241 ;; Auto vars:     Size  Location     Type
  9242 ;;		None
  9243 ;; Return value:  Size  Location     Type
  9244 ;;                  1    wreg      void 
  9245 ;; Registers used:
  9246 ;;		wreg
  9247 ;; Tracked objects:
  9248 ;;		On entry : 0/0
  9249 ;;		On exit  : 0/0
  9250 ;;		Unchanged: 0/0
  9251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9252 ;;      Params:         2       0       0       0       0       0       0       0
  9253 ;;      Locals:         0       0       0       0       0       0       0       0
  9254 ;;      Temps:          0       0       0       0       0       0       0       0
  9255 ;;      Totals:         2       0       0       0       0       0       0       0
  9256 ;;Total ram usage:        2 bytes
  9257 ;; Hardware stack levels used:    1
  9258 ;; This function calls:
  9259 ;;		Nothing
  9260 ;; This function is called by:
  9261 ;;		_EUSART_Initialize
  9262 ;; This function uses a non-reentrant model
  9263 ;;
  9264                           
  9265                           
  9266                           ;psect for function _EUSART_SetFramingErrorHandler
  9267  0E12                     _EUSART_SetFramingErrorHandler:
  9268  0E12                     l3308:	
  9269                           ;incstack = 0
  9270                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  9271                           
  9272                           
  9273                           ;mcc_generated_files/eusart.c: 158:     EUSART_FramingErrorHandler = interruptHandler;
  9274  0E12  0871               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  9275  0E13  0020               	movlb	0	; select bank0
  9276  0E14  00EE               	movwf	_EUSART_FramingErrorHandler+1
  9277  0E15  0870               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  9278  0E16  00ED               	movwf	_EUSART_FramingErrorHandler
  9279  0E17                     l673:
  9280  0E17  0008               	return
  9281  0E18                     __end_of_EUSART_SetFramingErrorHandler:
  9282                           
  9283                           	psect	text82
  9284  0E0C                     __ptext82:	
  9285 ;; *************** function _EUSART_SetErrorHandler *****************
  9286 ;; Defined at:
  9287 ;;		line 165 in file "mcc_generated_files/eusart.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  interruptHan    2    0[COMMON] PTR FTN()void 
  9290 ;;		 -> EUSART_DefaultErrorHandler(1), 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9302 ;;      Params:         2       0       0       0       0       0       0       0
  9303 ;;      Locals:         0       0       0       0       0       0       0       0
  9304 ;;      Temps:          0       0       0       0       0       0       0       0
  9305 ;;      Totals:         2       0       0       0       0       0       0       0
  9306 ;;Total ram usage:        2 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; This function calls:
  9309 ;;		Nothing
  9310 ;; This function is called by:
  9311 ;;		_EUSART_Initialize
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           
  9316                           ;psect for function _EUSART_SetErrorHandler
  9317  0E0C                     _EUSART_SetErrorHandler:
  9318  0E0C                     l3312:	
  9319                           ;incstack = 0
  9320                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  9321                           
  9322                           
  9323                           ;mcc_generated_files/eusart.c: 166:     EUSART_ErrorHandler = interruptHandler;
  9324  0E0C  0871               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  9325  0E0D  0021               	movlb	1	; select bank1
  9326  0E0E  00A1               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  9327  0E0F  0870               	movf	EUSART_SetErrorHandler@interruptHandler,w
  9328  0E10  00A0               	movwf	_EUSART_ErrorHandler^(0+128)
  9329  0E11                     l679:
  9330  0E11  0008               	return
  9331  0E12                     __end_of_EUSART_SetErrorHandler:
  9332                           
  9333                           	psect	text83
  9334  00E5                     __ptext83:	
  9335 ;; *************** function _MAX7219_Init *****************
  9336 ;; Defined at:
  9337 ;;		line 123 in file "main.c"
  9338 ;; Parameters:    Size  Location     Type
  9339 ;;		None
  9340 ;; Auto vars:     Size  Location     Type
  9341 ;;		None
  9342 ;; Return value:  Size  Location     Type
  9343 ;;                  1    wreg      void 
  9344 ;; Registers used:
  9345 ;;		wreg, status,2, status,0, pclath, cstack
  9346 ;; Tracked objects:
  9347 ;;		On entry : 0/0
  9348 ;;		On exit  : 0/0
  9349 ;;		Unchanged: 0/0
  9350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9351 ;;      Params:         0       0       0       0       0       0       0       0
  9352 ;;      Locals:         0       0       0       0       0       0       0       0
  9353 ;;      Temps:          1       0       0       0       0       0       0       0
  9354 ;;      Totals:         1       0       0       0       0       0       0       0
  9355 ;;Total ram usage:        1 bytes
  9356 ;; Hardware stack levels used:    1
  9357 ;; Hardware stack levels required when called:    2
  9358 ;; This function calls:
  9359 ;;		_Write_Comand
  9360 ;; This function is called by:
  9361 ;;		_main
  9362 ;; This function uses a non-reentrant model
  9363 ;;
  9364                           
  9365                           
  9366                           ;psect for function _MAX7219_Init
  9367  00E5                     _MAX7219_Init:
  9368  00E5                     l3654:	
  9369                           ;incstack = 0
  9370                           ; Regs used in _MAX7219_Init: [wreg+status,2+status,0+pclath+cstack]
  9371                           
  9372                           
  9373                           ;main.c: 125:     TRISCbits.TRISC0 = 0;
  9374  00E5  0021               	movlb	1	; select bank1
  9375  00E6  100E               	bcf	14,0	;volatile
  9376                           
  9377                           ;main.c: 126:     TRISCbits.TRISC1 = 0;
  9378  00E7  108E               	bcf	14,1	;volatile
  9379                           
  9380                           ;main.c: 127:     TRISCbits.TRISC2 = 0;
  9381  00E8  110E               	bcf	14,2	;volatile
  9382                           
  9383                           ;main.c: 129:     LATCbits.LATC1 = 0;
  9384  00E9  0022               	movlb	2	; select bank2
  9385  00EA  108E               	bcf	14,1	;volatile
  9386                           
  9387                           ;main.c: 130:     LATCbits.LATC2 = 0;
  9388  00EB  110E               	bcf	14,2	;volatile
  9389                           
  9390                           ;main.c: 131:     LATCbits.LATC0 = 0;
  9391  00EC  100E               	bcf	14,0	;volatile
  9392  00ED                     l3656:
  9393                           
  9394                           ;main.c: 132:     Write_Comand(0x0F,0x00);
  9395  00ED  01F6               	clrf	Write_Comand@Data
  9396  00EE  300F               	movlw	15
  9397  00EF  3180  20C1  3180   	fcall	_Write_Comand
  9398                           
  9399                           ;main.c: 133:     Write_Comand(0x0A,0x0F);
  9400  00F2  300F               	movlw	15
  9401  00F3  00FC               	movwf	??_MAX7219_Init
  9402  00F4  087C               	movf	??_MAX7219_Init,w
  9403  00F5  00F6               	movwf	Write_Comand@Data
  9404  00F6  300A               	movlw	10
  9405  00F7  3180  20C1  3180   	fcall	_Write_Comand
  9406                           
  9407                           ;main.c: 134:     Write_Comand(0x0B,0x03);
  9408  00FA  3003               	movlw	3
  9409  00FB  00FC               	movwf	??_MAX7219_Init
  9410  00FC  087C               	movf	??_MAX7219_Init,w
  9411  00FD  00F6               	movwf	Write_Comand@Data
  9412  00FE  300B               	movlw	11
  9413  00FF  3180  20C1  3180   	fcall	_Write_Comand
  9414                           
  9415                           ;main.c: 135:     Write_Comand(0x0C,0x01);
  9416  0102  01F6               	clrf	Write_Comand@Data
  9417  0103  0AF6               	incf	Write_Comand@Data,f
  9418  0104  300C               	movlw	12
  9419  0105  3180  20C1  3180   	fcall	_Write_Comand
  9420  0108                     l779:
  9421  0108  0008               	return
  9422  0109                     __end_of_MAX7219_Init:
  9423                           
  9424                           	psect	text84
  9425  00C1                     __ptext84:	
  9426 ;; *************** function _Write_Comand *****************
  9427 ;; Defined at:
  9428 ;;		line 99 in file "main.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  Address         1    wreg     unsigned char 
  9431 ;;  Data            1    6[COMMON] unsigned char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  Address         1    9[COMMON] unsigned char 
  9434 ;;  temp            2   10[COMMON] unsigned int 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9444 ;;      Params:         1       0       0       0       0       0       0       0
  9445 ;;      Locals:         3       0       0       0       0       0       0       0
  9446 ;;      Temps:          2       0       0       0       0       0       0       0
  9447 ;;      Totals:         6       0       0       0       0       0       0       0
  9448 ;;Total ram usage:        6 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    1
  9451 ;; This function calls:
  9452 ;;		_WriteBits
  9453 ;; This function is called by:
  9454 ;;		_MAX7219_Init
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _Write_Comand
  9460  00C1                     _Write_Comand:
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _Write_Comand: [wreg+status,2+status,0+pclath+cstack]
  9464                           ;Write_Comand@Address stored from wreg
  9465  00C1  00F9               	movwf	Write_Comand@Address
  9466  00C2                     l3506:
  9467  00C2                     l3508:
  9468                           
  9469                           ;main.c: 101:     temp = Address;
  9470  00C2  0879               	movf	Write_Comand@Address,w
  9471  00C3  00F7               	movwf	??_Write_Comand
  9472  00C4  01F8               	clrf	??_Write_Comand+1
  9473  00C5  0877               	movf	??_Write_Comand,w
  9474  00C6  00FA               	movwf	Write_Comand@temp
  9475  00C7  0878               	movf	??_Write_Comand+1,w
  9476  00C8  00FB               	movwf	Write_Comand@temp+1
  9477  00C9                     l3510:
  9478                           
  9479                           ;main.c: 102:     temp = temp << 8;
  9480  00C9  087A               	movf	Write_Comand@temp,w
  9481  00CA  00F8               	movwf	??_Write_Comand+1
  9482  00CB  01F7               	clrf	??_Write_Comand
  9483  00CC  0877               	movf	??_Write_Comand,w
  9484  00CD  00FA               	movwf	Write_Comand@temp
  9485  00CE  0878               	movf	??_Write_Comand+1,w
  9486  00CF  00FB               	movwf	Write_Comand@temp+1
  9487  00D0                     l3512:
  9488                           
  9489                           ;main.c: 103:     temp = temp & 0x0F00;
  9490  00D0  3000               	movlw	0
  9491  00D1  057A               	andwf	Write_Comand@temp,w
  9492  00D2  00FA               	movwf	Write_Comand@temp
  9493  00D3  300F               	movlw	15
  9494  00D4  057B               	andwf	Write_Comand@temp+1,w
  9495  00D5  00FB               	movwf	Write_Comand@temp+1
  9496  00D6                     l3514:
  9497                           
  9498                           ;main.c: 104:     temp = temp + Data;
  9499  00D6  0876               	movf	Write_Comand@Data,w
  9500  00D7  077A               	addwf	Write_Comand@temp,w
  9501  00D8  00FA               	movwf	Write_Comand@temp
  9502  00D9  087B               	movf	Write_Comand@temp+1,w
  9503  00DA  1803               	skipnc
  9504  00DB  0A7B               	incf	Write_Comand@temp+1,w
  9505  00DC  00FB               	movwf	Write_Comand@temp+1
  9506  00DD                     l3516:
  9507                           
  9508                           ;main.c: 105:     WriteBits(temp);
  9509  00DD  087B               	movf	Write_Comand@temp+1,w
  9510  00DE  00F1               	movwf	WriteBits@data+1
  9511  00DF  087A               	movf	Write_Comand@temp,w
  9512  00E0  00F0               	movwf	WriteBits@data
  9513  00E1  3181  21AE  3180   	fcall	_WriteBits
  9514  00E4                     l768:
  9515  00E4  0008               	return
  9516  00E5                     __end_of_Write_Comand:
  9517                           
  9518                           	psect	text85
  9519  0F36                     __ptext85:	
  9520 ;; *************** function _MAX7219_CLEAR *****************
  9521 ;; Defined at:
  9522 ;;		line 117 in file "main.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;  j               1   13[COMMON] unsigned char 
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9536 ;;      Params:         0       0       0       0       0       0       0       0
  9537 ;;      Locals:         1       0       0       0       0       0       0       0
  9538 ;;      Temps:          1       0       0       0       0       0       0       0
  9539 ;;      Totals:         2       0       0       0       0       0       0       0
  9540 ;;Total ram usage:        2 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    2
  9543 ;; This function calls:
  9544 ;;		_Write_Digits
  9545 ;; This function is called by:
  9546 ;;		_main
  9547 ;; This function uses a non-reentrant model
  9548 ;;
  9549                           
  9550                           
  9551                           ;psect for function _MAX7219_CLEAR
  9552  0F36                     _MAX7219_CLEAR:
  9553  0F36                     l3642:	
  9554                           ;incstack = 0
  9555                           ; Regs used in _MAX7219_CLEAR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9556                           
  9557                           
  9558                           ;main.c: 118:     for(unsigned char j = 0; j < 4;j++){
  9559  0F36  01FD               	clrf	MAX7219_CLEAR@j
  9560  0F37                     l3648:
  9561                           
  9562                           ;main.c: 119:         Write_Digits(j,0x0F);
  9563  0F37  300F               	movlw	15
  9564  0F38  00FC               	movwf	??_MAX7219_CLEAR
  9565  0F39  087C               	movf	??_MAX7219_CLEAR,w
  9566  0F3A  00F9               	movwf	Write_Digits@valueDigits
  9567  0F3B  087D               	movf	MAX7219_CLEAR@j,w
  9568  0F3C  3181  212F  318F   	fcall	_Write_Digits
  9569  0F3F                     l3650:
  9570                           
  9571                           ;main.c: 120:     }
  9572  0F3F  3001               	movlw	1
  9573  0F40  00FC               	movwf	??_MAX7219_CLEAR
  9574  0F41  087C               	movf	??_MAX7219_CLEAR,w
  9575  0F42  07FD               	addwf	MAX7219_CLEAR@j,f
  9576  0F43                     l3652:
  9577  0F43  3004               	movlw	4
  9578  0F44  027D               	subwf	MAX7219_CLEAR@j,w
  9579  0F45  1C03               	skipc
  9580  0F46  2F48               	goto	u2001
  9581  0F47  2F49               	goto	u2000
  9582  0F48                     u2001:
  9583  0F48  2F37               	goto	l3648
  9584  0F49                     u2000:
  9585  0F49                     l776:
  9586  0F49  0008               	return
  9587  0F4A                     __end_of_MAX7219_CLEAR:
  9588                           
  9589                           	psect	text86
  9590  012F                     __ptext86:	
  9591 ;; *************** function _Write_Digits *****************
  9592 ;; Defined at:
  9593 ;;		line 108 in file "main.c"
  9594 ;; Parameters:    Size  Location     Type
  9595 ;;  Position        1    wreg     unsigned char 
  9596 ;;  valueDigits     1    9[COMMON] unsigned char 
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  Position        1    0[BANK0 ] unsigned char 
  9599 ;;  temp            2    1[BANK0 ] unsigned int 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : 0/0
  9606 ;;		On exit  : 0/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9609 ;;      Params:         1       0       0       0       0       0       0       0
  9610 ;;      Locals:         0       3       0       0       0       0       0       0
  9611 ;;      Temps:          2       0       0       0       0       0       0       0
  9612 ;;      Totals:         3       3       0       0       0       0       0       0
  9613 ;;Total ram usage:        6 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:    1
  9616 ;; This function calls:
  9617 ;;		_WriteBits
  9618 ;; This function is called by:
  9619 ;;		_MAX7219_CLEAR
  9620 ;;		_RTC_Display
  9621 ;;		_edit
  9622 ;;		_main
  9623 ;;		_Animation
  9624 ;; This function uses a non-reentrant model
  9625 ;;
  9626                           
  9627                           
  9628                           ;psect for function _Write_Digits
  9629  012F                     _Write_Digits:
  9630                           
  9631                           ;incstack = 0
  9632                           ; Regs used in _Write_Digits: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9633                           ;Write_Digits@Position stored from wreg
  9634  012F  0020               	movlb	0	; select bank0
  9635  0130  00D0               	movwf	Write_Digits@Position
  9636  0131                     l3314:
  9637  0131                     l3316:
  9638                           
  9639                           ;main.c: 111:     temp = Position + 1;
  9640  0131  0850               	movf	Write_Digits@Position,w
  9641  0132  3E01               	addlw	1
  9642  0133  00D1               	movwf	Write_Digits@temp
  9643  0134  3000               	movlw	0
  9644  0135  1803               	skipnc
  9645  0136  3001               	movlw	1
  9646  0137  00D2               	movwf	Write_Digits@temp+1
  9647  0138                     l3318:
  9648                           
  9649                           ;main.c: 112:     temp = temp << 8;
  9650  0138  0851               	movf	Write_Digits@temp,w
  9651  0139  00FB               	movwf	??_Write_Digits+1
  9652  013A  01FA               	clrf	??_Write_Digits
  9653  013B  087A               	movf	??_Write_Digits,w
  9654  013C  00D1               	movwf	Write_Digits@temp
  9655  013D  087B               	movf	??_Write_Digits+1,w
  9656  013E  00D2               	movwf	Write_Digits@temp+1
  9657  013F                     l3320:
  9658                           
  9659                           ;main.c: 113:     temp = temp & 0x0F00;
  9660  013F  3000               	movlw	0
  9661  0140  0551               	andwf	Write_Digits@temp,w
  9662  0141  00D1               	movwf	Write_Digits@temp
  9663  0142  300F               	movlw	15
  9664  0143  0552               	andwf	Write_Digits@temp+1,w
  9665  0144  00D2               	movwf	Write_Digits@temp+1
  9666  0145                     l3322:
  9667                           
  9668                           ;main.c: 114:     temp = temp + digits[valueDigits];
  9669  0145  0879               	movf	Write_Digits@valueDigits,w
  9670  0146  3E5F               	addlw	(low (_digits| 0))& (0+255)
  9671  0147  0086               	movwf	6
  9672  0148  0187               	clrf	7
  9673  0149  0801               	movf	1,w
  9674  014A  0751               	addwf	Write_Digits@temp,w
  9675  014B  00D1               	movwf	Write_Digits@temp
  9676  014C  0852               	movf	Write_Digits@temp+1,w
  9677  014D  1803               	skipnc
  9678  014E  0A52               	incf	Write_Digits@temp+1,w
  9679  014F  00D2               	movwf	Write_Digits@temp+1
  9680  0150                     l3324:
  9681                           
  9682                           ;main.c: 115:     WriteBits(temp);
  9683  0150  0852               	movf	Write_Digits@temp+1,w
  9684  0151  00F1               	movwf	WriteBits@data+1
  9685  0152  0851               	movf	Write_Digits@temp,w
  9686  0153  00F0               	movwf	WriteBits@data
  9687  0154  3181  21AE  3181   	fcall	_WriteBits
  9688  0157                     l771:
  9689  0157  0008               	return
  9690  0158                     __end_of_Write_Digits:
  9691                           
  9692                           	psect	text87
  9693  01AE                     __ptext87:	
  9694 ;; *************** function _WriteBits *****************
  9695 ;; Defined at:
  9696 ;;		line 85 in file "main.c"
  9697 ;; Parameters:    Size  Location     Type
  9698 ;;  data            2    0[COMMON] unsigned int 
  9699 ;; Auto vars:     Size  Location     Type
  9700 ;;  i               2    4[COMMON] unsigned int 
  9701 ;; Return value:  Size  Location     Type
  9702 ;;                  1    wreg      void 
  9703 ;; Registers used:
  9704 ;;		wreg, status,2, status,0
  9705 ;; Tracked objects:
  9706 ;;		On entry : 0/0
  9707 ;;		On exit  : 0/0
  9708 ;;		Unchanged: 0/0
  9709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  9710 ;;      Params:         2       0       0       0       0       0       0       0
  9711 ;;      Locals:         2       0       0       0       0       0       0       0
  9712 ;;      Temps:          2       0       0       0       0       0       0       0
  9713 ;;      Totals:         6       0       0       0       0       0       0       0
  9714 ;;Total ram usage:        6 bytes
  9715 ;; Hardware stack levels used:    1
  9716 ;; This function calls:
  9717 ;;		Nothing
  9718 ;; This function is called by:
  9719 ;;		_Write_Comand
  9720 ;;		_Write_Digits
  9721 ;; This function uses a non-reentrant model
  9722 ;;
  9723                           
  9724                           
  9725                           ;psect for function _WriteBits
  9726  01AE                     _WriteBits:
  9727  01AE                     l3252:	
  9728                           ;incstack = 0
  9729                           ; Regs used in _WriteBits: [wreg+status,2+status,0]
  9730                           
  9731                           
  9732                           ;main.c: 86:     LATCbits.LATC2 = 0;
  9733  01AE  0022               	movlb	2	; select bank2
  9734  01AF  110E               	bcf	14,2	;volatile
  9735  01B0                     l3254:
  9736                           
  9737                           ;main.c: 87:     for(unsigned int i = 0x8000; i; i = i >> 1){
  9738  01B0  3000               	movlw	0
  9739  01B1  00F4               	movwf	WriteBits@i
  9740  01B2  3080               	movlw	128
  9741  01B3  00F5               	movwf	WriteBits@i+1
  9742  01B4  29D2               	goto	l760
  9743  01B5                     l3256:
  9744                           
  9745                           ;main.c: 88:         if((data & i) == 0) LATCbits.LATC1 = 0;
  9746  01B5  0874               	movf	WriteBits@i,w
  9747  01B6  0570               	andwf	WriteBits@data,w
  9748  01B7  00F2               	movwf	??_WriteBits
  9749  01B8  0875               	movf	WriteBits@i+1,w
  9750  01B9  0571               	andwf	WriteBits@data+1,w
  9751  01BA  00F3               	movwf	??_WriteBits+1
  9752  01BB  0872               	movf	??_WriteBits,w
  9753  01BC  0473               	iorwf	??_WriteBits+1,w
  9754  01BD  1D03               	btfss	3,2
  9755  01BE  29C0               	goto	u1461
  9756  01BF  29C1               	goto	u1460
  9757  01C0                     u1461:
  9758  01C0  29C3               	goto	l762
  9759  01C1                     u1460:
  9760  01C1                     l3258:
  9761  01C1  108E               	bcf	14,1	;volatile
  9762  01C2  29C4               	goto	l763
  9763  01C3                     l762:	
  9764                           ;main.c: 89:         else LATCbits.LATC1 = 1;
  9765                           
  9766  01C3  148E               	bsf	14,1	;volatile
  9767  01C4                     l763:
  9768                           
  9769                           ;main.c: 91:         LATCbits.LATC0 = 1;
  9770  01C4  140E               	bsf	14,0	;volatile
  9771                           
  9772                           ;main.c: 92:         _delay((unsigned long)((1)*(4000000/4000000.0)));
  9773  01C5  0000               	nop
  9774                           
  9775                           ;main.c: 93:         LATCbits.LATC0 = 0;
  9776  01C6  0022               	movlb	2	; select bank2
  9777  01C7  100E               	bcf	14,0	;volatile
  9778  01C8                     l3260:
  9779                           
  9780                           ;main.c: 94:     }
  9781  01C8  0875               	movf	WriteBits@i+1,w
  9782  01C9  00F3               	movwf	??_WriteBits+1
  9783  01CA  0874               	movf	WriteBits@i,w
  9784  01CB  00F2               	movwf	??_WriteBits
  9785  01CC  36F3               	lsrf	??_WriteBits+1,f
  9786  01CD  0CF2               	rrf	??_WriteBits,f
  9787  01CE  0872               	movf	??_WriteBits,w
  9788  01CF  00F4               	movwf	WriteBits@i
  9789  01D0  0873               	movf	??_WriteBits+1,w
  9790  01D1  00F5               	movwf	WriteBits@i+1
  9791  01D2                     l760:
  9792  01D2  0874               	movf	WriteBits@i,w
  9793  01D3  0475               	iorwf	WriteBits@i+1,w
  9794  01D4  1D03               	btfss	3,2
  9795  01D5  29D7               	goto	u1471
  9796  01D6  29D8               	goto	u1470
  9797  01D7                     u1471:
  9798  01D7  29B5               	goto	l3256
  9799  01D8                     u1470:
  9800  01D8                     l764:
  9801                           
  9802                           ;main.c: 96:     LATCbits.LATC2 = 1;
  9803  01D8  150E               	bsf	14,2	;volatile
  9804  01D9                     l765:
  9805  01D9  0008               	return
  9806  01DA                     __end_of_WriteBits:
  9807  007E                     btemp	set	126	;btemp
  9808  007E                     wtemp0	set	126
  9809                           
  9810                           	psect	config
  9811                           
  9812                           ;Config register CONFIG1 @ 0x8007
  9813                           ;	Oscillator Selection Bits
  9814                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  9815                           ;	Watchdog Timer Enable
  9816                           ;	WDTE = OFF, WDT disabled
  9817                           ;	Power-up Timer Enable
  9818                           ;	PWRTE = OFF, PWRT disabled
  9819                           ;	MCLR Pin Function Select
  9820                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  9821                           ;	Flash Program Memory Code Protection
  9822                           ;	CP = OFF, Program memory code protection is disabled
  9823                           ;	Brown-out Reset Enable
  9824                           ;	BOREN = OFF, Brown-out Reset disabled
  9825                           ;	Clock Out Enable
  9826                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  9827                           ;	Internal/External Switchover Mode
  9828                           ;	IESO = OFF, Internal/External Switchover Mode is disabled
  9829                           ;	Fail-Safe Clock Monitor Enable
  9830                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9831  8007                     	org	32775
  9832  8007  09E4               	dw	2532
  9833                           
  9834                           ;Config register CONFIG2 @ 0x8008
  9835                           ;	Flash Memory Self-Write Protection
  9836                           ;	WRT = OFF, Write protection off
  9837                           ;	Stack Overflow/Underflow Reset Enable
  9838                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  9839                           ;	Brown-out Reset Voltage Selection
  9840                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  9841                           ;	Low-Power Brown Out Reset
  9842                           ;	LPBOR = OFF, Low-Power BOR is disabled
  9843                           ;	Low-Voltage Programming Enable
  9844                           ;	LVP = ON, Low-voltage programming enabled
  9845  8008                     	org	32776
  9846  8008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    32
    Data        12
    BSS         48
    Persistent  38
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     15      80
    BANK1            80      0       2
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    i2c_write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read1ByteRegister@d2.data	PTR unsigned char  size(1) Largest target is 0

    i2c_read2ByteRegister@result.data	PTR unsigned char  size(1) Largest target is 0

    i2c_write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(1) Largest target is 0

    I2C_DO_TX$1874$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1879	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_DO_TX$1874	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F166(), wr1RegCompleteHandler@i2c_master_example$F160(), rd2RegCompleteHandler@i2c_master_example$F154(), rd1RegCompleteHandler@i2c_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_MasterFsm$1873	const PTR FTN()enum E3876 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    Absolute function$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S401$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    ds18b20_read@raw_temp_value	PTR unsigned short  size(1) Largest target is 2
		 -> raw_temp(BANK0[2]), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F177(), wr2RegCompleteHandler@i2c_master_example$F166(), wr1RegCompleteHandler@i2c_master_example$F160(), 
		 -> rd2RegCompleteHandler@i2c_master_example$F154(), rd1RegCompleteHandler@i2c_master_example$F143(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F177(), wr2RegCompleteHandler@i2c_master_example$F166(), wr1RegCompleteHandler@i2c_master_example$F160(), 
		 -> rd2RegCompleteHandler@i2c_master_example$F154(), rd1RegCompleteHandler@i2c_master_example$F143(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), wr1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S401$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    I2C_Status.data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@reg(COMMON[1]), I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@reg(COMMON[1]), I2C_Write2ByteRegister@data(COMMON[2]), 
		 -> I2C_Write1ByteRegister@reg(BANK0[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@reg(COMMON[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@reg(COMMON[1]), i2c_readDataBlock@d(COMMON[3]), 
		 -> i2c_write2ByteRegister@reg(COMMON[1]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@reg(COMMON[1]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@reg(COMMON[1]), i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@reg(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), 
		 -> NULL(NULL[0]), 

    S401$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    I2C_Status.callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    S401$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F166(), wr1RegCompleteHandler@i2c_master_example$F160(), rd2RegCompleteHandler@i2c_master_example$F154(), rd1RegCompleteHandler@i2c_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler@i2c_master_example$F177(), 
		 -> wr2RegCompleteHandler@i2c_master_example$F166(), wr1RegCompleteHandler@i2c_master_example$F160(), rd2RegCompleteHandler@i2c_master_example$F154(), rd1RegCompleteHandler@i2c_master_example$F143(), 
		 -> rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 
		 -> wr1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E3876[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@i2c_master_example$F177@ptr.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@i2c_master_example$F177@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@i2c_master_example$F166@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@i2c_master_example$F160@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@i2c_master_example$F154@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@i2c_master_example$F143@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    bufferBlock.data	PTR unsigned char  size(1) Largest target is 0

    d.data	PTR unsigned char  size(1) Largest target is 0

    S74$data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p.data	PTR unsigned char  size(1) Largest target is 0

    rdBlkRegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd2RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    rd1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 

    wr1RegCompleteHandler@p	PTR void  size(1) Largest target is 4
		 -> I2C_ReadDataBlock@bufferBlock(COMMON[3]), I2C_Write2ByteRegister@data(COMMON[2]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMMON[2]), 
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), i2c_readDataBlock@d(COMMON[3]), i2c_write2ByteRegister@data(COMMON[2]), i2c_read2ByteRegister@result(COMMON[2]), 
		 -> i2c_read1ByteRegister@d2(COMMON[1]), i2c_write1ByteRegister@data(COMMON[1]), NULL(NULL[0]), 


Critical Paths under _main in COMMON

    _main->_MAX7219_CLEAR
    _ds18b20_read->_ds18b20_read_byte
    _ds18b20_read->_ds18b20_write_byte
    _ds18b20_write_byte->_ds18b20_write_bit
    _display_digitalCLK->_edit
    _edit->_Write_Digits
    _decimal_to_bcd->___awdiv
    _bcd_to_decimal->___bmul
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler@i2c_master_example$F143
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler@i2c_master_example$F154
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler@i2c_master_example$F177
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler@i2c_master_example$F160
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler@i2c_master_example$F166
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd1RegCompleteHandler@i2c_master_example$F143
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler@i2c_master_example$F154
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler@i2c_master_example$F177
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler@i2c_master_example$F160
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler@i2c_master_example$F166
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd1RegCompleteHandler@i2c_master_example$F143
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler@i2c_master_example$F154
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler@i2c_master_example$F177
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler@i2c_master_example$F160
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler@i2c_master_example$F166
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler@i2c_master_example$F143
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler@i2c_master_example$F154
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler@i2c_master_example$F177
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler@i2c_master_example$F160
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler@i2c_master_example$F166
    _wr2RegCompleteHandler@i2c_master_example$F166->_I2C_SetDataCompleteCallback
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler@i2c_master_example$F160->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler@i2c_master_example$F177->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler@i2c_master_example$F154->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler@i2c_master_example$F143->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _MAX7219_Init->_Write_Comand
    _Write_Comand->_WriteBits
    _MAX7219_CLEAR->_Write_Digits
    _Write_Digits->___awdiv

Critical Paths under _main in BANK0

    _main->_display_digitalCLK
    _display_digitalCLK->_RTC_Display
    _edit->_Write_Digits
    _RTC_Display->_I2C_Read1ByteRegister
    _RTC_Display->_I2C_Write1ByteRegister
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _MAX7219_CLEAR->_Write_Digits

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  856869
                                             14 BANK0      1     1      0
                      _MAX7219_CLEAR
                       _MAX7219_Init
                  _SYSTEM_Initialize
                       _Write_Digits
                            ___lwdiv
                            ___lwmod
                 _display_digitalCLK
                       _ds18b20_read
 ---------------------------------------------------------------------------------
 (1) _ds18b20_read                                         6     6      0     303
                                              4 COMMON     6     6      0
                  _ds18b20_read_byte
                      _ds18b20_start
                 _ds18b20_write_byte
 ---------------------------------------------------------------------------------
 (2) _ds18b20_write_byte                                   3     3      0     112
                                              1 COMMON     3     3      0
                  _ds18b20_write_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_write_bit                                    1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ds18b20_read_byte                                    4     4      0      92
                                              0 COMMON     4     4      0
                   _ds18b20_read_bit
 ---------------------------------------------------------------------------------
 (3) _ds18b20_read_bit                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display_digitalCLK                                   2     2      0  850186
                                             12 BANK0      2     2      0
             _I2C_Write1ByteRegister
                        _RTC_Display
                           _debounce
                     _decimal_to_bcd
                               _edit
 ---------------------------------------------------------------------------------
 (2) _edit                                                 5     4      1    5634
                                             12 COMMON     2     1      1
                                              3 BANK0      3     3      0
                       _Write_Digits
                            ___awdiv
                            ___awmod
                           _debounce
                              _delay
 ---------------------------------------------------------------------------------
 (3) _delay                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _debounce                                             5     3      2      92
                                              0 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       8     8      0    2768
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) _RTC_Display                                          3     3      0  562646
                                              9 BANK0      3     3      0
              _I2C_Read1ByteRegister
             _I2C_Write1ByteRegister
                       _Write_Digits
                            ___awdiv
                            ___awmod
                     _bcd_to_decimal
 ---------------------------------------------------------------------------------
 (3) _bcd_to_decimal                                       4     4      0     212
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               4     3      1     168
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1360
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (3) _I2C_Write1ByteRegister                               4     2      2  279046
                                              5 BANK0      4     2      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Read1ByteRegister                                4     3      1  278309
                                              5 BANK0      4     3      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetAddressNackCallback                           4     1      3    2782
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             3     3      0      46
                                              0 COMMON     3     3      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterWrite                                      0     0      0  268548
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  3     3      0  268548
                                             13 COMMON     1     1      0
                                              3 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0  268502
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        3     3      0  268502
                                              0 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      3     3      0   67109
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            3     3      0   67131
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            3     3      0   67109
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  3     3      0   67109
                                             10 COMMON     3     3      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
_rd1RegCompleteHandler@i2c_master_ex *
              _rd2RegCompleteHandler *
_rd2RegCompleteHandler@i2c_master_ex *
            _rdBlkRegCompleteHandler *
_rdBlkRegCompleteHandler@i2c_master_ *
              _wr1RegCompleteHandler *
_wr1RegCompleteHandler@i2c_master_ex *
              _wr2RegCompleteHandler *
_wr2RegCompleteHandler@i2c_master_ex *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler@i2c_master_example$F166        1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler@i2c_master_example$F160        1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler@i2c_master_example$F177      1     0      1    6702
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              1     0      1    6702
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler@i2c_master_example$F154        1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler@i2c_master_example$F143        1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                1     0      1    6680
                                              9 COMMON     1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetDataCompleteCallback                          4     1      3    3998
                                              5 COMMON     4     1      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_SetCallback                                      5     2      3     914
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     2      2    2660
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               1     0      1       0
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              1     0      1     265
                                              9 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (9) Absolute function(Fake)                               1     0      1       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            2     2      0      24
                                              0 COMMON     2     2      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              6     2      4     311
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     294
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _MAX7219_Init                                         1     1      0     683
                                             12 COMMON     1     1      0
                       _Write_Comand
 ---------------------------------------------------------------------------------
 (2) _Write_Comand                                         6     5      1     683
                                              6 COMMON     6     5      1
                          _WriteBits
 ---------------------------------------------------------------------------------
 (1) _MAX7219_CLEAR                                        2     2      0    2423
                                             12 COMMON     2     2      0
                       _Write_Digits
 ---------------------------------------------------------------------------------
 (3) _Write_Digits                                         6     5      1    2355
                                              9 COMMON     3     2      1
                                              0 BANK0      3     3      0
                          _WriteBits
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) _WriteBits                                            6     4      2     242
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MAX7219_CLEAR
     _Write_Digits
       _WriteBits
       ___awdiv (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
       ___lwmod (ARG)
   _MAX7219_Init
     _Write_Comand
       _WriteBits
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _WDT_Initialize
   _Write_Digits
     _WriteBits
     ___awdiv (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
     ___lwmod (ARG)
   ___lwdiv
   ___lwmod
   _display_digitalCLK
     _I2C_Write1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd1RegCompleteHandler@i2c_master_example$F143 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler@i2c_master_example$F154 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler@i2c_master_example$F160 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler@i2c_master_example$F166 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd1RegCompleteHandler@i2c_master_example$F143 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler@i2c_master_example$F154 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler@i2c_master_example$F160 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler@i2c_master_example$F166 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
                 _I2C_MasterSendNack
               _I2C_DO_RX_NACK_STOP *
                 _I2C_MasterSendNack
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
                 _I2C_MasterStop
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd1RegCompleteHandler@i2c_master_example$F143 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler@i2c_master_example$F154 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler@i2c_master_example$F160 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler@i2c_master_example$F166 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd1RegCompleteHandler@i2c_master_example$F143 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler@i2c_master_example$F154 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr1RegCompleteHandler@i2c_master_example$F160 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _wr2RegCompleteHandler@i2c_master_example$F166 *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
         _I2C_SetCallback
     _RTC_Display
       _I2C_Read1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
           _I2C_SetCallback
       _I2C_Write1ByteRegister
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd1RegCompleteHandler@i2c_master_example$F143 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler@i2c_master_example$F154 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler@i2c_master_example$F177 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler@i2c_master_example$F160 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler@i2c_master_example$F166 *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
           _I2C_SetCallback
       _Write_Digits
         _WriteBits
         ___awdiv (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___awmod
       _bcd_to_decimal
         ___bmul
     _debounce
     _decimal_to_bcd
       ___awdiv
       ___awmod
     _edit
       _Write_Digits
         _WriteBits
         ___awdiv (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
         ___lwmod (ARG)
       ___awdiv
       ___awmod
       _debounce
       _delay
   _ds18b20_read
     _ds18b20_read_byte
       _ds18b20_read_bit
     _ds18b20_start
     _ds18b20_write_byte
       _ds18b20_write_bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      60       4        0.0%
BITBANK0            50      0       1       5        1.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      F      50       6      100.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       2       8        2.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      60      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 27 21:39:08 2021

                                  ??_I2C_DO_SEND_ADR_READ 0070  
                             __size_of_I2C_MasterSendNack 0004  
                                      __size_of_I2C_Close 001C  
                                                       _i 0048  
                                          ___bmul@product 0072  
                                 ??_I2C_DO_SEND_ADR_WRITE 0071  
                                                      l17 0EE0  
                                                      l53 0F02  
                                                      l38 0EF1  
                                                      l65 0F13  
                                                      l77 0FB7  
                                            ___awdiv@sign 0076  
                                     __size_of_I2C_Poller 000D  
                                          _decimal_to_bcd 0206  
                                   ??_I2C_DO_SEND_RESTART 0070  
                            __size_of_I2C_MasterOperation 001F  
                                                     l128 02FF  
                           __size_of_I2C_MasterSendTxData 0005  
                                                     l226 002E  
                                                     l146 0295  
                                                     l251 0E23  
                                                     l500 0E01  
                                                     l421 0DDE  
                                                     l254 0DCC  
                                                     l430 0497  
                                                     l414 0E83  
                                                     l191 0015  
                                                     l503 0E06  
                                                     l248 0EAE  
                                                     l408 012E  
                                                     l520 0DAD  
                                                     l424 0E53  
                                                     l361 0E5D  
                                                     l185 0F24  
                                                     l433 04B3  
                                                     l194 0ECF  
                                                     l418 0182  
                                                     l530 0E9E  
                                                     l427 0E4A  
                                                     l188 0F35  
                                                     l364 0338  
                                                     l533 0DB3  
                                                     l197 0FCF  
                                                     l517 0DAB  
                                                     l509 0205  
                                                     l381 0E0B  
                                                     l365 0339  
                                                     l542 0DBC  
                                                     l446 0393  
                                                     l551 0DB9  
                                                     l391 0E76  
                                                     l447 03BB  
                                                     l375 009E  
                                                     l536 0DC5  
                                                     l560 0DD4  
                                                     l464 0262  
                                                     l369 007F  
                                                     l634 00C0  
                                                     l554 0DBF  
                                                     l458 0E42  
                                                     l482 0DE3  
                                                     l563 0DD0  
                                                     l539 0DD9  
                                                     l491 0DF2  
                                                     l803 0F9E  
                                                     l388 0EBE  
                                                     l548 0DC2  
                                                     l804 0F9F  
                                                     l581 0DB0  
                                                     l557 0E29  
                                                     l485 0DE8  
                                                     l397 0E90  
                                                     l494 0DF7  
                                                     l591 0E2F  
                                                     l823 07E7  
                                                     l760 01D2  
                                                     l584 0DC8  
                                                     l488 0DED  
                                                     l673 0E17  
                                                     l497 0DFC  
                                                     l817 073A  
                                                     l762 01C3  
                                                     l578 0DB6  
                                                     l842 0048  
                                                     l850 0FFF  
                                                     l763 01C4  
                                                     l771 0157  
                                                     l587 0E2A  
                                                     l764 01D8  
                                                     l676 0E1D  
                                                     l860 0063  
                                                     l765 01D9  
                                                     l845 0F88  
                                                     l782 0F5D  
                                                     l679 0E11  
                                                     l791 0185  
                                                     l855 0FE7  
                                                     l776 0F49  
                                                     l768 00E4  
                                                     l864 040B  
                                                     l785 0233  
                                                     l779 0108  
                                                     l795 01AD  
                                                     l788 0601  
                                                     l876 0511  
                                                     l986 0F72  
                                  _I2C_MasterWaitForEvent 0E2A  
                          ?_EUSART_SetFramingErrorHandler 0070  
                                            ___awmod@sign 0076  
                                                     wreg 0009  
                            ??_I2C_SetAddressNackCallback 0078  
                                  _I2C_Write1ByteRegister 0263  
                                ??_I2C_CallbackReturnStop 007A  
                                            _I2C_DO_RESET 0E02  
                                                    l1113 0570  
                                 ??_rd2RegCompleteHandler 007A  
                                                    l1126 045E  
                                                    l1240 0375  
                                                    l3000 0E43  
                                                    l1250 02C9  
                                                    l3002 0E45  
                                                    l3004 0E49  
                                                    l3020 0470  
                                                    l3012 0468  
                                                    l3030 04A5  
                                                    l3110 0E02  
                                                    l3032 04B0  
                                                    l3016 046C  
                                                    l3008 045F  
                                                    l3104 0DF3  
                                                    l3112 0E04  
                                                    l3120 01DC  
                                                    l3200 030C  
                                                    l3034 04B2  
                                                    l3026 0474  
                                                    l3050 0391  
                                                    l3042 0376  
                                                    l3106 0DF6  
                                                    l3114 0E05  
                                                    l3122 01E1  
                                                    l3210 031D  
                                                    l3202 030D  
                                                    l3028 0499  
                                                    l3060 0399  
                                                    l3044 0380  
                                                    l3132 01E9  
                                                    l3140 0158  
                                                    l3220 0331  
                                                    l3212 0322  
                                                    l3204 030E  
                                                    l3300 027B  
                                                    l3310 0E18  
                                                    l3150 0DB7  
                                                    l3046 0384  
                                                    l3126 01E5  
                                                    l3118 01DA  
                                                    l3142 015B  
                                                    l3230 0E07  
                                                    l3222 0334  
                                                    l3214 0326  
                                                    l3206 0317  
                                                    l3302 0283  
                                                    l3320 013F  
                                                    l3312 0E0C  
                                                    l3240 0070  
                                                    l3080 0234  
                                                    l3056 0395  
                                                    l3048 038E  
                                                    l3072 0E3C  
                                                    l3144 0160  
                                                    l3152 0E77  
                                                    l3160 0E91  
                                                    l3224 0337  
                                                    l3216 032B  
                                                    l3208 031C  
                                                    l3304 028A  
                                                    l3400 053B  
                                                    l3322 0145  
                                                    l3314 0131  
                                                    l3242 0073  
                                                    l3234 0064  
                                                    l3082 0237  
                                                    l3066 039D  
                                                    l3074 0E3E  
                                                    l3146 0168  
                                                    l3154 0E78  
                                                    l3162 0E96  
                                                    l3218 032C  
                                                    l3306 028D  
                                                    l3410 0557  
                                                    l3402 053F  
                                                    l3330 0183  
                                                    l4050 060B  
                                                    l3260 01C8  
                                                    l3252 01AE  
                                                    l3324 0150  
                                                    l3316 0131  
                                                    l3308 0E12  
                                                    l3500 00B0  
                                                    l3172 0DB4  
                                                    l3244 0076  
                                                    l3236 006B  
                                                    l3092 0240  
                                                    l3076 0E41  
                                                    l3148 016D  
                                                    l3156 0E7B  
                                                    l3180 0089  
                                                    l3164 0E9A  
                                                    l3228 0E84  
                                                    l3412 055C  
                                                    l3404 0543  
                                                    l3340 0196  
                                                    l4060 0614  
                                                    l4052 060E  
                                                    l4044 0602  
                                                    l3254 01B0  
                                                    l3318 0138  
                                                    l3510 00C9  
                                                    l3502 00B7  
                                                    l3174 0DB1  
                                                    l3246 0079  
                                                    l3238 006C  
                                                    l3086 023B  
                                                    l3158 0E7E  
                                                    l3190 0099  
                                                    l3182 008A  
                                                    l3166 0E9B  
                                                    l3406 0552  
                                                    l3414 0562  
                                                    l3430 0418  
                                                    l3422 040C  
                                                    l3270 0F6A  
                                                    l3262 0F5F  
                                                    l3326 0F4B  
                                                    l3350 01AB  
                                                    l3342 01A0  
                                                    l4070 062F  
                                                    l4062 061A  
                                                    l4054 0610  
                                                    l4046 0608  
                                                    l3256 01B5  
                                                    l3512 00D0  
                                                    l3504 00BE  
                                                    l3248 007E  
                                                    l3088 023E  
                                                    l3184 008F  
                                                    l3192 009C  
                                                    l3176 0082  
                                                    l3168 0E9D  
                                                    l3280 02D7  
                                                    l3416 0567  
                                                    l3408 0556  
                                                    l3440 042F  
                                                    l3432 041C  
                                                    l3424 040D  
                                                    l3272 0F71  
                                                    l3264 0F60  
                                                    l3344 01A6  
                                                    l3336 018A  
                                                    l3360 0F96  
                                                    l3600 003C  
                                                    l4080 064C  
                                                    l4072 0632  
                                                    l4064 061D  
                                                    l4056 0612  
                                                    l4048 060A  
                                                    l3258 01C1  
                                                    l3514 00D6  
                                                    l3506 00C2  
                                                    l3098 0244  
                                                    l3186 0092  
                                                    l3178 0088  
                                                    l3290 02FD  
                                                    l3282 02E3  
                                                    l3418 056C  
                                                    l3450 044A  
                                                    l3442 0433  
                                                    l3434 0421  
                                                    l3426 0411  
                                                    l3266 0F64  
                                                    l3530 05B9  
                                                    l3522 0571  
                                                    l3338 018F  
                                                    l3362 0F9A  
                                                    l3354 0F89  
                                                    l3602 0041  
                                                    l3370 0F87  
                                                    l4082 0660  
                                                    l4066 0627  
                                                    l4074 0635  
                                                    l4058 0613  
                                                    l3516 00DD  
                                                    l3508 00C2  
                                                    l3460 0016  
                                                    l2900 0005  
                                                    l4180 03AD  
                                                    l3188 0096  
                                                    l3196 0301  
                                                    l3284 02EB  
                                                    l3276 02CC  
                                                    l3380 0513  
                                                    l3444 0437  
                                                    l3436 0427  
                                                    l3452 0450  
                                                    l3428 0416  
                                                    l3268 0F68  
                                                    l3532 05D1  
                                                    l3524 0592  
                                                    l3356 0F8C  
                                                    l3540 06A7  
                                                    l3700 050E  
                                                    l3372 0FD0  
                                                    l3604 0045  
                                                    l3364 0F74  
                                                    l3620 0FF5  
                                                    l3612 0FE9  
                                                    l4092 0692  
                                                    l4084 0675  
                                                    l4076 063A  
                                                    l4068 062C  
                                                    l3470 0025  
                                                    l3462 001A  
                                                    l3710 034A  
                                                    l3702 033A  
                                                    l2830 0121  
                                                    l2910 0EC7  
                                                    l2902 000D  
                                                    l4182 0489  
                                                    l3198 0308  
                                                    l3286 02F2  
                                                    l3278 02CD  
                                                    l3294 0265  
                                                    l3390 0527  
                                                    l3382 0517  
                                                    l3454 0455  
                                                    l3446 0441  
                                                    l3438 042A  
                                                    l3534 05E9  
                                                    l3526 059A  
                                                    l3518 0207  
                                                    l3358 0F8D  
                                                    l3550 06C4  
                                                    l3542 06B1  
                                                    l3374 0FDF  
                                                    l3630 004B  
                                                    l3366 0F79  
                                                    l3622 0FF9  
                                                    l4094 0695  
                                                    l4086 067E  
                                                    l4078 0642  
                                                    l3480 0E54  
                                                    l3472 0027  
                                                    l3464 001D  
                                                    l3640 0E9F  
                                                    l3720 0366  
                                                    l3712 034E  
                                                    l3704 033C  
                                                    l2840 0DBA  
                                                    l2832 0EB0  
                                                    l2912 0ECE  
                                                    l2904 0014  
                                                    l4184 0254  
                                                    l3288 02F5  
                                                    l3296 0265  
                                                    l3392 052B  
                                                    l3384 051C  
                                                    l3456 045A  
                                                    l3448 0445  
                                                    l3528 05A2  
                                                    l3552 06C5  
                                                    l3544 06B7  
                                                    l3560 0735  
                                                    l3536 069D  
                                                    l3632 0058  
                                                    l3624 0049  
                                                    l3608 0047  
                                                    l3368 0F85  
                                                    l4096 0698  
                                                    l4088 0687  
                                                    l3650 0F3F  
                                                    l3642 0F36  
                                                    l3482 0E59  
                                                    l3490 0E21  
                                                    l3474 0029  
                                                    l3466 001F  
                                                    l3722 036B  
                                                    l3714 0352  
                                                    l3706 0342  
                                                    l3730 029C  
                                                    l2842 0DBD  
                                                    l2834 0EB5  
                                                    l2826 010A  
                                                    l2850 0EDF  
                                                    l2922 0E24  
                                                    l2930 0DE2  
                                                    l4178 01FD  
                                                    l3298 026F  
                                                    l3394 052D  
                                                    l3386 051E  
                                                    l3378 0512  
                                                    l3570 0782  
                                                    l3562 073E  
                                                    l3554 06C9  
                                                    l3546 06B8  
                                                    l3538 069D  
                                                    l3634 005C  
                                                    l3618 0FEA  
                                   __end_of_ds18b20_start 0049  
                                                    l3652 0F43  
                                                    l3484 0E5A  
                                                    l3476 002A  
                                                    l3468 0021  
                                                    l3492 0DC9  
                                                    l3716 0361  
                                                    l3708 0345  
                                                    l3724 0371  
                                                    l3740 02B6  
                                                    l3732 029F  
                                                    l2836 0EBD  
                                                    l2828 0110  
                                                    l2908 0EBF  
                                                    l2916 0FB8  
                                                    l2844 0DCD  
                                                    l2940 0DEE  
                                                    l3396 0533  
                                                    l3388 0522  
                                                    l3564 074F  
                                                    l3572 0786  
                                                    l3556 06F9  
                                                    l3548 06BE  
                                                    l3636 0062  
                                                    l3660 03C4  
                                                    l3654 00E5  
                                                    l3494 009F  
                                                    l3486 0E5C  
                                                    l3478 002C  
                                                    l3718 0365  
                                                    l3742 02BA  
                                                    l3734 02A4  
                                                    l2838 0E6A  
                                                    l2846 0ED0  
                                                    l2854 0EE1  
                                                    l2862 0EF2  
                                                    l2870 0F03  
                                                    l2918 0FCE  
                                                    l2950 0DD1  
                                                    l2926 0DD6  
                                                    l2934 0DE4  
                                                    l2942 0DF1  
                                                    l3398 0536  
                                                    l3590 07E6  
                                                    l3574 0797  
                                                    l3582 07CB  
                                                    l3566 0752  
                                                    l3558 0728  
                                                    l3648 0F37  
                                                    l3656 00ED  
                                                    l3496 00A8  
                                                    l3488 0E1E  
                                                    l3744 02BF  
                                                    l3736 02A8  
                                                    l3728 0296  
                                                    l2848 0ED8  
                                                    l2856 0EE9  
                                                    l2864 0EFA  
                                                    l2872 0F0B  
                                                    l2880 0FB6  
                                                    l2928 0DDF  
                                                    l2936 0DE7  
                                                    l2960 0DFB  
                                                    l2952 0DFD  
                                                    l3584 07D0  
                                                    l3576 079A  
                                                    l3568 076A  
                                                    l3680 040A  
                                                    l3664 03C6  
                                                    l3498 00A9  
                                                    l3738 02AC  
                                                    l3746 02C5  
                                                    l2858 0EF0  
                                                    l2866 0F01  
                                                    l2874 0F12  
                                                    l2946 0DC3  
                                                    l2954 0E00  
                                                    l3586 07D9  
                                                    l3578 07B2  
                                                    l3690 04C5  
                                                    l3594 002F  
                                                    l3674 03DE  
                                                    l3666 03CE  
                                                    l3658 03BD  
                                                    l2884 0F14  
                                                    l2892 0F25  
                                                    l2964 0DC0  
                                                    l2972 0DC6  
                                                    l3588 07E5  
                                                    l3692 04DD  
                                                    l3684 04B4  
                                                    l3596 0033  
                                                    l3676 03E6  
                                                    l3668 03D6  
                                                    l2982 0DAE  
                                                    l2878 0FA0  
                                                    l2886 0F1C  
                                                    l2894 0F2D  
                                                    l2974 0DAA  
                                                    l2966 0DE9  
                                                    l2958 0DF8  
                                                    l3694 04E6  
                                                    l3686 04B9  
                                                    l3598 0036  
                                                    l3678 03F2  
                                                    l2888 0F23  
                                                    l2896 0F34  
                                                    l2984 0DDA  
                                                    l2992 0E4B  
                                                    l2968 0DEC  
                                                    l3696 04F7  
                                                    l3688 04C2  
                                                    l2978 0DAC  
                                                    l2986 0DDC  
                                                    l2994 0E4D  
                                                    l3698 0501  
                                                    l2988 0DDD  
                                                    l2996 0E52  
                                   __size_of_Write_Digits 0029  
                                   __size_of_Write_Comand 0024  
                                                    u2000 0F49  
                                                    u2001 0F48  
                                                    u2010 03C4  
                                                    u2011 03C3  
                                                    u2020 03D6  
                                                    u2021 03D5  
                                                    u2110 0361  
                                                    u2030 03DD  
                                                    u2111 0360  
                                                    u2031 03DC  
                                                    u1320 0110  
                                                    u1400 0E83  
                                                    u2040 04B9  
                                                    u2105 0353  
                                                    u1321 010F  
                                                    u1401 0E82  
                                                    u2041 04B8  
                                                    u2130 0371  
                                                    u1330 0EB5  
                                                    u1410 0E96  
                                                    u2050 04C2  
                                                    u2131 0370  
                                                    u2115 035D  
                                                    u1331 0EB4  
                                                    u1411 0E95  
                                                    u2051 04C1  
                                                    u2140 029C  
                                                    u1340 0467  
                                                    u1420 0088  
                                                    u1500 02D7  
                                                    u2060 04E6  
                                                    u2125 0367  
                                                    u2141 029B  
                                                    u1341 0466  
                                                    u1421 0087  
                                                    u1501 02D6  
                                                    u2061 04E5  
                                                    _LATA 010C  
                                                    u2070 0342  
                                                    u1350 04B0  
                                                    u1430 008F  
                                                    u1510 02FD  
                                                    _LATB 010D  
                                                    u2071 0341  
                                                    u1351 04AF  
                                                    u1431 008E  
                                                    u1511 02FC  
                                                    _LATC 010E  
                                                    u2160 02AC  
                                                    u1360 038E  
                                                    u1440 0308  
                                                    u1520 026F  
                                                    u1600 0F9E  
                                                    u2161 02AB  
                                                    u1361 038D  
                                                    u1441 0307  
                                                    u1521 026E  
                                                    u1601 0F9D  
                                                    u2090 0352  
                                                    u2170 02B6  
                                                    u1450 006B  
                                                    u1370 0E2F  
                                                    u1530 0295  
                                                    u1610 0F7F  
                                                    u2091 0351  
                                                    u2171 02B5  
                                                    u2155 02A0  
                                                    u1451 006A  
                                                    u1371 0E2E  
                                                    u1531 0294  
                                                    u1611 0F7C  
                                                    u1460 01C1  
                                                    u1380 0160  
                                                    u1700 0552  
                                                    u1461 01C0  
                                                    u2085 0346  
                                                    u1381 015F  
                                                    u1701 0551  
                                                    u1470 01D8  
                                                    u2190 02C5  
                                                    u1390 0168  
                                                    u1550 018A  
                                                    u1471 01D7  
                                                    u2191 02C4  
                                                    u2175 02B2  
                                                    u1391 0167  
                                                    u1551 0189  
                                                    u1720 0562  
                                                    u1640 0517  
                                                    u1480 0F64  
                                                    u1560 01A0  
                                                    u1624 0F81  
                                                    u2185 02BB  
                                                    u1721 0561  
                                                    u1705 054E  
                                                    u1641 0516  
                                                    u1481 0F63  
                                                    u1545 0F55  
                                                    u1561 019F  
                                                    u1730 0567  
                                                    u1650 0522  
                                                    u1810 0450  
                                                    u1490 0F71  
                                                    u1570 01A6  
                                                    u1731 0566  
                                                    u1715 0558  
                                                    u1651 0521  
                                                    u1811 044F  
                                                    u1491 0F70  
                                                    u1571 01A5  
                                                    u1635 0FDF  
                                                    u1660 0533  
                                                    u1820 0455  
                                                    u1740 0411  
                                                    u1580 0F96  
                                                    u1900 073A  
                                                    u2540 061A  
                                                    u1661 0532  
                                                    u1821 0454  
                                                    u1805 0446  
                                                    u1741 0410  
                                                    u1581 0F95  
                                                    u1901 0739  
                                                    u2541 0619  
                                                    u1750 041C  
                                                    u1590 0F9A  
                                                    u1910 073E  
                                                    u2550 0627  
                                                    u1751 041B  
                                                    u1591 0F99  
                                                    u1911 073D  
                                                    u2607 0034  
                                                    u2551 0626  
                                                    u1680 0543  
                                                    u1760 0427  
                                                    u1920 07D0  
                                                    u1840 06A6  
                                                    u2560 063A  
                                                    u1681 0542  
                                                    u1761 0426  
                                                    u1921 07CF  
                                                    u1841 06A5  
                                                    u2617 0039  
                                                    u2561 0639  
                                                    u1930 07D9  
                                                    u1850 06B1  
                                                    u2570 0642  
                                                    u1675 0537  
                                                    u1835 022D  
                                                    u1931 07D8  
                                                    u1851 06B0  
                                                    u2627 0042  
                                                    u2571 0641  
                                                    u1780 0437  
                                                    u1940 07E5  
                                                    u1860 06B7  
                                                    u2580 0691  
                                                    u1781 0436  
                                                    u1941 07E4  
                                                    u1861 06B6  
                                                    u2637 0FE0  
                                                    u2581 0690  
                                                    u1790 0441  
                                                    u1870 06BE  
                                                    u1950 0041  
                                                    u1695 0544  
                                                    u1791 0440  
                                                    u1775 042B  
                                                    u2647 072E  
                                                    u1871 06BD  
                                                    u1951 0040  
                                                    u1880 06C4  
                                                    u2657 0192  
                                                    u1881 06C3  
                                                    u1890 06C9  
                                                    u1970 0FFF  
                                                    u1795 043D  
                                                    u1891 06C8  
                                                    u1971 0FFE  
                                                    u1964 0FEF  
                                                    u2597 0F82  
                                                    u1965 0FEE  
                                                    u1990 0062  
                                                    u1991 0061  
                                                    u1984 0052  
                                                    u1985 0051  
                                                    _WPUA 020C  
                                                    _WPUB 020D  
                                 ??_wr2RegCompleteHandler 007A  
                                                    _edit 069C  
                                                    _main 0602  
                                ?_I2C_CallbackReturnReset 0079  
                                                    _hour 0049  
                                                    fsr0h 0005  
                                                    fsr1h 0007  
                                                    indf0 0000  
                                                    fsr0l 0004  
                                                    indf1 0001  
                                                    fsr1l 0006  
                                        __end_of_I2C_Open 033A  
                                                    btemp 007E  
                                                    start 0002  
   __end_of_rd1RegCompleteHandler@i2c_master_example$F143 0F25  
  __size_of_rd1RegCompleteHandler@i2c_master_example$F143 0011  
           _rd1RegCompleteHandler@i2c_master_example$F143 0F14  
   __end_of_wr1RegCompleteHandler@i2c_master_example$F160 0016  
  __size_of_wr1RegCompleteHandler@i2c_master_example$F160 0011  
           _wr1RegCompleteHandler@i2c_master_example$F160 0005  
   __end_of_rd2RegCompleteHandler@i2c_master_example$F154 0F36  
  __size_of_rd2RegCompleteHandler@i2c_master_example$F154 0011  
           _rd2RegCompleteHandler@i2c_master_example$F154 0F25  
   __end_of_wr2RegCompleteHandler@i2c_master_example$F166 0ED0  
  __size_of_wr2RegCompleteHandler@i2c_master_example$F166 0011  
           _wr2RegCompleteHandler@i2c_master_example$F166 0EBF  
 __end_of_rdBlkRegCompleteHandler@i2c_master_example$F177 0FD0  
__size_of_rdBlkRegCompleteHandler@i2c_master_example$F177 0018  
         _rdBlkRegCompleteHandler@i2c_master_example$F177 0FB8  
                                       ___bmul@multiplier 0073  
                              __end_of_display_digitalCLK 0512  
                        __size_of_rdBlkRegCompleteHandler 0018  
                     ?_wr2RegCompleteHandler@xxtofl$F1623 0079  
                    ??_wr2RegCompleteHandler@xxtofl$F1625 007A  
                     ?_rd2RegCompleteHandler@xxtofl$F1617 0079  
                    ??_rd2RegCompleteHandler@xxtofl$F1619 007A  
                                  __end_of_decimal_to_bcd 0234  
                                        ?_I2C_MasterClose 0070  
                     __size_of_I2C_SetAddressNackCallback 000D  
                          __size_of_OSCILLATOR_Initialize 0006  
                                        ?_I2C_MasterStart 0070  
                                           _I2C_DO_RX_ACK 0DF3  
                                        ?_I2C_MasterWrite 0070  
                           __end_of_OSCILLATOR_Initialize 0E24  
                                    Write_Digits@Position 0050  
                                                   ?_edit 007C  
                                                   ?_main 0070  
                                        _ds18b20_read_bit 0FD0  
                                         __end_of___awdiv 0571  
                                         __end_of___awmod 045F  
                                   _I2C_Read1ByteRegister 02CA  
                                         ___awdiv@divisor 0070  
                                                   _T1CON 0018  
                                         __end_of___lwdiv 0376  
                                         __end_of___lwmod 02CA  
                                         ___awdiv@counter 0075  
                                                   _RCREG 0199  
                            __size_of_I2C_DO_RX_NACK_STOP 0005  
                                                   _RCSTA 019D  
                                                   _TMR1H 0017  
                                                   _TMR1L 0016  
                                            _Write_Digits 012F  
                                       ??_I2C_DO_TX_EMPTY 007A  
                                                   _TRISA 008C  
                                                   _TRISB 008D  
                                                   _TRISC 008E  
                                            _Write_Comand 00C1  
                                                   _TXREG 019A  
                                                   _TXSTA 019E  
                                       __end_of_I2C_DO_RX 03BC  
                                       __end_of_I2C_DO_TX 04B4  
                                                   _delay 0F89  
                                          _WDT_Initialize 0DC9  
                                                   _count 0046  
                                       __end_of_I2C_Close 0080  
                                  __size_of_I2C_MasterFsm 002B  
                          I2C_MasterOperation@returnValue 0054  
                                 _I2C_MasterEnableRestart 0DBA  
                                                   pclath 000A  
                                        ?_I2C_SetCallback 0070  
                            I2C_SetAddressNackCallback@cb 0075  
                                    __end_of_MAX7219_Init 0109  
                                                   status 0003  
                                                   wtemp0 007E  
                                       ?_I2C_DO_SEND_STOP 0070  
                                  __size_of_I2C_SetBuffer 0010  
                                      ??_I2C_DO_SEND_STOP 0070  
                                         __initialization 07E8  
                                        Write_Digits@temp 0051  
                                            __end_of_edit 07E8  
                                            __end_of_main 069C  
                       __size_of_I2C_DO_SEND_RESTART_READ 0005  
                               ?_I2C_DO_SEND_RESTART_READ 0070  
                                         ?_decimal_to_bcd 0070  
                                          ?_I2C_DO_RX_ACK 0070  
                                                  ??_edit 0053  
                                                  ??_main 005E  
                                          _minute_unitRow 0042  
                                       ?_I2C_MasterIsNack 0070  
                                        Write_Comand@Data 0076  
                                       ?_I2C_MasterSetIrq 0070  
                                 Write_Digits@valueDigits 0079  
                                      ??_I2C_MasterIsNack 0070  
                                        Write_Comand@temp 007A  
                                  __end_of_WDT_Initialize 0DCD  
                              ds18b20_read@raw_temp_value 0079  
                                      ??_I2C_MasterSetIrq 0070  
                                                  ?_delay 0070  
                       _EUSART_DefaultFramingErrorHandler 0000  
                              _EUSART_OverrunErrorHandler 006B  
                         __end_of_I2C_CallbackReturnReset 0DAE  
                                       _ds18b20_read_byte 0049  
                         __size_of_I2C_CallbackReturnStop 0002  
                                        ___awdiv@dividend 0072  
                                                  _APFCON 011D  
                           I2C_SetDataCompleteCallback@cb 0075  
                                                  _ANSELA 018C  
                                                  _ANSELB 018D  
                                                  _ANSELC 018E  
                                                  _BORCON 0116  
                                            ??_I2C_Poller 007D  
                                      ?_ds18b20_read_byte 0070  
                                                  _OSCCON 0099  
                                                  _SPBRGH 019C  
                                                  _TMR1ON 00C0  
                                                  _SPBRGL 019B  
                                                  _WDTCON 0097  
                              __end_of_ds18b20_write_byte 1000  
                                rdBlkRegCompleteHandler@p 0079  
                                        __end_of_debounce 01AE  
                                     _I2C_MasterGetRxData 0DC3  
                                     ??_ds18b20_read_byte 0070  
                                     ds18b20_write_byte@i 0073  
                                                  ___bmul 0F5E  
                                           _I2C_MasterFsm 0158  
                                               ??___awdiv 0074  
                                               ??___awmod 0074  
                                                  _digits 005F  
                                               ??___lwdiv 0074  
                                               ??___lwmod 0074  
                                       I2C_SetCallback@cb 0070  
                                        ___awdiv@quotient 0077  
                                                  _minute 004A  
                                                  _second 0047  
                                         ___awmod@divisor 0070  
                                  ?_I2C_Read1ByteRegister 0055  
                                 __size_of_I2C_MasterOpen 000E  
                                 __size_of_I2C_MasterStop 0003  
                                         ___awmod@counter 0075  
                                 __size_of_I2C_Initialize 000A  
                                           _I2C_SetBuffer 0EAF  
                                      __end_of_I2C_Poller 0E84  
                            __end_of_I2C_MasterDisableIrq 0DB7  
                                     _I2C_DO_ADDRESS_NACK 01DA  
                                   __end_of_MAX7219_CLEAR 0F4A  
                                 ds18b20_write_byte@value 0072  
                                    ?_I2C_MasterGetRxData 0070  
                                               ?_I2C_Open 0070  
                      __end_of_I2C_SetAddressNackCallback 0E91  
                              _I2C_SetAddressNackCallback 0E84  
                                         ?_WDT_Initialize 0070  
                               __end_of_ds18b20_read_byte 0064  
                               ??_I2C_MasterEnableRestart 0070  
                                       _ds18b20_write_bit 0F73  
                                     Write_Comand@Address 0079  
                                      ?_ds18b20_write_bit 0070  
                                       _SYSTEM_Initialize 0E9F  
                                 __end_of__initialization 07FD  
                                            ?_RTC_Display 0070  
                                     _I2C_MasterOperation 0080  
                                      __size_of_WriteBits 002C  
                                      ?_SYSTEM_Initialize 0070  
                                    ?_I2C_DO_ADDRESS_NACK 0070  
                                     ??_ds18b20_write_bit 0070  
                                     ___bmul@multiplicand 0070  
                                 _rdBlkRegCompleteHandler 0FA0  
                                          __pcstackCOMMON 0070  
                                          ?_I2C_MasterFsm 0070  
                                         ??_I2C_DO_RX_ACK 0070  
                                            __pidataBANK0 0E5E  
                                  _I2C_CallbackReturnStop 0DAA  
                                     ??_SYSTEM_Initialize 0072  
                                           __end_of_delay 0FA0  
                                          ?_I2C_SetBuffer 0070  
                                 ?_I2C_MasterWaitForEvent 0070  
                          __size_of_I2C_DO_SEND_ADR_WRITE 0008  
                      __size_of_I2C_DO_SEND_RESTART_WRITE 0005  
                           __end_of_I2C_DO_SEND_ADR_WRITE 0E4B  
                              ?_I2C_DO_SEND_RESTART_WRITE 0070  
                                    ?_I2C_MasterOperation 0070  
                                           ?_ds18b20_read 0070  
                                   ??_I2C_MasterGetRxData 0070  
                                 ?_I2C_Write1ByteRegister 0055  
                                          _OPTION_REGbits 0095  
                                              ??_I2C_Open 0070  
                               __end_of_ds18b20_write_bit 0F89  
                              __end_of_I2C_MasterClearIrq 0DB1  
                         ??_EUSART_SetOverrunErrorHandler 0072  
                                                 ??_delay 0070  
                                   __size_of_MAX7219_Init 0024  
                               __end_of_SYSTEM_Initialize 0EAF  
                                       _I2C_MasterSendAck 0DD1  
                                              __pbssBANK0 0020  
                                           ??_I2C_DO_IDLE 0070  
                          __size_of_rd2RegCompleteHandler 0011  
                                           ??_I2C_DO_RCEN 0070  
                           __end_of_rd2RegCompleteHandler 0F03  
                            __end_of_I2C_MasterSendTxData 0DDA  
                                      ?_I2C_MasterSendAck 0070  
                                       _I2C_MasterStartRx 0DC0  
                                __end_of_ds18b20_read_bit 0FE8  
                          __size_of_wr2RegCompleteHandler 0011  
                                   ??_I2C_DO_ADDRESS_NACK 007A  
                           __end_of_wr2RegCompleteHandler 0F14  
                                     _I2C_DO_RX_NACK_STOP 0DF8  
                                              WriteBits@i 0074  
                                   _rd1RegCompleteHandler 0EE1  
                                      ?_I2C_MasterStartRx 0070  
                              __end_of_I2C_MasterSendNack 0DD1  
                                          MAX7219_CLEAR@j 007D  
                                   _wr1RegCompleteHandler 0ED0  
                                              __pmaintext 0602  
                                     ??_I2C_MasterSendAck 0070  
                                                 ?___bmul 0070  
                                      ds18b20_read_byte@i 0073  
                             __end_of_I2C_DO_SEND_RESTART 0DEE  
                                         _I2C_DO_TX_EMPTY 0234  
                                     I2C_SetBuffer@buffer 0073  
                          __end_of_I2C_MasterWaitForEvent 0E30  
                                     ??_I2C_MasterStartRx 0070  
                           __size_of_I2C_DO_SEND_ADR_READ 0009  
                                                 _BAUDCON 019F  
                        __size_of_I2C_CallbackReturnReset 0002  
                                          ??_ds18b20_read 0074  
                                   ??_I2C_MasterOperation 007D  
                          I2C_SetDataCompleteCallback@ptr 0077  
                          __end_of_I2C_Write1ByteRegister 0296  
                                            _MAX7219_Init 00E5  
                                ??_I2C_DO_RX_NACK_RESTART 0070  
                                       __end_of_WriteBits 01DA  
                       __end_of_I2C_DO_SEND_RESTART_WRITE 0DE9  
                                    ?_I2C_DO_RX_NACK_STOP 0070  
                                      _display_digitalCLK 04B4  
                                               ?_debounce 0070  
                              __size_of_ds18b20_read_byte 001B  
                                 __size_of_bcd_to_decimal 0014  
                               __end_of_I2C_MasterSendAck 0DD5  
                                                 _SSP1ADD 0212  
                                                 _SSP1BUF 0211  
                                ??_EUSART_SetErrorHandler 0072  
                                     ?_display_digitalCLK 0070  
                               __end_of_I2C_MasterStartRx 0DC3  
                                    I2C_Close@returnValue 0071  
                            ?_I2C_SetDataCompleteCallback 0075  
                                               _I2C_DO_RX 0376  
                                               _I2C_DO_TX 045F  
                        __end_of_I2C_DO_SEND_RESTART_READ 0DE4  
                            I2C_Read1ByteRegister@address 0057  
                                               _I2C_Close 0064  
                               ??_rdBlkRegCompleteHandler 007A  
                                    _I2C_MasterDisableIrq 0DB4  
                                         ??_I2C_MasterFsm 0050  
                                        ??_decimal_to_bcd 0050  
                                     __end_of_I2C_DO_IDLE 0DDF  
                                     __end_of_I2C_DO_RCEN 0E43  
                                  ds18b20_read_byte@value 0072  
                                         __size_of___bmul 0015  
                                                 ___awdiv 0512  
                                                 ___awmod 040C  
                                         ??_I2C_SetBuffer 0072  
                                    ??_display_digitalCLK 005C  
                                                 ___lwdiv 033A  
                                                 ___lwmod 0296  
                                 I2C_SetBuffer@bufferSize 0070  
                                          _I2C_MasterOpen 0E91  
                                  __size_of_ds18b20_start 001A  
                                          _I2C_MasterStop 0DBD  
                                          _I2C_Initialize 0E54  
                                           edit@parameter 007C  
                               __size_of_I2C_DO_SEND_STOP 0005  
                                                 __ptext1 03BC  
                                                 __ptext2 0FE8  
                                                 __ptext3 0F73  
                                                 __ptext4 002F  
                                                 __ptext5 0049  
                                                 __ptext6 0FD0  
                                                 __ptext7 04B4  
                                                 __ptext8 069C  
                                                 __ptext9 0F89  
                                   ??_I2C_DO_RX_NACK_STOP 0070  
                                   _OSCILLATOR_Initialize 0E1E  
                                        ___awmod@dividend 0072  
                                      I2C_SetCallback@idx 0074  
                                __size_of_I2C_MasterClose 0003  
                                              ??_debounce 0072  
                              __size_of_ds18b20_write_bit 0016  
                                ??_PIN_MANAGER_Initialize 0070  
                           I2C_CallbackReturnReset@funPtr 0079  
                                      I2C_SetCallback@ptr 0072  
                               I2C_Write1ByteRegister@reg 0055  
                                __size_of_I2C_MasterStart 0003  
                                __size_of_I2C_MasterWrite 0005  
                                           debounce@count 0073  
                                               _MA_DS1307 004B  
                              __size_of_SYSTEM_Initialize 0010  
                                                 clrloop0 0E31  
                                                 _sys_cnt 003D  
                                    end_of_initialization 07FD  
                                              ?_I2C_DO_RX 0070  
                                              ?_I2C_DO_TX 0070  
                   __end_of_EUSART_SetOverrunErrorHandler 0E1E  
                  __size_of_EUSART_SetOverrunErrorHandler 0006  
                           _EUSART_SetOverrunErrorHandler 0E18  
                               __size_of_I2C_MasterIsNack 0006  
                                                 init_ram 0E36  
                                              ?_I2C_Close 0070  
                                  ?_rd1RegCompleteHandler 0079  
                                                 initloop 0E37  
                                 __end_of_I2C_DO_TX_EMPTY 0263  
                               __size_of_I2C_MasterSetIrq 0003  
                                   ?_I2C_MasterDisableIrq 0070  
                                       _EUSART_Initialize 009F  
                                  ?_wr1RegCompleteHandler 0079  
                                    __size_of_RTC_Display 0091  
                                      ?_EUSART_Initialize 0070  
                                __size_of_I2C_SetCallback 0026  
                                               _RCSTAbits 019D  
                                 ??_I2C_Read1ByteRegister 0056  
                                  __end_of_I2C_MasterOpen 0E9F  
                                  __end_of_I2C_MasterStop 0DC0  
                                  __end_of_I2C_Initialize 0E5E  
                                      _ds18b20_write_byte 0FE8  
                                     ??_EUSART_Initialize 0072  
                                        ??_WDT_Initialize 0070  
                                               _PORTAbits 000C  
                                               _PORTCbits 000E  
                         __end_of_rdBlkRegCompleteHandler 0FB8  
                                    _I2C_MasterSendTxData 0DD5  
                         __size_of_I2C_DO_RX_NACK_RESTART 0005  
                                     ?_ds18b20_write_byte 0070  
                             ?_I2C_SetAddressNackCallback 0075  
                                               _TRISAbits 008C  
                                               _TRISCbits 008E  
                              __size_of_I2C_MasterSendAck 0004  
                                       __size_of_I2C_Open 003A  
                         __size_of_EUSART_SetErrorHandler 0006  
                              __size_of_I2C_MasterStartRx 0003  
                                           _ds18b20_start 002F  
                               __end_of_EUSART_Initialize 00C1  
                                             _I2C_DO_IDLE 0DDA  
                                             _I2C_DO_RCEN 0E3C  
                                    __end_of_ds18b20_read 040C  
                           I2C_Write1ByteRegister@address 0058  
                                               _TXSTAbits 019E  
                                    ??_ds18b20_write_byte 0071  
                                 ?_I2C_CallbackReturnStop 0079  
                                _I2C_DO_SEND_RESTART_READ 0DDF  
                            I2C_CallbackReturnStop@funPtr 0079  
                                         ?_I2C_MasterOpen 0070  
                                         ?_I2C_MasterStop 0070  
                                         ?_I2C_Initialize 0070  
                                 _I2C_CallbackReturnReset 0DAC  
                                I2C_Read1ByteRegister@reg 0055  
                                          __end_of___bmul 0F73  
                              _EUSART_DefaultErrorHandler 0000  
                    __size_of_I2C_SetDataCompleteCallback 000D  
                                   ?_I2C_MasterSendTxData 0070  
                                  ?_OSCILLATOR_Initialize 0070  
                                           __pbitbssBANK0 0378  
                             ??_I2C_DO_SEND_RESTART_WRITE 0070  
                                     start_initialization 07E8  
                                          _bcd_to_decimal 0F4A  
                         __size_of_PIN_MANAGER_Initialize 0019  
                                           _minute_dozens 0043  
                                           ?_I2C_DO_RESET 0070  
                                  ds18b20_write_bit@value 0070  
                                          ?_ds18b20_start 0070  
                                             ??_I2C_DO_RX 007A  
                                             ??_I2C_DO_TX 007A  
                                       ??_I2C_MasterClose 0070  
                                  rd1RegCompleteHandler@p 0079  
                                  ??_I2C_MasterDisableIrq 0070  
                                             ??_I2C_Close 0070  
                                       ??_I2C_MasterStart 0070  
                                       ??_I2C_MasterWrite 007E  
                          __end_of_I2C_CallbackReturnStop 0DAC  
                                  _I2C_DO_RX_NACK_RESTART 0DFD  
                                        ?_I2C_DO_TX_EMPTY 0070  
                                       ?_ds18b20_read_bit 0070  
                                      _I2C_MasterClearIrq 0DAE  
                          ?_EUSART_SetOverrunErrorHandler 0070  
                                      ??_ds18b20_read_bit 0070  
                                  __size_of_MAX7219_CLEAR 0014  
                                           WriteBits@data 0070  
                              _EUSART_FramingErrorHandler 006D  
                                                ??___bmul 0071  
                                  _EUSART_SetErrorHandler 0E0C  
                                  wr1RegCompleteHandler@p 0079  
                                     ?_I2C_MasterClearIrq 0070  
                             __end_of_I2C_MasterGetRxData 0DC6  
                                             __pdataBANK0 005F  
                                   __end_of_I2C_DO_RX_ACK 0DF8  
                                        _I2C_DO_SEND_STOP 0DEE  
                                       ??_I2C_SetCallback 0073  
                                     I2C_Open@returnValue 0072  
                                      _I2C_MasterSendNack 0DCD  
                                ?_I2C_MasterEnableRestart 0070  
                                  __end_of_bcd_to_decimal 0F5E  
                                       _i2c_fsmStateTable 0800  
                                           ?_Write_Digits 0079  
                                           ?_Write_Comand 0076  
                                   _I2C_DO_SEND_ADR_WRITE 0E43  
                                               ___latbits 0002  
                                           __pcstackBANK0 0050  
                                          ??_I2C_DO_RESET 0070  
                                               _WriteBits 01AE  
                                     ?_I2C_MasterSendNack 0070  
                                       __size_of_debounce 002B  
                            __end_of_I2C_DO_SEND_ADR_READ 0E54  
                                    ??_I2C_MasterClearIrq 0070  
                             __end_of_I2C_DO_ADDRESS_NACK 0206  
                                        _I2C_MasterIsNack 0E24  
                              __size_of_EUSART_Initialize 0022  
                               _I2C_DO_SEND_RESTART_WRITE 0DE4  
                                        _I2C_MasterSetIrq 0DC6  
                                               __pnvBANK0 006B  
                                               __pnvBANK1 00A0  
                                   _rd2RegCompleteHandler 0EF2  
                                   ds18b20_read_bit@value 0378  
                                        ___lwdiv@dividend 0072  
                                  _PIN_MANAGER_Initialize 0016  
                                   _wr2RegCompleteHandler 0F03  
                               ??_I2C_CallbackReturnReset 007A  
                             __end_of_I2C_MasterOperation 009F  
                                    ??_I2C_MasterSendNack 0070  
                                                ?___awdiv 0070  
                                                ?___awmod 0070  
                                                ?___lwdiv 0070  
                                                ?___lwmod 0070  
                                  ??_I2C_MasterSendTxData 0070  
                               __end_of_i2c_fsmStateTable 0820  
                                          ??_Write_Digits 007A  
                                          ??_Write_Comand 0077  
                            __size_of_I2C_DO_SEND_RESTART 0005  
                                         ?_bcd_to_decimal 0070  
                                 I2C_MasterOperation@read 0053  
                                                _I2C_Open 0300  
                                           _MAX7219_CLEAR 0F36  
        rd1RegCompleteHandler@i2c_master_example$F143@ptr 0079  
        wr1RegCompleteHandler@i2c_master_example$F160@ptr 0079  
        rd2RegCompleteHandler@i2c_master_example$F154@ptr 0079  
        wr2RegCompleteHandler@i2c_master_example$F166@ptr 0079  
      rdBlkRegCompleteHandler@i2c_master_example$F177@ptr 0079  
                                              ?_WriteBits 0070  
                                         ??_ds18b20_start 0070  
                                        ___lwdiv@quotient 0075  
                                          __size_of_delay 0017  
                                   __size_of_ds18b20_read 0050  
                                 ??_rd1RegCompleteHandler 007A  
                                    bcd_to_decimal@number 0077  
                                               debounce@i 0074  
                                 ??_wr1RegCompleteHandler 007A  
                  EUSART_SetErrorHandler@interruptHandler 0070  
                                                _LATCbits 010E  
                                               clear_ram0 0E30  
                                                _PIE1bits 0091  
                                       _eusartRxLastError 004D  
                                            edit@position 007D  
                                                _PIR1bits 0011  
                         ??_EUSART_SetFramingErrorHandler 0072  
                                                _PIR2bits 0012  
                                   __end_of_I2C_MasterFsm 0183  
                             __end_of_I2C_DO_RX_NACK_STOP 0DFD  
                                                _SSP1CON1 0215  
                                                _SSP1CON2 0216  
                       _EUSART_DefaultOverrunErrorHandler 0000  
                         __end_of_I2C_MasterEnableRestart 0DBD  
                                                _SSP1STAT 0214  
                                            _hour_unitRow 0044  
                             __size_of_display_digitalCLK 005E  
                          __size_of_I2C_Read1ByteRegister 0036  
                           __end_of_I2C_Read1ByteRegister 0300  
                                   __end_of_I2C_SetBuffer 0EBF  
                                  ?_I2C_DO_SEND_ADR_WRITE 0070  
                                            _ds18b20_read 03BC  
                                I2C_MasterSendTxData@data 0070  
                                          ?_MAX7219_CLEAR 0070  
                              ??_I2C_DO_SEND_RESTART_READ 0070  
                                ?_rdBlkRegCompleteHandler 0079  
                                              _I2C_Poller 0E77  
                     ?_wr1RegCompleteHandler@xxtofl$F1602 0079  
                     ?_rd1RegCompleteHandler@xxtofl$F1611 0079  
                    ??_wr1RegCompleteHandler@xxtofl$F1604 007A  
                    ??_rd1RegCompleteHandler@xxtofl$F1613 007A  
                  ??_rdBlkRegCompleteHandler@xxtofl$F1631 007A  
                   ?_rdBlkRegCompleteHandler@xxtofl$F1629 0079  
                                              _I2C_Status 0020  
                                            ?_I2C_DO_IDLE 0070  
                                           ??_RTC_Display 0059  
                                            ?_I2C_DO_RCEN 0070  
                                  ?_rd2RegCompleteHandler 0079  
                                        ??_I2C_MasterOpen 0070  
                                  ?_wr2RegCompleteHandler 0079  
                                        ??_I2C_MasterStop 0070  
                                ??_I2C_MasterWaitForEvent 0070  
                                        ??_I2C_Initialize 0070  
                                    __end_of_I2C_DO_RESET 0E07  
                                ??_I2C_Write1ByteRegister 0057  
                                 ??_OSCILLATOR_Initialize 0070  
                                     _EUSART_ErrorHandler 00A0  
                                        __size_of___awdiv 005F  
                                    _I2C_DO_SEND_ADR_READ 0E4B  
                                        __size_of___awmod 0053  
                                        __size_of___lwdiv 003C  
                                        __size_of___lwmod 0034  
                        I2C_Read1ByteRegister@returnValue 0058  
                                 __size_of_decimal_to_bcd 002E  
                                         _I2C_MasterClose 0DB1  
                           I2C_SetAddressNackCallback@ptr 0077  
                                         I2C_Open@address 0071  
                                         _I2C_MasterStart 0DB7  
                                         _I2C_MasterWrite 0E07  
                                                _debounce 0183  
                                         ___lwdiv@divisor 0070  
                                             ??_WriteBits 0072  
                                         ___lwdiv@counter 0077  
                                                __ptext10 0183  
                                                __ptext11 0206  
                                                __ptext20 0300  
                                                __ptext12 0571  
                                                __ptext21 0E91  
                                                __ptext13 0F4A  
                                                __ptext30 0DF8  
                                                __ptext22 0E07  
                                                __ptext14 0F5E  
                                                __ptext31 0DF3  
                                                __ptext23 0080  
                                                __ptext15 040C  
                                                __ptext40 0E4B  
                                                __ptext32 0DEE  
                                                __ptext24 0E77  
                                                __ptext16 0512  
                                                __ptext41 0DDA  
                                                __ptext33 0DE9  
                                                __ptext25 0E2A  
                                                __ptext17 0263  
                                                __ptext50 0DAC  
                                                __ptext42 0234  
                                                __ptext34 0DE4  
                                                __ptext26 0158  
                                                __ptext18 02CA  
                                                __ptext51 0DAA  
                                                __ptext43 0DC6  
                                                __ptext35 0DDF  
                                                __ptext27 01DA  
                                                __ptext19 0E84  
                                                __ptext60 0ED0  
                                                __ptext52 0FB8  
                                                __ptext44 0E24  
                                                __ptext36 0E3C  
                                                __ptext28 0E02  
                                                __ptext61 0EBF  
                                                __ptext53 0005  
                                                __ptext45 0DD5  
                                                __ptext37 0376  
                                                __ptext29 0DFD  
                                                __ptext70 0DB1  
                                                __ptext62 0E6A  
                                                __ptext54 0F25  
                                                __ptext46 0DD1  
                                                __ptext38 045F  
                                                __ptext71 0DAE  
                                                __ptext63 0109  
                                                __ptext55 0F14  
                                                __ptext47 0DC3  
                                                __ptext39 0E43  
                                                __ptext80 0E18  
                                                __ptext72 0296  
                                                __ptext64 0EAF  
                                                __ptext56 0FA0  
                                                __ptext48 0DCD  
                                                __ptext81 0E12  
                                                __ptext73 033A  
                                                __ptext65 0DBD  
                                                __ptext57 0F03  
                                                __ptext49 0DC0  
                                                __ptext82 0E0C  
                                                __ptext74 0E9F  
                                                __ptext66 0DBA  
                                                __ptext58 0EF2  
                                                __ptext83 00E5  
                                                __ptext75 0DC9  
                                                __ptext67 0DB7  
                                                __ptext59 0EE1  
                                                __ptext84 00C1  
                                                __ptext76 0016  
                                                __ptext68 0064  
                                                __ptext85 0F36  
                                                __ptext77 0E1E  
                                                __ptext69 0DB4  
                                                __ptext86 012F  
                                                __ptext78 0E54  
                                                __ptext87 01AE  
                                                __ptext79 009F  
                                                _flag_sys 0041  
                                            _SSP1CON1bits 0215  
                                            _SSP1CON2bits 0216  
                     __end_of_I2C_SetDataCompleteCallback 0E77  
                             _I2C_SetDataCompleteCallback 0E6A  
                                 ?_I2C_DO_RX_NACK_RESTART 0070  
                                              _CONTROL_DS 004C  
                                __end_of_I2C_DO_SEND_STOP 0DF3  
                                           __size_of_edit 014C  
                                           __size_of_main 009A  
                                                _int_part 003F  
                                    __end_of_Write_Digits 0158  
                                    __end_of_Write_Comand 00E5  
                                 ?_EUSART_SetErrorHandler 0070  
                                         _I2C_SetCallback 0109  
                           ??_I2C_SetDataCompleteCallback 0078  
                             __size_of_ds18b20_write_byte 0018  
                                                _raw_temp 004E  
                                             _hour_dozens 0045  
                              I2C_Write1ByteRegister@data 0056  
           EUSART_SetOverrunErrorHandler@interruptHandler 0070  
                                     __end_of_RTC_Display 0602  
                                    decimal_to_bcd@number 0079  
                                   ?_I2C_DO_SEND_ADR_READ 0070  
                   __end_of_EUSART_SetFramingErrorHandler 0E18  
                  __size_of_EUSART_SetFramingErrorHandler 0006  
                           _EUSART_SetFramingErrorHandler 0E12  
                                            _SSP1STATbits 0214  
                                __end_of_I2C_MasterIsNack 0E2A  
                                           ?_MAX7219_Init 0070  
                                         ??_MAX7219_CLEAR 007C  
                               __size_of_ds18b20_read_bit 0018  
                                __end_of_I2C_MasterSetIrq 0DC9  
                          __end_of_I2C_DO_RX_NACK_RESTART 0E02  
                                 __size_of_WDT_Initialize 0004  
                                             ?_I2C_Poller 0070  
                        __size_of_I2C_MasterEnableRestart 0003  
                                  rd2RegCompleteHandler@p 0079  
                                        ___lwmod@dividend 0072  
                                 ?_PIN_MANAGER_Initialize 0070  
                          __end_of_EUSART_SetErrorHandler 0E12  
                                     _I2C_DO_SEND_RESTART 0DE9  
                           __size_of_I2C_MasterDisableIrq 0003  
                         __size_of_I2C_MasterWaitForEvent 0006  
                         __size_of_I2C_Write1ByteRegister 0033  
                                  wr2RegCompleteHandler@p 0079  
                                        ??_bcd_to_decimal 0074  
           EUSART_SetFramingErrorHandler@interruptHandler 0070  
                                 __end_of_I2C_MasterClose 0DB4  
                                __size_of_I2C_DO_TX_EMPTY 002F  
                                 __end_of_I2C_MasterStart 0DBA  
                                 __end_of_I2C_MasterWrite 0E0C  
                                          ??_MAX7219_Init 007C  
                                           __pstringtext1 0800  
                                    ?_I2C_DO_SEND_RESTART 0070  
                                         ___lwmod@divisor 0070  
                            __size_of_I2C_MasterGetRxData 0003  
                                         ___lwmod@counter 0075  
                             __size_of_I2C_MasterClearIrq 0003  
                                 __end_of_I2C_SetCallback 012F  
                          __end_of_PIN_MANAGER_Initialize 002F  
                          __size_of_rd1RegCompleteHandler 0011  
                           __end_of_rd1RegCompleteHandler 0EF2  
                                  __size_of_I2C_DO_RX_ACK 0005  
                                             _RTC_Display 0571  
                          __size_of_wr1RegCompleteHandler 0011  
                                   __size_of_I2C_DO_RESET 0005  
                           __end_of_wr1RegCompleteHandler 0EE1  
                            __size_of_I2C_DO_ADDRESS_NACK 002C  
                                    __size_of_I2C_DO_IDLE 0005  
                                    __size_of_I2C_DO_RCEN 0007  
                                      __size_of_I2C_DO_RX 0046  
                                      __size_of_I2C_DO_TX 0055  
